{"remainingRequest":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\store\\modules\\app.js","dependencies":[{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\store\\modules\\app.js","mtime":1545792990733},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\zeyu\\\\zeyu-plus\\\\xboot-plus-front\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport { otherRouter } from '@/router/router';\nimport { router } from '@/router/index';\nimport Util from '@/libs/util';\nimport Cookies from 'js-cookie';\nimport Vue from 'vue';\nvar app = {\n  state: {\n    cachePage: [],\n    lang: '',\n    isFullScreen: false,\n    openedSubmenuArr: [],\n    // 要展开的菜单数组\n    menuTheme: 'dark',\n    // 主题\n    themeColor: '',\n    pageOpenedList: [{\n      title: '首页',\n      path: '',\n      name: 'home_index'\n    }],\n    currentPageName: '',\n    currentPath: [{\n      title: '首页',\n      path: '',\n      name: 'home_index'\n    }],\n    // 面包屑数组\n    menuList: [],\n    routers: [otherRouter],\n    tagsList: _toConsumableArray(otherRouter.children),\n    messageCount: 0,\n    // 在这里定义你不想要缓存的页面的name属性值(参见路由配置router.js)\n    dontCache: ['test', 'test']\n  },\n  mutations: {\n    // 动态添加主界面路由，需要缓存\n    updateAppRouter: function updateAppRouter(state, routes) {\n      var _state$routers;\n\n      (_state$routers = state.routers).push.apply(_state$routers, _toConsumableArray(routes));\n\n      router.addRoutes(routes);\n    },\n    // 动态添加全局路由，不需要缓存\n    updateDefaultRouter: function updateDefaultRouter(state, routes) {\n      router.addRoutes(routes);\n    },\n    setTagsList: function setTagsList(state, list) {\n      var _state$tagsList;\n\n      (_state$tagsList = state.tagsList).push.apply(_state$tagsList, _toConsumableArray(list));\n    },\n    updateMenulist: function updateMenulist(state, routes) {\n      state.menuList = routes;\n    },\n    addOpenSubmenu: function addOpenSubmenu(state, name) {\n      var hasThisName = false;\n      var isEmpty = false;\n\n      if (name.length === 0) {\n        isEmpty = true;\n      }\n\n      if (state.openedSubmenuArr.indexOf(name) > -1) {\n        hasThisName = true;\n      }\n\n      if (!hasThisName && !isEmpty) {\n        state.openedSubmenuArr.push(name);\n      }\n    },\n    closePage: function closePage(state, name) {\n      state.cachePage.forEach(function (item, index) {\n        if (item === name) {\n          state.cachePage.splice(index, 1);\n        }\n      });\n    },\n    initCachepage: function initCachepage(state) {\n      if (localStorage.cachePage) {\n        state.cachePage = JSON.parse(localStorage.cachePage);\n      }\n    },\n    removeTag: function removeTag(state, name) {\n      state.pageOpenedList.map(function (item, index) {\n        if (item.name === name) {\n          state.pageOpenedList.splice(index, 1);\n        }\n      });\n    },\n    pageOpenedList: function pageOpenedList(state, get) {\n      var openedPage = state.pageOpenedList[get.index];\n\n      if (get.argu) {\n        openedPage.argu = get.argu;\n      }\n\n      if (get.query) {\n        openedPage.query = get.query;\n      }\n\n      state.pageOpenedList.splice(get.index, 1, openedPage);\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    clearAllTags: function clearAllTags(state) {\n      state.pageOpenedList.splice(1);\n      state.cachePage.length = 0;\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    clearOtherTags: function clearOtherTags(state, vm) {\n      var currentName = vm.$route.name;\n      var currentIndex = 0;\n      state.pageOpenedList.forEach(function (item, index) {\n        if (item.name === currentName) {\n          currentIndex = index;\n        }\n      });\n\n      if (currentIndex === 0) {\n        state.pageOpenedList.splice(1);\n      } else {\n        state.pageOpenedList.splice(currentIndex + 1);\n        state.pageOpenedList.splice(1, currentIndex - 1);\n      }\n\n      var newCachepage = state.cachePage.filter(function (item) {\n        return item === currentName;\n      });\n      state.cachePage = newCachepage;\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    setOpenedList: function setOpenedList(state) {\n      state.pageOpenedList = localStorage.pageOpenedList ? JSON.parse(localStorage.pageOpenedList) : [otherRouter.children[0]];\n    },\n    setCurrentPath: function setCurrentPath(state, pathArr) {\n      state.currentPath = pathArr;\n    },\n    setCurrentPageName: function setCurrentPageName(state, name) {\n      state.currentPageName = name;\n    },\n    setAvatarPath: function setAvatarPath(state, path) {\n      localStorage.avatorImgPath = path;\n    },\n    switchLang: function switchLang(state, lang) {\n      state.lang = lang;\n      Vue.config.lang = lang;\n    },\n    clearOpenedSubmenu: function clearOpenedSubmenu(state) {\n      state.openedSubmenuArr.length = 0;\n    },\n    setMessageCount: function setMessageCount(state, count) {\n      state.messageCount = count;\n    },\n    increateTag: function increateTag(state, tagObj) {\n      if (!Util.oneOf(tagObj.name, state.dontCache)) {\n        state.cachePage.push(tagObj.name);\n        localStorage.cachePage = JSON.stringify(state.cachePage);\n      }\n\n      state.pageOpenedList.push(tagObj);\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    }\n  }\n};\nexport default app;",{"version":3,"sources":["src\\store\\modules\\app.js"],"names":["otherRouter","router","Util","Cookies","Vue","app","state","cachePage","lang","isFullScreen","openedSubmenuArr","menuTheme","themeColor","pageOpenedList","title","path","name","currentPageName","currentPath","menuList","routers","tagsList","children","messageCount","dontCache","mutations","updateAppRouter","routes","push","addRoutes","updateDefaultRouter","setTagsList","list","updateMenulist","addOpenSubmenu","hasThisName","isEmpty","length","indexOf","closePage","forEach","item","index","splice","initCachepage","localStorage","JSON","parse","removeTag","map","get","openedPage","argu","query","stringify","clearAllTags","clearOtherTags","vm","currentName","$route","currentIndex","newCachepage","filter","setOpenedList","setCurrentPath","pathArr","setCurrentPageName","setAvatarPath","avatorImgPath","switchLang","config","clearOpenedSubmenu","setMessageCount","count","increateTag","tagObj","oneOf"],"mappings":"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","sourceRoot":"D:\\zeyu\\zeyu-plus\\xboot-plus-front","sourcesContent":["import { otherRouter } from '@/router/router';\r\nimport { router } from '@/router/index';\r\nimport Util from '@/libs/util';\r\nimport Cookies from 'js-cookie';\r\nimport Vue from 'vue';\r\n\r\nconst app = {\r\n    state: {\r\n        cachePage: [],\r\n        lang: '',\r\n        isFullScreen: false,\r\n        openedSubmenuArr: [], // 要展开的菜单数组\r\n        menuTheme: 'dark', // 主题\r\n        themeColor: '',\r\n        pageOpenedList: [{\r\n            title: '首页',\r\n            path: '',\r\n            name: 'home_index'\r\n        }],\r\n        currentPageName: '',\r\n        currentPath: [\r\n            {\r\n                title: '首页',\r\n                path: '',\r\n                name: 'home_index'\r\n            }\r\n        ], \r\n        // 面包屑数组\r\n        menuList: [],\r\n        routers: [\r\n            otherRouter\r\n        ],\r\n        tagsList: [...otherRouter.children],\r\n        messageCount: 0,\r\n        // 在这里定义你不想要缓存的页面的name属性值(参见路由配置router.js)\r\n        dontCache: ['test', 'test']\r\n    },\r\n    mutations: {\r\n        // 动态添加主界面路由，需要缓存\r\n        updateAppRouter(state, routes) {\r\n            state.routers.push(...routes);\r\n            router.addRoutes(routes);\r\n        },\r\n        // 动态添加全局路由，不需要缓存\r\n        updateDefaultRouter(state, routes) {\r\n            router.addRoutes(routes);\r\n        },\r\n        setTagsList(state, list) {\r\n            state.tagsList.push(...list);\r\n        },\r\n        updateMenulist(state, routes) {\r\n            state.menuList = routes;\r\n        },\r\n        addOpenSubmenu(state, name) {\r\n            let hasThisName = false;\r\n            let isEmpty = false;\r\n            if (name.length === 0) {\r\n                isEmpty = true;\r\n            }\r\n            if (state.openedSubmenuArr.indexOf(name) > -1) {\r\n                hasThisName = true;\r\n            }\r\n            if (!hasThisName && !isEmpty) {\r\n                state.openedSubmenuArr.push(name);\r\n            }\r\n        },\r\n        closePage(state, name) {\r\n            state.cachePage.forEach((item, index) => {\r\n                if (item === name) {\r\n                    state.cachePage.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        initCachepage(state) {\r\n            if (localStorage.cachePage) {\r\n                state.cachePage = JSON.parse(localStorage.cachePage);\r\n            }\r\n        },\r\n        removeTag(state, name) {\r\n            state.pageOpenedList.map((item, index) => {\r\n                if (item.name === name) {\r\n                    state.pageOpenedList.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        pageOpenedList(state, get) {\r\n            let openedPage = state.pageOpenedList[get.index];\r\n            if (get.argu) {\r\n                openedPage.argu = get.argu;\r\n            }\r\n            if (get.query) {\r\n                openedPage.query = get.query;\r\n            }\r\n            state.pageOpenedList.splice(get.index, 1, openedPage);\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        clearAllTags(state) {\r\n            state.pageOpenedList.splice(1);\r\n            state.cachePage.length = 0;\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        clearOtherTags(state, vm) {\r\n            let currentName = vm.$route.name;\r\n            let currentIndex = 0;\r\n            state.pageOpenedList.forEach((item, index) => {\r\n                if (item.name === currentName) {\r\n                    currentIndex = index;\r\n                }\r\n            });\r\n            if (currentIndex === 0) {\r\n                state.pageOpenedList.splice(1);\r\n            } else {\r\n                state.pageOpenedList.splice(currentIndex + 1);\r\n                state.pageOpenedList.splice(1, currentIndex - 1);\r\n            }\r\n            let newCachepage = state.cachePage.filter(item => {\r\n                return item === currentName;\r\n            });\r\n            state.cachePage = newCachepage;\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        setOpenedList(state) {\r\n            state.pageOpenedList = localStorage.pageOpenedList ? JSON.parse(localStorage.pageOpenedList) : [otherRouter.children[0]];\r\n        },\r\n        setCurrentPath(state, pathArr) {\r\n            state.currentPath = pathArr;\r\n        },\r\n        setCurrentPageName(state, name) {\r\n            state.currentPageName = name;\r\n        },\r\n        setAvatarPath(state, path) {\r\n            localStorage.avatorImgPath = path;\r\n        },\r\n        switchLang(state, lang) {\r\n            state.lang = lang;\r\n            Vue.config.lang = lang;\r\n        },\r\n        clearOpenedSubmenu(state) {\r\n            state.openedSubmenuArr.length = 0;\r\n        },\r\n        setMessageCount(state, count) {\r\n            state.messageCount = count;\r\n        },\r\n        increateTag(state, tagObj) {\r\n            if (!Util.oneOf(tagObj.name, state.dontCache)) {\r\n                state.cachePage.push(tagObj.name);\r\n                localStorage.cachePage = JSON.stringify(state.cachePage);\r\n            }\r\n            state.pageOpenedList.push(tagObj);\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        }\r\n    }\r\n};\r\n\r\nexport default app;\r\n"]}]}