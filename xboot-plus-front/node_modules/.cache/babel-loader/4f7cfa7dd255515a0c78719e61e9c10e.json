{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\complex-table\\complexTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\complex-table\\complexTable.vue","mtime":1545792990785},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nexport default {\n  name: \"complex-table\",\n  components: {\n    circleLoading: circleLoading\n  },\n  data: function data() {\n    var _this = this;\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error(\"密码长度不得小于6位\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      accessToken: {},\n      // 图片上传接口所需token\n      loading: true,\n      // 表单加载状态\n      operationLoading: false,\n      // 操作加载状态\n      modalExportAll: false,\n      // 显示导出全部数据\n      loadingExport: true,\n      // 导出全部数据状态\n      drop: false,\n      // 搜索展开标识\n      dropDownContent: \"展开\",\n      // 搜索展开标识文字\n      dropDownIcon: \"ios-arrow-down\",\n      //搜索展开图标\n      selectCount: 0,\n      // 多选计数\n      selectList: [],\n      // 多选数据\n      viewImage: false,\n      // 图片预览标识\n      category: [// 搜索类别数据\n      ],\n      selectCat: [],\n      // 搜索选择类别modal\n      dataCat: [],\n      // 编辑添加类别数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        categoryId: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 10,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\",\n        // 默认排序方式\n        startDate: \"\",\n        // 起始时间\n        endDate: \"\" // 终止时间\n\n      },\n      selectDate: null,\n      // 选择日期绑定modal\n      modalType: 0,\n      // 添加或编辑标识\n      modalVisible: false,\n      // 添加或编辑显示\n      modalTitle: \"\",\n      // 添加或编辑标题\n      form: {\n        // 添加或编辑表单对象初始化数据\n        type: 0,\n        avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\n        categoryId: \"\",\n        categoryTitle: \"\"\n      },\n      errorPass: \"\",\n      // 密码错误提示\n      formValidate: {\n        // 表单验证规则\n        name: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      // 添加或编辑提交状态\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"名称\",\n        key: \"name\",\n        width: 150,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 150,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"所属类别\",\n        key: \"categoryTitle\",\n        width: 150\n      }, {\n        title: \"类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 150,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.type === 0) {\n            re = \"类型1\";\n          } else if (params.row.type === 1) {\n            re = \"类型2\";\n          }\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 150,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"success\"\n              }\n            }, \"正常启用\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"error\"\n              }\n            }, \"禁用\")]);\n          }\n        },\n        filters: [{\n          label: \"正常启用\",\n          value: 0\n        }, {\n          label: \"禁用\",\n          value: -1\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 0) {\n            return row.status === 0;\n          } else if (value === -1) {\n            return row.status === -1;\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 180\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 230,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          var enableOrDisable = \"\";\n\n          if (params.row.status === 0) {\n            enableOrDisable = h(\"Button\", {\n              props: {\n                size: \"small\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.disable(params.row);\n                }\n              }\n            }, \"禁用\");\n          } else {\n            enableOrDisable = h(\"Button\", {\n              props: {\n                type: \"success\",\n                size: \"small\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.enable(params.row);\n                }\n              }\n            }, \"启用\");\n          }\n\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), enableOrDisable, h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      exportColumns: [{\n        title: \"名称\",\n        key: \"name\"\n      }, {\n        title: \"头像\",\n        key: \"avatar\"\n      }, {\n        title: \"所属类别\",\n        key: \"categoryTitle\"\n      }, {\n        title: \"类型\",\n        key: \"type\"\n      }, {\n        title: \"状态\",\n        key: \"status\"\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\"\n      }],\n      data: [],\n      // 表单数据\n      exportData: [],\n      // 导出数据\n      total: 0 // 表单数据总数\n\n    };\n  },\n  methods: {\n    init: function init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n      this.getDataList(); // 初始化搜索框级联分类数据\n\n      this.initCategoryData(); // 初始化编辑添加树形分类数据\n\n      this.initCategoryForEdit();\n    },\n    initCategoryData: function initCategoryData() {\n      // this.getRequest(\"级联一级数据请求路径，如/category/getByParentId/0\").then(res => {\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //         e.loading = false;\n      //         e.children = [];\n      //       } else {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //       }\n      //     });\n      //     this.category = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.category = [{\n        label: \"分类1\",\n        value: \"1\",\n        loading: false,\n        children: [{\n          label: \"二级分类\",\n          value: \"1.1\"\n        }]\n      }, {\n        label: \"分类2\",\n        value: \"2\"\n      }];\n    },\n    initCategoryForEdit: function initCategoryForEdit() {\n      // this.getRequest(\"树形一级数据请求路径，如/category/getByParentId/0\").then(res => {\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     this.dataCat = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.dataCat = [{\n        title: \"分类1\",\n        id: \"1\",\n        loading: false,\n        children: [{\n          title: \"二级分类\",\n          id: \"2\"\n        }]\n      }, {\n        title: \"分类2\",\n        id: \"3\"\n      }];\n    },\n    loadData: function loadData(item, callback) {// 异步加载搜索框级联类别子节点数据\n      // item.loading = true;\n      // this.getRequest(\"请求路径，如/category/getByParentId/\" + item.value).then(res => {\n      //   item.loading = false;\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //         e.loading = false;\n      //         e.children = [];\n      //       } else {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //       }\n      //       if (e.status === -1) {\n      //         e.label = \"[已禁用] \" + e.label;\n      //         e.disabled = true;\n      //       }\n      //     });\n      //     item.children = res.result;\n      //     callback();\n      //   }\n      // });\n    },\n    loadDataTree: function loadDataTree(item, callback) {// 异步加载编辑添加选择类别树子节点数据\n      // this.getRequest(\"请求路径，如/category/getByParentId/\" + item.id).then(res => {\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     callback(res.result);\n      //   }\n      // });\n    },\n    selectTree: function selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (var attr in v[0]) {\n          if (v[0][attr] === null) {\n            v[0][attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v[0]);\n        var data = JSON.parse(str);\n        this.form.categoryId = data.id;\n        this.form.categoryTitle = data.title;\n      }\n    },\n    clearSelectCat: function clearSelectCat() {\n      this.form.categoryId = \"\";\n      this.form.categoryTitle = \"\";\n    },\n    handleChangeCat: function handleChangeCat(value, selectedData) {\n      // 获取最后一个值\n      if (value && value.length > 0) {\n        this.searchForm.categoryId = value[value.length - 1];\n      } else {\n        this.searchForm.categoryId = \"\";\n      }\n    },\n    handleChangeUserFormDep: function handleChangeUserFormDep(value, selectedData) {\n      // 获取最后一个值\n      if (value && value.length > 0) {\n        this.form.categoryId = value[value.length - 1];\n      } else {\n        this.form.categoryId = \"\";\n      }\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    selectDateRange: function selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList: function getDataList() {\n      // 多条件搜索获取表格数据\n      this.loading = true; // this.getRequest(\"请求路径\", this.searchForm).then(res => {\n      //   this.loading = false;\n      //   if (res.success === true) {\n      //     this.data = res.result.content;\n      //     this.total = res.result.totalElements;\n      //   }\n      // });\n      // 以下为模拟数据\n\n      this.data = [{\n        id: \"1\",\n        name: \"X-BOOT\",\n        avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\n        categoryTitle: \"分类1\",\n        categoryId: 1,\n        type: 0,\n        status: 0,\n        createTime: \"2018-08-08 00:08:00\"\n      }, {\n        id: \"2\",\n        name: \"Exrick\",\n        avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\n        categoryTitle: \"分类2\",\n        categoryId: 2,\n        type: 1,\n        status: -1,\n        createTime: \"2018-08-08 00:08:00\"\n      }];\n      this.exportData = this.data;\n      this.total = this.data.length;\n      this.loading = false;\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectCat = [];\n      this.searchForm.categoryId = \"\"; // 重新加载数据\n\n      this.getDataList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getDataList();\n    },\n    handleDropdown: function handleDropdown(name) {\n      var _this2 = this;\n\n      if (name === \"refresh\") {\n        this.getDataList();\n      } else if (name === \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n\n        this.$Modal.confirm({\n          title: \"确认导出\",\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\n          onOk: function onOk() {\n            _this2.$refs.exportTable.exportCsv({\n              filename: \"导出数据\"\n            });\n          }\n        });\n      } else if (name === \"exportAll\") {\n        this.modalExportAll = true;\n      }\n    },\n    exportAll: function exportAll() {\n      // this.getRequest(\"请求获取全部数据接口路径\").then(res => {\n      //   this.modalExportAll = false;\n      //   if (res.success) {\n      //     this.exportData = res.result;\n      //     setTimeout(() => {\n      //       this.$refs.exportTable.exportCsv({\n      //         filename: \"用户全部数据\"\n      //       });\n      //     }, 1000);\n      //   }\n      // });\n      // 模拟成功\n      this.modalExportAll = false;\n      this.$refs.exportTable.exportCsv({\n        filename: \"用户全部数据\"\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.modalVisible = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (_this3.modalType === 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete _this3.form.id;\n            delete _this3.form.status;\n\n            if (_this3.form.password == \"\" || _this3.form.password == undefined) {\n              _this3.errorPass = \"密码不能为空\";\n              return;\n            }\n\n            if (_this3.form.password.length < 6) {\n              _this3.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n\n            _this3.submitLoading = true; // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success === true) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n\n            _this3.submitLoading = false;\n\n            _this3.$Message.success(\"操作成功\");\n\n            _this3.modalVisible = false;\n          } else if (_this3.modalType === 1) {\n            // 编辑\n            _this3.submitLoading = true; // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success === true) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n\n            _this3.submitLoading = false;\n\n            _this3.$Message.success(\"操作成功\");\n\n            _this3.modalVisible = false;\n          }\n        }\n      });\n    },\n    viewPic: function viewPic() {\n      this.viewImage = true;\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc: \"所选文件‘ \" + file.name + \" ’格式不正确, 请选择 .jpg .jpeg .png .gif格式文件\"\n      });\n    },\n    handleMaxSize: function handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    beforeUpload: function beforeUpload() {\n      // if (!this.$route.meta.permTypes.includes(\"upload\")) {\n      //   this.$Message.error(\"抱歉您没有上传权限\");\n      //   return false;\n      // }\n      return true;\n    },\n    handleSuccess: function handleSuccess(res, file) {\n      if (res.success === true) {\n        file.url = res.result;\n        this.form.avatar = res.result;\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError: function handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    add: function add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑\";\n      this.$refs.form.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] === null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    enable: function enable(v) {\n      var _this4 = this;\n\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        // 记得确认修改此处\n        content: \"您确认要启用 \" + v.name + \" ?\",\n        onOk: function onOk() {\n          // this.operationLoading = true;\n          // this.postRequest(\"请求路径/\" + v.id).then(res => {\n          // this.operationLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          //模拟成功\n          _this4.$Message.success(\"操作成功\");\n\n          _this4.getDataList();\n        }\n      });\n    },\n    disable: function disable(v) {\n      var _this5 = this;\n\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        // 记得确认修改此处\n        content: \"您确认要禁用 \" + v.name + \" ?\",\n        onOk: function onOk() {\n          // this.operationLoading = true;\n          // this.postRequest(\"请求路径/\" + v.id).then(res => {\n          // this.operationLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          //模拟成功\n          _this5.$Message.success(\"操作成功\");\n\n          _this5.getDataList();\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this6 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        onOk: function onOk() {\n          // 删除\n          // this.operationLoading = true;\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + v.id).then(res => {\n          // this.operationLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n          _this6.$Message.success(\"操作成功\");\n\n          _this6.getDataList();\n        }\n      });\n    },\n    dropDown: function dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n\n      this.drop = !this.drop;\n    },\n    showSelect: function showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll: function delAll() {\n      var _this7 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this7.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1); // 批量删除\n          // this.operationLoading = true;\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + ids).then(res => {\n          // this.operationLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.clearSelectAll();\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n\n          _this7.$Message.success(\"操作成功\");\n\n          _this7.clearSelectAll();\n\n          _this7.getDataList();\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["complexTable.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n@import \"./complexTable.less\";\r\n</style>\r\n<template>\r\n    <div class=\"search\">\r\n        <Row>\r\n            <Col>\r\n                <Card>\r\n                    <Row>\r\n                        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\">\r\n                            <Form-item label=\"名称\" prop=\"name\">\r\n                              <Input type=\"text\" v-model=\"searchForm.name\" placeholder=\"请输入\" clearable style=\"width: 200px\"/>\r\n                            </Form-item>\r\n                            <Form-item label=\"所属类别\" prop=\"category\">\r\n                              <Cascader v-model=\"selectCat\" :data=\"category\" :load-data=\"loadData\" @on-change=\"handleChangeCat\" change-on-select filterable placeholder=\"请选择或输入搜索类别\" style=\"width: 200px\"></Cascader>\r\n                            </Form-item>\r\n                            <span v-if=\"drop\">\r\n                              <Form-item label=\"状态\" prop=\"status\">\r\n                                <Select v-model=\"searchForm.status\" placeholder=\"请选择\" clearable style=\"width: 200px\">\r\n                                  <Option value=\"0\">正常</Option>\r\n                                  <Option value=\"-1\">禁用</Option>\r\n                                </Select>\r\n                              </Form-item>\r\n                              <Form-item label=\"创建时间\">\r\n                                <DatePicker v-model=\"selectDate\" type=\"daterange\" format=\"yyyy-MM-dd\" clearable @on-change=\"selectDateRange\" placeholder=\"选择起始时间\" style=\"width: 200px\"></DatePicker>\r\n                              </Form-item>\r\n                            </span>\r\n                            <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n                              <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n                              <Button @click=\"handleReset\" >重置</Button>\r\n                              <a class=\"drop-down\" @click=\"dropDown\">{{dropDownContent}}\r\n                                <Icon :type=\"dropDownIcon\"></Icon>\r\n                              </a>\r\n                            </Form-item>\r\n                        </Form>\r\n                    </Row>\r\n                    <Row class=\"operation\">\r\n                        <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加</Button>\r\n                        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n                        <Dropdown @on-click=\"handleDropdown\">\r\n                          <Button>\r\n                              更多操作\r\n                              <Icon type=\"md-arrow-dropdown\" />\r\n                          </Button>\r\n                          <DropdownMenu slot=\"list\">\r\n                              <DropdownItem name=\"refresh\">刷新</DropdownItem>\r\n                              <DropdownItem name=\"exportData\">导出所选数据</DropdownItem>\r\n                              <DropdownItem name=\"exportAll\">导出全部数据</DropdownItem>\r\n                          </DropdownMenu>\r\n                        </Dropdown>\r\n                        <circleLoading v-if=\"operationLoading\"/>\r\n                    </Row>\r\n                    <Row>\r\n                        <Alert show-icon>\r\n                            已选择 <span class=\"select-count\">{{selectCount}}</span> 项\r\n                            <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n                        </Alert>\r\n                    </Row>\r\n                    <Row>\r\n                        <Table :loading=\"loading\" border :columns=\"columns\" :data=\"data\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"showSelect\" ref=\"table\"></Table>\r\n                        <Table :columns=\"exportColumns\" :data=\"exportData\" ref=\"exportTable\" style=\"display:none\"></Table>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n                        <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[10,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable='false' :width=\"500\" :styles=\"{top: '30px'}\">\r\n            <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\r\n                <FormItem label=\"名称\" prop=\"name\">\r\n                    <Input v-model=\"form.name\" autocomplete=\"off\"/>\r\n                </FormItem>\r\n                <FormItem label=\"密码\" prop=\"password\" v-if=\"modalType===0\" :error=\"errorPass\">\r\n                    <Input type=\"password\" v-model=\"form.password\" autocomplete=\"off\"/>\r\n                </FormItem>\r\n                <Form-item label=\"头像\" prop=\"avatar\">\r\n                  <Poptip trigger=\"hover\" title=\"图片预览\" placement=\"right\" width=\"350\">\r\n                      <Input v-model=\"form.avatar\" placeholder=\"可直接填入网络图片链接\" clearable/>\r\n                      <div slot=\"content\">\r\n                        <img :src=\"form.avatar\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n                        <a @click=\"viewPic()\" style=\"margin-top:5px;text-align:right;display:block\">查看原图</a>\r\n                      </div>\r\n                  </Poptip>\r\n                  <!-- 请记得修改图片上传请求url xboot需要header中带入token验证用户权限-->\r\n                  <Upload action=\"你的图片上传完整请求路径，例如：/xboot/upload/file\"\r\n                          :headers=\"accessToken\" \r\n                          :on-success=\"handleSuccess\"\r\n                          :on-error=\"handleError\"\r\n                          :format=\"['jpg','jpeg','png','gif']\"\r\n                          :max-size=\"5120\"\r\n                          :on-format-error=\"handleFormatError\"\r\n                          :on-exceeded-size=\"handleMaxSize\"\r\n                          :before-upload=\"beforeUpload\"\r\n                          ref=\"up\"\r\n                          class=\"upload\">\r\n                    <Button icon=\"ios-cloud-upload-outline\">上传图片</Button>\r\n                  </Upload>\r\n                </Form-item>\r\n                <Form-item label=\"所属类别\" prop=\"categoryTitle\">\r\n                  <Poptip trigger=\"click\" placement=\"right\" title=\"选择类别\" width=\"250\">\r\n                    <div style=\"display:flex;\">\r\n                      <Input v-model=\"form.categoryTitle\" readonly style=\"margin-right:10px;\"/>\r\n                      <Button icon=\"md-trash\" @click=\"clearSelectCat\">清空已选</Button>\r\n                    </div>\r\n                    <div slot=\"content\">\r\n                      <Tree :data=\"dataCat\" :load-data=\"loadDataTree\" @on-select-change=\"selectTree\"></Tree>\r\n                      <Spin size=\"large\" fix v-if=\"loading\"></Spin>\r\n                    </div>\r\n                  </Poptip>\r\n                </Form-item>\r\n                <FormItem label=\"类型\" prop=\"type\">\r\n                  <Select v-model=\"form.type\" placeholder=\"请选择\">\r\n                    <Option :value=\"0\">类型1</Option>\r\n                    <Option :value=\"1\">类型2</Option>\r\n                  </Select>\r\n                </FormItem>\r\n            </Form>\r\n            <div slot=\"footer\">\r\n                <Button type=\"text\" @click=\"handleCancel\">取消</Button>\r\n                <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">提交</Button>\r\n            </div>\r\n        </Modal>\r\n        <Modal title=\"图片预览\" v-model=\"viewImage\" :styles=\"{top: '30px'}\">\r\n          <img :src=\"form.avatar\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n        </Modal>\r\n        <Modal\r\n            v-model=\"modalExportAll\"\r\n            title=\"确认导出\"\r\n            :loading=\"loadingExport\"\r\n            @on-ok=\"exportAll\">\r\n            <p>您确认要导出全部 {{total}} 条数据？</p>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport circleLoading from \"../../my-components/circle-loading.vue\";\r\nexport default {\r\n  name: \"complex-table\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error(\"密码长度不得小于6位\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      accessToken: {}, // 图片上传接口所需token\r\n      loading: true, // 表单加载状态\r\n      operationLoading: false, // 操作加载状态\r\n      modalExportAll: false, // 显示导出全部数据\r\n      loadingExport: true, // 导出全部数据状态\r\n      drop: false, // 搜索展开标识\r\n      dropDownContent: \"展开\", // 搜索展开标识文字\r\n      dropDownIcon: \"ios-arrow-down\", //搜索展开图标\r\n      selectCount: 0, // 多选计数\r\n      selectList: [], // 多选数据\r\n      viewImage: false, // 图片预览标识\r\n      category: [\r\n        // 搜索类别数据\r\n      ],\r\n      selectCat: [], // 搜索选择类别modal\r\n      dataCat: [], // 编辑添加类别数据\r\n      searchForm: {\r\n        // 搜索框对应data对象\r\n        name: \"\",\r\n        categoryId: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\", // 默认排序方式\r\n        startDate: \"\", // 起始时间\r\n        endDate: \"\" // 终止时间\r\n      },\r\n      selectDate: null, // 选择日期绑定modal\r\n      modalType: 0, // 添加或编辑标识\r\n      modalVisible: false, // 添加或编辑显示\r\n      modalTitle: \"\", // 添加或编辑标题\r\n      form: {\r\n        // 添加或编辑表单对象初始化数据\r\n        type: 0,\r\n        avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\r\n        categoryId: \"\",\r\n        categoryTitle: \"\"\r\n      },\r\n      errorPass: \"\", // 密码错误提示\r\n      formValidate: {\r\n        // 表单验证规则\r\n        name: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\r\n      },\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      columns: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"name\",\r\n          width: 150,\r\n          sortable: true,\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 150,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属类别\",\r\n          key: \"categoryTitle\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 150,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 0) {\r\n              re = \"类型1\";\r\n            } else if (params.row.type === 1) {\r\n              re = \"类型2\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 150,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"success\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"error\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          },\r\n          filters: [\r\n            {\r\n              label: \"正常启用\",\r\n              value: 0\r\n            },\r\n            {\r\n              label: \"禁用\",\r\n              value: -1\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.status === 0;\r\n            } else if (value === -1) {\r\n              return row.status === -1;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 180\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 230,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            let enableOrDisable = \"\";\r\n            if (params.row.status === 0) {\r\n              enableOrDisable = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.disable(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"禁用\"\r\n              );\r\n            } else {\r\n              enableOrDisable = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"success\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.enable(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"启用\"\r\n              );\r\n            }\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              enableOrDisable,\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      exportColumns: [\r\n        {\r\n          title: \"名称\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\"\r\n        },\r\n        {\r\n          title: \"所属类别\",\r\n          key: \"categoryTitle\"\r\n        },\r\n        {\r\n          title: \"类型\",\r\n          key: \"type\"\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\"\r\n        }\r\n      ],\r\n      data: [], // 表单数据\r\n      exportData: [], // 导出数据\r\n      total: 0 // 表单数据总数\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n      this.getDataList();\r\n      // 初始化搜索框级联分类数据\r\n      this.initCategoryData();\r\n      // 初始化编辑添加树形分类数据\r\n      this.initCategoryForEdit();\r\n    },\r\n    initCategoryData() {\r\n      // this.getRequest(\"级联一级数据请求路径，如/category/getByParentId/0\").then(res => {\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.value = e.id;\r\n      //         e.label = e.title;\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       } else {\r\n      //         e.value = e.id;\r\n      //         e.label = e.title;\r\n      //       }\r\n      //     });\r\n      //     this.category = res.result;\r\n      //   }\r\n      // });\r\n      // 模拟请求成功\r\n      this.category = [\r\n        {\r\n          label: \"分类1\",\r\n          value: \"1\",\r\n          loading: false,\r\n          children: [\r\n            {\r\n              label: \"二级分类\",\r\n              value: \"1.1\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: \"分类2\",\r\n          value: \"2\"\r\n        }\r\n      ];\r\n    },\r\n    initCategoryForEdit() {\r\n      // this.getRequest(\"树形一级数据请求路径，如/category/getByParentId/0\").then(res => {\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     this.dataCat = res.result;\r\n      //   }\r\n      // });\r\n      // 模拟请求成功\r\n      this.dataCat = [\r\n        {\r\n          title: \"分类1\",\r\n          id: \"1\",\r\n          loading: false,\r\n          children: [\r\n            {\r\n              title: \"二级分类\",\r\n              id: \"2\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: \"分类2\",\r\n          id: \"3\"\r\n        }\r\n      ];\r\n    },\r\n    loadData(item, callback) {\r\n      // 异步加载搜索框级联类别子节点数据\r\n      // item.loading = true;\r\n      // this.getRequest(\"请求路径，如/category/getByParentId/\" + item.value).then(res => {\r\n      //   item.loading = false;\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.value = e.id;\r\n      //         e.label = e.title;\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       } else {\r\n      //         e.value = e.id;\r\n      //         e.label = e.title;\r\n      //       }\r\n      //       if (e.status === -1) {\r\n      //         e.label = \"[已禁用] \" + e.label;\r\n      //         e.disabled = true;\r\n      //       }\r\n      //     });\r\n      //     item.children = res.result;\r\n      //     callback();\r\n      //   }\r\n      // });\r\n    },\r\n    loadDataTree(item, callback) {\r\n      // 异步加载编辑添加选择类别树子节点数据\r\n      // this.getRequest(\"请求路径，如/category/getByParentId/\" + item.id).then(res => {\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     callback(res.result);\r\n      //   }\r\n      // });\r\n    },\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.form.categoryId = data.id;\r\n        this.form.categoryTitle = data.title;\r\n      }\r\n    },\r\n    clearSelectCat() {\r\n      this.form.categoryId = \"\";\r\n      this.form.categoryTitle = \"\";\r\n    },\r\n    handleChangeCat(value, selectedData) {\r\n      // 获取最后一个值\r\n      if (value && value.length > 0) {\r\n        this.searchForm.categoryId = value[value.length - 1];\r\n      } else {\r\n        this.searchForm.categoryId = \"\";\r\n      }\r\n    },\r\n    handleChangeUserFormDep(value, selectedData) {\r\n      // 获取最后一个值\r\n      if (value && value.length > 0) {\r\n        this.form.categoryId = value[value.length - 1];\r\n      } else {\r\n        this.form.categoryId = \"\";\r\n      }\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getDataList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getDataList();\r\n    },\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    getDataList() {\r\n      // 多条件搜索获取表格数据\r\n      this.loading = true;\r\n      // this.getRequest(\"请求路径\", this.searchForm).then(res => {\r\n      //   this.loading = false;\r\n      //   if (res.success === true) {\r\n      //     this.data = res.result.content;\r\n      //     this.total = res.result.totalElements;\r\n      //   }\r\n      // });\r\n      // 以下为模拟数据\r\n      this.data = [\r\n        {\r\n          id: \"1\",\r\n          name: \"X-BOOT\",\r\n          avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\r\n          categoryTitle: \"分类1\",\r\n          categoryId: 1,\r\n          type: 0,\r\n          status: 0,\r\n          createTime: \"2018-08-08 00:08:00\"\r\n        },\r\n        {\r\n          id: \"2\",\r\n          name: \"Exrick\",\r\n          avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\r\n          categoryTitle: \"分类2\",\r\n          categoryId: 2,\r\n          type: 1,\r\n          status: -1,\r\n          createTime: \"2018-08-08 00:08:00\"\r\n        }\r\n      ];\r\n      this.exportData = this.data;\r\n      this.total = this.data.length;\r\n      this.loading = false;\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getDataList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      this.selectCat = [];\r\n      this.searchForm.categoryId = \"\";\r\n      // 重新加载数据\r\n      this.getDataList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getDataList();\r\n    },\r\n    handleDropdown(name) {\r\n      if (name === \"refresh\") {\r\n        this.getDataList();\r\n      } else if (name === \"exportData\") {\r\n        if (this.selectCount <= 0) {\r\n          this.$Message.warning(\"您还未选择要导出的数据\");\r\n          return;\r\n        }\r\n        this.$Modal.confirm({\r\n          title: \"确认导出\",\r\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\r\n          onOk: () => {\r\n            this.$refs.exportTable.exportCsv({\r\n              filename: \"导出数据\"\r\n            });\r\n          }\r\n        });\r\n      } else if (name === \"exportAll\") {\r\n        this.modalExportAll = true;\r\n      }\r\n    },\r\n    exportAll() {\r\n      // this.getRequest(\"请求获取全部数据接口路径\").then(res => {\r\n      //   this.modalExportAll = false;\r\n      //   if (res.success) {\r\n      //     this.exportData = res.result;\r\n      //     setTimeout(() => {\r\n      //       this.$refs.exportTable.exportCsv({\r\n      //         filename: \"用户全部数据\"\r\n      //       });\r\n      //     }, 1000);\r\n      //   }\r\n      // });\r\n      // 模拟成功\r\n      this.modalExportAll = false;\r\n      this.$refs.exportTable.exportCsv({\r\n        filename: \"用户全部数据\"\r\n      });\r\n    },\r\n    handleCancel() {\r\n      this.modalVisible = false;\r\n    },\r\n    handleSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (this.modalType === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.form.id;\r\n            delete this.form.status;\r\n            if (this.form.password == \"\" || this.form.password == undefined) {\r\n              this.errorPass = \"密码不能为空\";\r\n              return;\r\n            }\r\n            if (this.form.password.length < 6) {\r\n              this.errorPass = \"密码长度不得少于6位\";\r\n              return;\r\n            }\r\n            this.submitLoading = true;\r\n            // this.postRequest(\"请求路径\", this.form).then(res => {\r\n            //   this.submitLoading = false;\r\n            //   if (res.success === true) {\r\n            //     this.$Message.success(\"操作成功\");\r\n            //     this.getDataList();\r\n            //     this.modalVisible = false;\r\n            //   }\r\n            // });\r\n            // 模拟成功\r\n            this.submitLoading = false;\r\n            this.$Message.success(\"操作成功\");\r\n            this.modalVisible = false;\r\n          } else if (this.modalType === 1) {\r\n            // 编辑\r\n            this.submitLoading = true;\r\n            // this.postRequest(\"请求路径\", this.form).then(res => {\r\n            //   this.submitLoading = false;\r\n            //   if (res.success === true) {\r\n            //     this.$Message.success(\"操作成功\");\r\n            //     this.getDataList();\r\n            //     this.modalVisible = false;\r\n            //   }\r\n            // });\r\n            // 模拟成功\r\n            this.submitLoading = false;\r\n            this.$Message.success(\"操作成功\");\r\n            this.modalVisible = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    viewPic() {\r\n      this.viewImage = true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 .jpg .jpeg .png .gif格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\r\n      });\r\n    },\r\n    beforeUpload() {\r\n      // if (!this.$route.meta.permTypes.includes(\"upload\")) {\r\n      //   this.$Message.error(\"抱歉您没有上传权限\");\r\n      //   return false;\r\n      // }\r\n      return true;\r\n    },\r\n    handleSuccess(res, file) {\r\n      if (res.success === true) {\r\n        file.url = res.result;\r\n        this.form.avatar = res.result;\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    add() {\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加\";\r\n      this.$refs.form.resetFields();\r\n      this.modalVisible = true;\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑\";\r\n      this.$refs.form.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.modalVisible = true;\r\n    },\r\n    enable(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认启用\",\r\n        // 记得确认修改此处\r\n        content: \"您确认要启用 \" + v.name + \" ?\",\r\n        onOk: () => {\r\n          // this.operationLoading = true;\r\n          // this.postRequest(\"请求路径/\" + v.id).then(res => {\r\n          // this.operationLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"操作成功\");\r\n          //     this.getDataList();\r\n          //   }\r\n          // });\r\n          //模拟成功\r\n          this.$Message.success(\"操作成功\");\r\n          this.getDataList();\r\n        }\r\n      });\r\n    },\r\n    disable(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认禁用\",\r\n        // 记得确认修改此处\r\n        content: \"您确认要禁用 \" + v.name + \" ?\",\r\n        onOk: () => {\r\n          // this.operationLoading = true;\r\n          // this.postRequest(\"请求路径/\" + v.id).then(res => {\r\n          // this.operationLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"操作成功\");\r\n          //     this.getDataList();\r\n          //   }\r\n          // });\r\n          //模拟成功\r\n          this.$Message.success(\"操作成功\");\r\n          this.getDataList();\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        // 记得确认修改此处\r\n        content: \"您确认要删除 \" + v.name + \" ?\",\r\n        onOk: () => {\r\n          // 删除\r\n          // this.operationLoading = true;\r\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + v.id).then(res => {\r\n          // this.operationLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"操作成功\");\r\n          //     this.getDataList();\r\n          //   }\r\n          // });\r\n          // 模拟请求成功\r\n          this.$Message.success(\"操作成功\");\r\n          this.getDataList();\r\n        }\r\n      });\r\n    },\r\n    dropDown() {\r\n      if (this.drop) {\r\n        this.dropDownContent = \"展开\";\r\n        this.dropDownIcon = \"ios-arrow-down\";\r\n      } else {\r\n        this.dropDownContent = \"收起\";\r\n        this.dropDownIcon = \"ios-arrow-up\";\r\n      }\r\n      this.drop = !this.drop;\r\n    },\r\n    showSelect(e) {\r\n      this.exportData = e;\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          // 批量删除\r\n          // this.operationLoading = true;\r\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + ids).then(res => {\r\n          // this.operationLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"操作成功\");\r\n          //     this.clearSelectAll();\r\n          //     this.getDataList();\r\n          //   }\r\n          // });\r\n          // 模拟请求成功\r\n          this.$Message.success(\"操作成功\");\r\n          this.clearSelectAll();\r\n          this.getDataList();\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\views\\xboot-vue-template\\complex-table"}]}