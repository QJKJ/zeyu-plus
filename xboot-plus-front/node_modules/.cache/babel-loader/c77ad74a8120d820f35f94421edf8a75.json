{"remainingRequest":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\custom-tree\\customTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\custom-tree\\customTree.vue","mtime":1545792990786},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"custom-tree\",\n  data: function data() {\n    return {\n      loading: false,\n      // 树加载状态\n      loadingEdit: false,\n      // 编辑上级树加载状态\n      modalVisible: false,\n      // 添加显示\n      selectList: [],\n      // 多选数据\n      selectCount: 0,\n      // 多选计数\n      showParent: false,\n      // 显示上级标识\n      modalTitle: \"\",\n      // 添加标题\n      editTitle: \"\",\n      // 编辑节点名称\n      searchKey: \"\",\n      // 搜索树\n      form: {\n        // 编辑对象初始化数据\n        id: \"\",\n        parentId: \"\",\n        parentTitle: \"\",\n        sortOrder: 0,\n        status: 0,\n        url: \"\"\n      },\n      formAdd: {// 添加对象初始化数据\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"名称不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      data: [],\n      dataEdit: []\n    };\n  },\n  methods: {\n    init: function init() {\n      // 初始化一级节点\n      this.getParentList(); // 初始化一级节点为编辑上级节点使用\n\n      this.getParentListEdit();\n    },\n    renderContent: function renderContent(h, _ref) {\n      var _this = this;\n\n      var root = _ref.root,\n          node = _ref.node,\n          data = _ref.data;\n\n      // 自定义render函数 这里主要通过数据中type字段判断 演示使用 当然你可以自定义业务逻辑\n      if (data.type == \"1\") {\n        return h(\"span\", {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: function click() {\n              _this.selectTree(data);\n            }\n          }\n        }, [h(\"span\", [h(\"Icon\", {\n          props: {\n            type: data.icon,\n            size: \"16\",\n            color: data.color\n          },\n          style: {\n            \"margin-right\": \"8px\",\n            \"margin-bottom\": \"3px\"\n          }\n        }), h(\"span\", data.title)])]);\n      } else if (data.type == \"2\") {\n        return h(\"span\", {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: function click() {\n              _this.selectTree(data);\n            }\n          }\n        }, [h(\"span\", [h(\"img\", {\n          attrs: {\n            src: require(\"@/assets/vip.png\"),\n            alt: \"...\"\n          },\n          style: {\n            cursor: \"pointer\",\n            width: \"17px\",\n            height: \"17px\",\n            \"margin-right\": \"5px\"\n          }\n        }), h(\"span\", data.title)])]);\n      } else if (data.type == \"3\") {\n        return h(\"span\", {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: function click() {\n              _this.selectTree(data);\n            }\n          }\n        }, [h(\"span\", [h(\"Avatar\", {\n          props: {\n            size: \"small\"\n          },\n          style: {\n            background: data.color,\n            \"margin-right\": \"5px\"\n          }\n        }, data.word), h(\"span\", data.title)])]);\n      } else {\n        return h(\"span\", {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: function click() {\n              _this.selectTree(data);\n            }\n          }\n        }, [h(\"span\", data.title)]);\n      }\n    },\n    getParentList: function getParentList() {\n      // this.loading = true;\n      // this.getRequest(\"一级数据请求路径，如/tree/getByParentId/0\").then(res => {\n      //   this.loading = false;\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     this.data = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.data = [{\n        title: \"自定义图标\",\n        id: \"1\",\n        type: \"1\",\n        icon: \"logo-apple\",\n        color: \"\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: 0,\n        loading: false,\n        children: [{\n          title: \"带颜色的自定义图标\",\n          id: \"2\",\n          type: \"1\",\n          icon: \"logo-android\",\n          color: \"#97c03d\",\n          parentId: \"1\",\n          status: 0,\n          parentTitle: \"自定义图标\"\n        }]\n      }, {\n        title: \"自定义图片\",\n        id: \"4\",\n        type: \"2\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: 0\n      }, {\n        title: \"自定义iView组件\",\n        id: \"5\",\n        type: \"3\",\n        word: \"E\",\n        color: \"orange\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: -1,\n        loading: false,\n        children: [{\n          title: \"自定义iView组件\",\n          id: \"2\",\n          type: \"3\",\n          word: \"字\",\n          color: \"#c601c6\",\n          parentId: \"1\",\n          status: 0,\n          parentTitle: \"自定义iView组件\"\n        }]\n      }];\n    },\n    getParentListEdit: function getParentListEdit() {\n      // this.loadingEdit = true;\n      // this.getRequest(\"/tree/getByParentId/0\").then(res => {\n      //   this.loadingEdit = false;\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     // 头部加入一级\n      //     let first = {\n      //       id: \"0\",\n      //       title: \"一级节点\"\n      //     };\n      //     res.result.unshift(first);\n      //     this.dataEdit = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.dataEdit = [{\n        title: \"自定义图标\",\n        id: \"1\",\n        type: \"1\",\n        icon: \"logo-apple\",\n        color: \"\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: 0,\n        loading: false,\n        children: [{\n          title: \"带颜色的自定义图标\",\n          id: \"2\",\n          type: \"1\",\n          icon: \"logo-android\",\n          color: \"#97c03d\",\n          parentId: \"1\",\n          status: 0,\n          parentTitle: \"自定义图标\"\n        }]\n      }, {\n        title: \"自定义图片\",\n        id: \"4\",\n        type: \"2\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: 0\n      }, {\n        title: \"自定义iView组件\",\n        id: \"5\",\n        type: \"3\",\n        word: \"E\",\n        color: \"orange\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: -1,\n        loading: false,\n        children: [{\n          title: \"自定义iView组件\",\n          id: \"2\",\n          type: \"3\",\n          word: \"字\",\n          color: \"#c601c6\",\n          parentId: \"1\",\n          status: 0,\n          parentTitle: \"自定义iView组件\"\n        }]\n      }];\n    },\n    loadData: function loadData(item, callback) {// 异步加载树子节点数据\n      // this.getRequest(\"请求路径，如/tree/getByParentId/\" + item.id).then(res => {\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     callback(res.result);\n      //   }\n      // });\n    },\n    search: function search() {\n      // 搜索树\n      if (this.searchKey) {\n        // 模拟请求\n        // this.loading = true;\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\n        //   this.loading = false;\n        //   if (res.success === true) {\n        //     this.data = res.result;\n        //   }\n        // });\n        // 模拟请求成功\n        this.data = [{\n          title: \"这里需要请求后台接口\",\n          id: \"1\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        }, {\n          title: \"所以这里是假数据\",\n          id: \"4\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        }, {\n          title: \"我是被禁用的节点\",\n          id: \"5\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: -1\n        }];\n      } else {\n        // 为空重新加载\n        this.getParentList();\n      }\n    },\n    selectTree: function selectTree(v) {\n      if (v) {\n        // 转换null为\"\"\n        for (var attr in v) {\n          if (v[attr] === null) {\n            v[attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v);\n        var data = JSON.parse(str);\n        this.form = data;\n        this.editTitle = data.title;\n      }\n    },\n    cancelEdit: function cancelEdit() {\n      this.isMenu = false;\n      this.isButton = false;\n      this.$refs.form.resetFields();\n      delete this.form.id;\n      this.editTitle = \"\";\n    },\n    selectTreeEdit: function selectTreeEdit(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (var attr in v[0]) {\n          if (v[0][attr] === null) {\n            v[0][attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v[0]);\n        var data = JSON.parse(str);\n        this.form.parentId = data.id;\n        this.form.parentTitle = data.title;\n      }\n    },\n    cancelAdd: function cancelAdd() {\n      this.modalVisible = false;\n    },\n    handleReset: function handleReset() {\n      this.$refs.form.resetFields();\n      this.form.status = 0;\n    },\n    submitEdit: function submitEdit() {\n      var _this2 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (!_this2.form.id) {\n            _this2.$Message.warning(\"请先点击选择要修改的节点\");\n\n            return;\n          }\n\n          _this2.submitLoading = true; // 避免传入null字符串\n\n          if (_this2.form.sortOrder === null) {\n            _this2.form.sortOrder = \"\";\n          }\n\n          if (_this2.form.buttonType === null) {\n            _this2.form.buttonType = \"\";\n          } // this.postRequest(\"请求路径，如/tree/edit\", this.form).then(res => {\n          //   this.submitLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"编辑成功\");\n          //     this.init();\n          //     this.modalVisible = false;\n          //   }\n          // });\n          // 模拟成功\n\n\n          _this2.submitLoading = false;\n\n          _this2.$Message.success(\"编辑成功\");\n\n          _this2.modalVisible = false;\n        }\n      });\n    },\n    submitAdd: function submitAdd() {\n      var _this3 = this;\n\n      this.$refs.formAdd.validate(function (valid) {\n        if (valid) {\n          _this3.submitLoading = true;\n\n          if (_this3.formAdd.sortOrder === null) {\n            _this3.formAdd.sortOrder = \"\";\n          }\n\n          if (_this3.formAdd.buttonType === null) {\n            _this3.formAdd.buttonType = \"\";\n          } // this.postRequest(\"请求路径，如/tree/add\", this.formAdd).then(res => {\n          //   this.submitLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"添加成功\");\n          //     this.init();\n          //     this.modalVisible = false;\n          //   }\n          // });\n          // 模拟成功\n\n\n          _this3.submitLoading = false;\n\n          _this3.$Message.success(\"添加成功\");\n\n          _this3.modalVisible = false;\n        }\n      });\n    },\n    add: function add() {\n      if (this.form.id == \"\" || this.form.id == null) {\n        this.$Message.warning(\"请先点击选择一个节点\");\n        return;\n      }\n\n      this.modalTitle = \"添加子节点\";\n      this.showParent = true;\n      this.formAdd = {\n        parentId: this.form.id,\n        sortOrder: 0,\n        status: 0\n      };\n      this.modalVisible = true;\n    },\n    addRoot: function addRoot() {\n      this.modalTitle = \"添加一级节点\";\n      this.showParent = false;\n      this.formAdd = {\n        parentId: 0,\n        sortOrder: 0,\n        status: 0\n      };\n      this.modalVisible = true;\n    },\n    changeSelect: function changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    delAll: function delAll() {\n      var _this4 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未勾选要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this4.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1); // this.deleteRequest(\"请求路径，如/tree/delByIds/\" + ids).then(res => {\n          //   if (res.success === true) {\n          //     this.$Message.success(\"删除成功\");\n          //     this.selectList = [];\n          //     this.selectCount = 0;\n          //     this.cancelEdit();\n          //     this.init();\n          //   }\n          // });\n          // 模拟成功\n\n          _this4.$Message.success(\"删除成功\");\n\n          _this4.selectList = [];\n          _this4.selectCount = 0;\n\n          _this4.cancelEdit();\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["customTree.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n@import \"./customTree.less\";\r\n</style>\r\n<template>\r\n    <div class=\"search\">\r\n        <Card>\r\n          <Row class=\"operation\">\r\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加子节点</Button>\r\n            <Button @click=\"addRoot\" icon=\"md-add\">添加一级节点</Button>\r\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n            <Button @click=\"getParentList\" icon=\"md-refresh\">刷新</Button>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"start\" class=\"code-row-bg\">\r\n            <Col span=\"6\">\r\n              <Alert show-icon>\r\n                当前选择编辑： <span class=\"select-title\">{{editTitle}}</span>\r\n                <a class=\"select-clear\" v-if=\"form.id\" @click=\"cancelEdit\">取消选择</a>\r\n              </Alert>\r\n              <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"search\" placeholder=\"输入节点名搜索\" clearable/>\r\n              <div class=\"custom-tree-bar\">\r\n                <Tree ref=\"tree\" :data=\"data\" :render=\"renderContent\" :load-data=\"loadData\" show-checkbox @on-check-change=\"changeSelect\"></Tree>\r\n              </div>\r\n              <Spin size=\"large\" fix v-if=\"loading\"></Spin>\r\n            </Col>\r\n            <Col span=\"9\">\r\n              <Form ref=\"form\" :model=\"form\" :label-width=\"85\" :rules=\"formValidate\">\r\n                <FormItem label=\"上级节点\" prop=\"parentTitle\">\r\n                  <Poptip trigger=\"click\" placement=\"right-start\" title=\"选择上级节点\" width=\"250\">\r\n                    <Input v-model=\"form.parentTitle\" readonly/>\r\n                    <div slot=\"content\" style=\"position:relative;min-height:5vh\">\r\n                      <Tree :data=\"dataEdit\" :load-data=\"loadData\" @on-select-change=\"selectTreeEdit\"></Tree>\r\n                      <Spin size=\"large\" fix v-if=\"loadingEdit\"></Spin>\r\n                    </div>\r\n                  </Poptip>\r\n                </FormItem>\r\n                <FormItem label=\"节点名称\" prop=\"title\">\r\n                  <Input v-model=\"form.title\"/>\r\n                </FormItem>\r\n                <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n                  <InputNumber :max=\"1000\" :min=\"0\" v-model=\"form.sortOrder\"></InputNumber>\r\n                  <span style=\"margin-left:5px\">值越小越靠前，支持小数</span>\r\n                </FormItem>\r\n                <FormItem label=\"是否启用\" prop=\"status\">\r\n                  <i-switch size=\"large\" v-model=\"form.status\" :true-value=\"0\" :false-value=\"-1\">\r\n                    <span slot=\"open\">启用</span>\r\n                    <span slot=\"close\">禁用</span>\r\n                  </i-switch>\r\n                </FormItem>\r\n                <Form-item>\r\n                  <Button @click=\"submitEdit\" :loading=\"submitLoading\" type=\"primary\" icon=\"ios-create-outline\" style=\"margin-right:5px\">修改并保存</Button>\r\n                  <Button @click=\"handleReset\" >重置</Button>\r\n                </Form-item>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable='false' :width=\"500\">\r\n          <Form ref=\"formAdd\" :model=\"formAdd\" :label-width=\"85\" :rules=\"formValidate\">\r\n            <div v-if=\"showParent\">\r\n              <FormItem label=\"上级节点：\">\r\n                {{form.title}}\r\n              </FormItem>\r\n            </div>\r\n            <FormItem label=\"节点名称\" prop=\"title\">\r\n              <Input v-model=\"formAdd.title\"/>\r\n            </FormItem>\r\n            <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n              <InputNumber :max=\"1000\" :min=\"0\" v-model=\"formAdd.sortOrder\"></InputNumber>\r\n              <span style=\"margin-left:5px\">值越小越靠前，支持小数</span>\r\n            </FormItem>\r\n            <FormItem label=\"是否启用\" prop=\"status\">\r\n              <i-switch size=\"large\" v-model=\"formAdd.status\" :true-value=\"0\" :false-value=\"-1\">\r\n                <span slot=\"open\">启用</span>\r\n                <span slot=\"close\">禁用</span>\r\n              </i-switch>\r\n            </FormItem>\r\n          </Form>\r\n          <div slot=\"footer\">\r\n            <Button type=\"text\" @click=\"cancelAdd\">取消</Button>\r\n            <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitAdd\">提交</Button>\r\n          </div>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"custom-tree\",\r\n  data() {\r\n    return {\r\n      loading: false, // 树加载状态\r\n      loadingEdit: false, // 编辑上级树加载状态\r\n      modalVisible: false, // 添加显示\r\n      selectList: [], // 多选数据\r\n      selectCount: 0, // 多选计数\r\n      showParent: false, // 显示上级标识\r\n      modalTitle: \"\", // 添加标题\r\n      editTitle: \"\", // 编辑节点名称\r\n      searchKey: \"\", // 搜索树\r\n      form: {\r\n        // 编辑对象初始化数据\r\n        id: \"\",\r\n        parentId: \"\",\r\n        parentTitle: \"\",\r\n        sortOrder: 0,\r\n        status: 0,\r\n        url: \"\"\r\n      },\r\n      formAdd: {\r\n        // 添加对象初始化数据\r\n      },\r\n      formValidate: {\r\n        // 表单验证规则\r\n        title: [{ required: true, message: \"名称不能为空\", trigger: \"blur\" }]\r\n      },\r\n      submitLoading: false,\r\n      data: [],\r\n      dataEdit: []\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 初始化一级节点\r\n      this.getParentList();\r\n      // 初始化一级节点为编辑上级节点使用\r\n      this.getParentListEdit();\r\n    },\r\n    renderContent(h, { root, node, data }) {\r\n      // 自定义render函数 这里主要通过数据中type字段判断 演示使用 当然你可以自定义业务逻辑\r\n      if (data.type == \"1\") {\r\n        return h(\r\n          \"span\",\r\n          {\r\n            style: {\r\n              display: \"inline-block\",\r\n              cursor: \"pointer\"\r\n            },\r\n            on: {\r\n              click: () => {\r\n                this.selectTree(data);\r\n              }\r\n            }\r\n          },\r\n          [\r\n            h(\"span\", [\r\n              h(\"Icon\", {\r\n                props: {\r\n                  type: data.icon,\r\n                  size: \"16\",\r\n                  color: data.color\r\n                },\r\n                style: {\r\n                  \"margin-right\": \"8px\",\r\n                  \"margin-bottom\": \"3px\"\r\n                }\r\n              }),\r\n              h(\"span\", data.title)\r\n            ])\r\n          ]\r\n        );\r\n      } else if (data.type == \"2\") {\r\n        return h(\r\n          \"span\",\r\n          {\r\n            style: {\r\n              display: \"inline-block\",\r\n              cursor: \"pointer\"\r\n            },\r\n            on: {\r\n              click: () => {\r\n                this.selectTree(data);\r\n              }\r\n            }\r\n          },\r\n          [\r\n            h(\"span\", [\r\n              h(\"img\", {\r\n                attrs: {\r\n                  src: require(\"@/assets/vip.png\"),\r\n                  alt: \"...\"\r\n                },\r\n                style: {\r\n                  cursor: \"pointer\",\r\n                  width: \"17px\",\r\n                  height: \"17px\",\r\n                  \"margin-right\": \"5px\"\r\n                }\r\n              }),\r\n              h(\"span\", data.title)\r\n            ])\r\n          ]\r\n        );\r\n      } else if (data.type == \"3\") {\r\n        return h(\r\n          \"span\",\r\n          {\r\n            style: {\r\n              display: \"inline-block\",\r\n              cursor: \"pointer\"\r\n            },\r\n            on: {\r\n              click: () => {\r\n                this.selectTree(data);\r\n              }\r\n            }\r\n          },\r\n          [\r\n            h(\"span\", [\r\n              h(\r\n                \"Avatar\",\r\n                {\r\n                  props: {\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    background: data.color,\r\n                    \"margin-right\": \"5px\"\r\n                  }\r\n                },\r\n                data.word\r\n              ),\r\n              h(\"span\", data.title)\r\n            ])\r\n          ]\r\n        );\r\n      } else {\r\n        return h(\r\n          \"span\",\r\n          {\r\n            style: {\r\n              display: \"inline-block\",\r\n              cursor: \"pointer\"\r\n            },\r\n            on: {\r\n              click: () => {\r\n                this.selectTree(data);\r\n              }\r\n            }\r\n          },\r\n          [h(\"span\", data.title)]\r\n        );\r\n      }\r\n    },\r\n    getParentList() {\r\n      // this.loading = true;\r\n      // this.getRequest(\"一级数据请求路径，如/tree/getByParentId/0\").then(res => {\r\n      //   this.loading = false;\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     this.data = res.result;\r\n      //   }\r\n      // });\r\n      // 模拟请求成功\r\n      this.data = [\r\n        {\r\n          title: \"自定义图标\",\r\n          id: \"1\",\r\n          type: \"1\",\r\n          icon: \"logo-apple\",\r\n          color: \"\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: 0,\r\n          loading: false,\r\n          children: [\r\n            {\r\n              title: \"带颜色的自定义图标\",\r\n              id: \"2\",\r\n              type: \"1\",\r\n              icon: \"logo-android\",\r\n              color: \"#97c03d\",\r\n              parentId: \"1\",\r\n              status: 0,\r\n              parentTitle: \"自定义图标\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: \"自定义图片\",\r\n          id: \"4\",\r\n          type: \"2\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: 0\r\n        },\r\n        {\r\n          title: \"自定义iView组件\",\r\n          id: \"5\",\r\n          type: \"3\",\r\n          word: \"E\",\r\n          color: \"orange\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: -1,\r\n          loading: false,\r\n          children: [\r\n            {\r\n              title: \"自定义iView组件\",\r\n              id: \"2\",\r\n              type: \"3\",\r\n              word: \"字\",\r\n              color: \"#c601c6\",\r\n              parentId: \"1\",\r\n              status: 0,\r\n              parentTitle: \"自定义iView组件\"\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n    },\r\n    getParentListEdit() {\r\n      // this.loadingEdit = true;\r\n      // this.getRequest(\"/tree/getByParentId/0\").then(res => {\r\n      //   this.loadingEdit = false;\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     // 头部加入一级\r\n      //     let first = {\r\n      //       id: \"0\",\r\n      //       title: \"一级节点\"\r\n      //     };\r\n      //     res.result.unshift(first);\r\n      //     this.dataEdit = res.result;\r\n      //   }\r\n      // });\r\n      // 模拟请求成功\r\n      this.dataEdit = [\r\n        {\r\n          title: \"自定义图标\",\r\n          id: \"1\",\r\n          type: \"1\",\r\n          icon: \"logo-apple\",\r\n          color: \"\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: 0,\r\n          loading: false,\r\n          children: [\r\n            {\r\n              title: \"带颜色的自定义图标\",\r\n              id: \"2\",\r\n              type: \"1\",\r\n              icon: \"logo-android\",\r\n              color: \"#97c03d\",\r\n              parentId: \"1\",\r\n              status: 0,\r\n              parentTitle: \"自定义图标\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: \"自定义图片\",\r\n          id: \"4\",\r\n          type: \"2\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: 0\r\n        },\r\n        {\r\n          title: \"自定义iView组件\",\r\n          id: \"5\",\r\n          type: \"3\",\r\n          word: \"E\",\r\n          color: \"orange\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: -1,\r\n          loading: false,\r\n          children: [\r\n            {\r\n              title: \"自定义iView组件\",\r\n              id: \"2\",\r\n              type: \"3\",\r\n              word: \"字\",\r\n              color: \"#c601c6\",\r\n              parentId: \"1\",\r\n              status: 0,\r\n              parentTitle: \"自定义iView组件\"\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n    },\r\n    loadData(item, callback) {\r\n      // 异步加载树子节点数据\r\n      // this.getRequest(\"请求路径，如/tree/getByParentId/\" + item.id).then(res => {\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     callback(res.result);\r\n      //   }\r\n      // });\r\n    },\r\n    search() {\r\n      // 搜索树\r\n      if (this.searchKey) {\r\n        // 模拟请求\r\n        // this.loading = true;\r\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\r\n        //   this.loading = false;\r\n        //   if (res.success === true) {\r\n        //     this.data = res.result;\r\n        //   }\r\n        // });\r\n        // 模拟请求成功\r\n        this.data = [\r\n          {\r\n            title: \"这里需要请求后台接口\",\r\n            id: \"1\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级节点\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"所以这里是假数据\",\r\n            id: \"4\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级节点\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"我是被禁用的节点\",\r\n            id: \"5\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级节点\",\r\n            status: -1\r\n          }\r\n        ];\r\n      } else {\r\n        // 为空重新加载\r\n        this.getParentList();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v) {\r\n        // 转换null为\"\"\r\n        for (let attr in v) {\r\n          if (v[attr] === null) {\r\n            v[attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v);\r\n        let data = JSON.parse(str);\r\n        this.form = data;\r\n        this.editTitle = data.title;\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      this.isMenu = false;\r\n      this.isButton = false;\r\n      this.$refs.form.resetFields();\r\n      delete this.form.id;\r\n      this.editTitle = \"\";\r\n    },\r\n    selectTreeEdit(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.form.parentId = data.id;\r\n        this.form.parentTitle = data.title;\r\n      }\r\n    },\r\n    cancelAdd() {\r\n      this.modalVisible = false;\r\n    },\r\n    handleReset() {\r\n      this.$refs.form.resetFields();\r\n      this.form.status = 0;\r\n    },\r\n    submitEdit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (!this.form.id) {\r\n            this.$Message.warning(\"请先点击选择要修改的节点\");\r\n            return;\r\n          }\r\n          this.submitLoading = true;\r\n          // 避免传入null字符串\r\n          if (this.form.sortOrder === null) {\r\n            this.form.sortOrder = \"\";\r\n          }\r\n          if (this.form.buttonType === null) {\r\n            this.form.buttonType = \"\";\r\n          }\r\n          // this.postRequest(\"请求路径，如/tree/edit\", this.form).then(res => {\r\n          //   this.submitLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"编辑成功\");\r\n          //     this.init();\r\n          //     this.modalVisible = false;\r\n          //   }\r\n          // });\r\n          // 模拟成功\r\n          this.submitLoading = false;\r\n          this.$Message.success(\"编辑成功\");\r\n          this.modalVisible = false;\r\n        }\r\n      });\r\n    },\r\n    submitAdd() {\r\n      this.$refs.formAdd.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.formAdd.sortOrder === null) {\r\n            this.formAdd.sortOrder = \"\";\r\n          }\r\n          if (this.formAdd.buttonType === null) {\r\n            this.formAdd.buttonType = \"\";\r\n          }\r\n          // this.postRequest(\"请求路径，如/tree/add\", this.formAdd).then(res => {\r\n          //   this.submitLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"添加成功\");\r\n          //     this.init();\r\n          //     this.modalVisible = false;\r\n          //   }\r\n          // });\r\n          // 模拟成功\r\n          this.submitLoading = false;\r\n          this.$Message.success(\"添加成功\");\r\n          this.modalVisible = false;\r\n        }\r\n      });\r\n    },\r\n    add() {\r\n      if (this.form.id == \"\" || this.form.id == null) {\r\n        this.$Message.warning(\"请先点击选择一个节点\");\r\n        return;\r\n      }\r\n      this.modalTitle = \"添加子节点\";\r\n      this.showParent = true;\r\n      this.formAdd = {\r\n        parentId: this.form.id,\r\n        sortOrder: 0,\r\n        status: 0\r\n      };\r\n      this.modalVisible = true;\r\n    },\r\n    addRoot() {\r\n      this.modalTitle = \"添加一级节点\";\r\n      this.showParent = false;\r\n      this.formAdd = {\r\n        parentId: 0,\r\n        sortOrder: 0,\r\n        status: 0\r\n      };\r\n      this.modalVisible = true;\r\n    },\r\n    changeSelect(v) {\r\n      this.selectCount = v.length;\r\n      this.selectList = v;\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未勾选要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          // this.deleteRequest(\"请求路径，如/tree/delByIds/\" + ids).then(res => {\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"删除成功\");\r\n          //     this.selectList = [];\r\n          //     this.selectCount = 0;\r\n          //     this.cancelEdit();\r\n          //     this.init();\r\n          //   }\r\n          // });\r\n          // 模拟成功\r\n          this.$Message.success(\"删除成功\");\r\n          this.selectList = [];\r\n          this.selectCount = 0;\r\n          this.cancelEdit();\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\views\\xboot-vue-template\\custom-tree"}]}