{"remainingRequest":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\libs\\axios.js","dependencies":[{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\libs\\axios.js","mtime":1545792990728},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { getStore, setStore } from './storage';\nimport { router } from '../router/index';\nimport { Message } from 'iview';\nimport Cookies from 'js-cookie'; // 统一请求路径前缀\n\nvar base = '/xboot'; // 超时设定\n\naxios.defaults.timeout = 15000;\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (err) {\n  Message.error('请求超时');\n  return Promise.resolve(err);\n}); // http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  var data = response.data; // 根据返回的code值来做不同的处理(和后端约定)\n\n  switch (data.code) {\n    case 401:\n      // 未登录 清除已登录状态\n      Cookies.set('userInfo', '');\n      setStore('accessToken', '');\n\n      if (router.history.current.name != \"login\") {\n        if (data.message !== null) {\n          Message.error(data.message);\n        } else {\n          Message.error(\"未知错误，请重新登录\");\n        }\n\n        router.push('/login');\n      }\n\n      break;\n\n    case 403:\n      // 没有权限\n      if (data.message !== null) {\n        Message.error(data.message);\n      } else {\n        Message.error(\"未知错误\");\n      }\n\n      break;\n\n    case 500:\n      // 错误\n      if (data.message !== null) {\n        Message.error(data.message);\n      } else {\n        Message.error(\"未知错误\");\n      }\n\n      break;\n\n    default:\n      return data;\n  }\n\n  return data;\n}, function (err) {\n  // 返回状态码不为200时候的错误处理\n  Message.error(err.toString());\n  return Promise.resolve(err);\n});\nexport var getRequest = function getRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'get',\n    url: \"\".concat(base).concat(url),\n    params: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};\nexport var postRequest = function postRequest(url, params) {\n  var accessToken = getStore(\"accessToken\");\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    transformRequest: [function (data) {\n      var ret = '';\n\n      for (var it in data) {\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\n      }\n\n      return ret;\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'accessToken': accessToken\n    }\n  });\n};\nexport var putRequest = function putRequest(url, params) {\n  var accessToken = getStore(\"accessToken\");\n  return axios({\n    method: 'put',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    transformRequest: [function (data) {\n      var ret = '';\n\n      for (var it in data) {\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\n      }\n\n      return ret;\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'accessToken': accessToken\n    }\n  });\n};\nexport var deleteRequest = function deleteRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'delete',\n    url: \"\".concat(base).concat(url),\n    params: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};\nexport var importRequest = function importRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};\nexport var uploadFileRequest = function uploadFileRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    params: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};",{"version":3,"sources":["src\\libs\\axios.js"],"names":["axios","getStore","setStore","router","Message","Cookies","base","defaults","timeout","interceptors","request","use","config","error","Promise","resolve","err","response","data","code","set","history","current","name","message","push","toString","getRequest","url","params","accessToken","method","headers","postRequest","transformRequest","ret","it","encodeURIComponent","putRequest","deleteRequest","importRequest","uploadFileRequest"],"mappings":"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","sourceRoot":"D:\\zeyu\\zeyu-plus\\xboot-plus-front","sourcesContent":["import axios from 'axios';\r\nimport { getStore, setStore } from './storage';\r\nimport { router } from '../router/index';\r\nimport { Message } from 'iview';\r\nimport Cookies from 'js-cookie';\r\n// 统一请求路径前缀\r\nlet base = '/xboot';\r\n// 超时设定\r\naxios.defaults.timeout = 15000;\r\n\r\naxios.interceptors.request.use(config => {\r\n    return config;\r\n}, err => {\r\n    Message.error('请求超时');\r\n    return Promise.resolve(err);\r\n});\r\n\r\n// http response 拦截器\r\naxios.interceptors.response.use(response => {\r\n    const data = response.data;\r\n\r\n    // 根据返回的code值来做不同的处理(和后端约定)\r\n    switch (data.code) {\r\n        case 401:\r\n            // 未登录 清除已登录状态\r\n            Cookies.set('userInfo', '');\r\n            setStore('accessToken', '');\r\n            if (router.history.current.name != \"login\") {\r\n                if (data.message !== null) {\r\n                    Message.error(data.message);\r\n                } else {\r\n                    Message.error(\"未知错误，请重新登录\");\r\n                }\r\n                router.push('/login');\r\n            }\r\n            break;\r\n        case 403:\r\n            // 没有权限\r\n            if (data.message !== null) {\r\n                Message.error(data.message);\r\n            } else {\r\n                Message.error(\"未知错误\");\r\n            }\r\n            break;\r\n        case 500:\r\n            // 错误\r\n            if (data.message !== null) {\r\n                Message.error(data.message);\r\n            } else {\r\n                Message.error(\"未知错误\");\r\n            }\r\n            break;\r\n        default:\r\n            return data;\r\n    }\r\n\r\n    return data;\r\n}, (err) => {\r\n    // 返回状态码不为200时候的错误处理\r\n    Message.error(err.toString());\r\n    return Promise.resolve(err);\r\n});\r\n\r\nexport const getRequest = (url, params) => {\r\n    let accessToken = getStore('accessToken');\r\n    return axios({\r\n        method: 'get',\r\n        url: `${base}${url}`,\r\n        params: params,\r\n        headers: {\r\n            'accessToken': accessToken\r\n        }\r\n    });\r\n};\r\n\r\nexport const postRequest = (url, params) => {\r\n    let accessToken = getStore(\"accessToken\");\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n        transformRequest: [function (data) {\r\n            let ret = '';\r\n            for (let it in data) {\r\n                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\r\n            }\r\n            return ret;\r\n        }],\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'accessToken': accessToken\r\n        }\r\n    });\r\n};\r\n\r\nexport const putRequest = (url, params) => {\r\n    let accessToken = getStore(\"accessToken\");\r\n    return axios({\r\n        method: 'put',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n        transformRequest: [function (data) {\r\n            let ret = '';\r\n            for (let it in data) {\r\n                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\r\n            }\r\n            return ret;\r\n        }],\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'accessToken': accessToken\r\n        }\r\n    });\r\n};\r\n\r\nexport const deleteRequest = (url, params) => {\r\n    let accessToken = getStore('accessToken');\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${base}${url}`,\r\n        params: params,\r\n        headers: {\r\n            'accessToken': accessToken\r\n        }\r\n    });\r\n};\r\n\r\nexport const importRequest = (url, params) => {\r\n    let accessToken = getStore('accessToken');\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n        headers: {\r\n            'accessToken': accessToken\r\n        }\r\n    });\r\n};\r\n\r\nexport const uploadFileRequest = (url, params) => {\r\n    let accessToken = getStore('accessToken');\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        params: params,\r\n        headers: {\r\n            'accessToken': accessToken\r\n        }\r\n    });\r\n};\r\n"]}]}