{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\activiti\\process-manage\\processManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\activiti\\process-manage\\processManage.vue","mtime":1545792990747},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getProcessDataList, updateInfo, updateStatus, deployByFile, exportResource, convertToModel, deleteProcess, initActCategory, loadActCategory, searchActCategory } from \"@/api/activiti\";\nimport { getDictDataByType } from \"@/api/index\";\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nexport default {\n  name: \"process-manage\",\n  components: {\n    circleLoading: circleLoading\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      accessToken: {},\n      deployByFileUrl: \"\",\n      loading: true,\n      // 表单加载状态\n      operationLoading: false,\n      // 操作加载状态\n      selectCount: 0,\n      // 多选计数\n      selectList: [],\n      // 多选数据\n      viewImage: false,\n      viewTitle: \"流程图片预览\",\n      diagramUrl: \"\",\n      searchForm: {\n        // 搜索框对应data对象\n        showLatest: true,\n        name: \"\",\n        processKey: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 10,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\",\n        // 默认排序方式\n        startDate: \"\",\n        // 起始时间\n        endDate: \"\" // 终止时间\n\n      },\n      selectDate: null,\n      // 选择日期绑定modal\n      modalVisible: false,\n      editModalVisible: false,\n      dataCat: [],\n      catLoading: false,\n      searchKey: \"\",\n      form: {\n        description: \"\"\n      },\n      formValidate: {\n        routeName: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        businessTable: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      categoryTitle: \"\",\n      submitLoading: false,\n      // 添加或编辑提交状态\n      columns: [// 表头\n      {\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"名称\",\n        key: \"name\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"标识Key\",\n        key: \"processKey\",\n        width: 130,\n        sortable: true\n      }, {\n        title: \"所属分类\",\n        key: \"categoryTitle\",\n        width: 130,\n        sortable: true\n      }, {\n        title: \"版本\",\n        key: \"version\",\n        width: 90,\n        align: \"center\",\n        sortable: true,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.version) {\n            re = \"v.\" + params.row.version;\n          }\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 130,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status == 1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"success\"\n              }\n            }, \"已激活\")]);\n          } else if (params.row.status == 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"error\"\n              }\n            }, \"已挂起\")]);\n          }\n        },\n        filters: [{\n          label: \"已激活\",\n          value: 1\n        }, {\n          label: \"已挂起\",\n          value: 0\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 0) {\n            return row.status === 0;\n          } else if (value === 1) {\n            return row.status === 1;\n          }\n        }\n      }, {\n        title: \"流程图片\",\n        key: \"diagramName\",\n        width: 160,\n        sortable: true,\n        render: function render(h, params) {\n          return h(\"div\", [h(\"a\", {\n            on: {\n              click: function click() {\n                _this.showResource(1, params.row);\n              }\n            }\n          }, params.row.diagramName)]);\n        }\n      }, {\n        title: \"流程XML\",\n        key: \"xmlName\",\n        width: 160,\n        sortable: true,\n        render: function render(h, params) {\n          return h(\"div\", [h(\"a\", {\n            on: {\n              click: function click() {\n                _this.showResource(0, params.row);\n              }\n            }\n          }, params.row.xmlName)]);\n        }\n      }, {\n        title: \"表单路由名\",\n        key: \"routeName\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"数据库业务表\",\n        key: \"businessTable\",\n        width: 150,\n        sortable: true,\n        render: function render(h, params) {\n          var re = \"\";\n\n          _this.dictTable.forEach(function (e) {\n            if (e.value == params.row.businessTable) {\n              re = \"\".concat(e.title, \" (\").concat(e.value, \")\");\n            }\n          });\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"备注描述\",\n        key: \"description\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"部署时间\",\n        key: \"createTime\",\n        width: 150,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"更新时间\",\n        key: \"updateTime\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 335,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          var suspendOrActive = \"\";\n\n          if (params.row.status == 0) {\n            // 挂起可激活\n            suspendOrActive = h(\"Button\", {\n              props: {\n                type: \"success\",\n                size: \"small\",\n                icon: \"md-play\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.editStatus(1, params.row);\n                }\n              }\n            }, \"激活\");\n          } else {\n            // 激活可挂起\n            suspendOrActive = h(\"Button\", {\n              props: {\n                type: \"warning\",\n                size: \"small\",\n                icon: \"md-pause\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.editStatus(0, params.row);\n                }\n              }\n            }, \"挂起\");\n          }\n\n          return h(\"div\", [suspendOrActive, h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              icon: \"logo-buffer\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.editNode(params.row);\n              }\n            }\n          }, \"节点设置\"), h(\"Button\", {\n            props: {\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"info\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.convert(params.row);\n              }\n            }\n          }, \"转模型\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      // 表单数据\n      total: 0,\n      // 表单数据总数\n      dictTable: []\n    };\n  },\n  methods: {\n    init: function init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n      this.deployByFileUrl = deployByFile;\n      this.getDataList();\n      this.initCategoryTreeData();\n      this.getDictDataType();\n    },\n    getDictDataType: function getDictDataType() {\n      var _this2 = this;\n\n      getDictDataByType(\"business_table\").then(function (res) {\n        if (res.success) {\n          _this2.dictTable = res.result;\n        }\n      });\n    },\n    renderContent: function renderContent(h, _ref) {\n      var _this3 = this;\n\n      var root = _ref.root,\n          node = _ref.node,\n          data = _ref.data;\n      var icon = \"\";\n\n      if (data.type == \"0\") {\n        icon = \"md-folder-open\";\n      } else if (data.type == \"1\") {\n        icon = \"ios-bookmark-outline\";\n      }\n\n      return h(\"span\", {\n        style: {\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        },\n        on: {\n          click: function click() {\n            _this3.selectTree(data);\n          }\n        }\n      }, [h(\"span\", [h(\"Icon\", {\n        props: {\n          type: icon,\n          size: \"16\"\n        },\n        style: {\n          \"margin-right\": \"8px\",\n          \"margin-bottom\": \"3px\"\n        }\n      }), h(\"span\", data.title)])]);\n    },\n    initCategoryTreeData: function initCategoryTreeData() {\n      var _this4 = this;\n\n      initActCategory().then(function (res) {\n        if (res.success === true) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n\n            if (e.status === -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          _this4.dataCat = res.result;\n        }\n      });\n    },\n    loadDataTree: function loadDataTree(item, callback) {\n      loadActCategory(item.id).then(function (res) {\n        if (res.success === true) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n\n            if (e.status === -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          callback(res.result);\n        }\n      });\n    },\n    searchCat: function searchCat() {\n      var _this5 = this;\n\n      // 搜索部门\n      if (this.searchKey) {\n        this.catLoading = true;\n        searchActCategory({\n          title: this.searchKey\n        }).then(function (res) {\n          _this5.catLoading = false;\n\n          if (res.success) {\n            res.result.forEach(function (e) {\n              if (e.status === -1) {\n                e.title = \"[已禁用] \" + e.title;\n                e.disabled = true;\n              }\n            });\n            _this5.dataCat = res.result;\n          }\n        });\n      } else {\n        this.initCategoryTreeData();\n      }\n    },\n    selectTree: function selectTree(v) {\n      if (v) {\n        // 转换null为\"\"\n        for (var attr in v) {\n          if (v[attr] === null) {\n            v[attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v);\n        var data = JSON.parse(str);\n\n        if (data.type == 0) {\n          this.$Message.warning(\"请选择一个类别\");\n          return;\n        }\n\n        this.form.categoryId = data.id;\n        this.categoryTitle = data.title;\n      }\n    },\n    clearSelectCat: function clearSelectCat() {\n      this.form.categoryId = \"\";\n      this.categoryTitle = \"\";\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    selectDateRange: function selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList: function getDataList() {\n      var _this6 = this;\n\n      this.loading = true;\n      getProcessDataList(this.searchForm).then(function (res) {\n        _this6.loading = false;\n\n        if (res.success === true) {\n          _this6.data = res.result.content;\n          _this6.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\"; // 重新加载数据\n\n      this.getDataList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getDataList();\n    },\n    deploy: function deploy(v) {\n      this.modalVisible = true;\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc: \"所选文件‘ \" + file.name + \" ’格式不正确, 请选择 .zip .bar .bpmn .bpmn20.xml格式文件\"\n      });\n    },\n    handleMaxSize: function handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    handleSuccess: function handleSuccess(res, file) {\n      if (res.success === true) {\n        this.$Message.success(\"部署成功，请继续编辑完善流程信息\");\n        this.modalVisible = false;\n        this.getDataList();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError: function handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    edit: function edit(v) {\n      this.$refs.form.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] === null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.form = data;\n      this.categoryTitle = data.categoryTitle;\n      this.editModalVisible = true;\n    },\n    editNode: function editNode(v) {\n      var query = {\n        id: v.id,\n        name: v.name,\n        backRoute: this.$route.name\n      };\n      this.$router.push({\n        name: \"process_node_edit\",\n        query: query\n      });\n    },\n    handelSubmitEdit: function handelSubmitEdit() {\n      var _this7 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this7.submitLoading = true;\n          updateInfo(_this7.form).then(function (res) {\n            _this7.submitLoading = false;\n\n            if (res.success === true) {\n              _this7.$Message.success(\"操作成功\");\n\n              _this7.getDataList();\n\n              _this7.editModalVisible = false;\n            }\n          });\n        }\n      });\n    },\n    editStatus: function editStatus(status, v) {\n      var _this8 = this;\n\n      var operation = \"\";\n\n      if (status == 0) {\n        operation = \"暂停挂起\";\n      } else {\n        operation = \"激活运行\";\n      }\n\n      this.$Modal.confirm({\n        title: \"确认\" + operation,\n        content: \"\\u60A8\\u786E\\u8BA4\\u8981\".concat(operation, \"\\u6D41\\u7A0B\").concat(v.name, \"?\"),\n        onOk: function onOk() {\n          _this8.operationLoading = true;\n          var params = {\n            status: status,\n            id: v.id\n          };\n          updateStatus(params).then(function (res) {\n            _this8.operationLoading = false;\n\n            if (res.success === true) {\n              _this8.$Message.success(\"操作成功\");\n\n              _this8.getDataList();\n            }\n          });\n        }\n      });\n    },\n    convert: function convert(v) {\n      var _this9 = this;\n\n      var that = this;\n      this.$Modal.confirm({\n        title: \"确认转化\",\n        content: \"您确认要转化流程 \" + v.name + \" 为模型?\",\n        onOk: function onOk() {\n          _this9.operationLoading = true;\n          convertToModel(v.id).then(function (res) {\n            _this9.operationLoading = false;\n\n            if (res.success === true) {\n              setTimeout(function () {\n                that.showJump();\n              }, 300);\n            }\n          });\n        }\n      });\n    },\n    showJump: function showJump() {\n      var _this10 = this;\n\n      this.$Modal.confirm({\n        title: \"转化成功\",\n        content: \"是否立即跳转查看该模型?\",\n        onOk: function onOk() {\n          _this10.$router.push({\n            name: \"model-manage\"\n          });\n        }\n      });\n    },\n    showResource: function showResource(type, v) {\n      if (type == 0) {\n        window.open(\"\".concat(exportResource, \"?id=\").concat(v.id, \"&type=\").concat(type, \"&accessToken=\").concat(this.getStore(\"accessToken\")));\n      } else if (type == 1) {\n        this.viewTitle = \"流程图片预览(\" + v.diagramName + \")\";\n        this.diagramUrl = \"\".concat(exportResource, \"?id=\").concat(v.id, \"&type=\").concat(type, \"&accessToken=\").concat(this.getStore(\"accessToken\"));\n        this.viewImage = true;\n      }\n    },\n    remove: function remove(v) {\n      var _this11 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除流程 \" + v.name + \" ?\",\n        onOk: function onOk() {\n          _this11.operationLoading = true;\n          deleteProcess(v.id).then(function (res) {\n            _this11.operationLoading = false;\n\n            if (res.success === true) {\n              _this11.$Message.success(\"操作成功\");\n\n              _this11.getDataList();\n            }\n          });\n        }\n      });\n    },\n    showSelect: function showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll: function delAll() {\n      var _this12 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this12.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          _this12.operationLoading = true;\n          deleteProcess(ids).then(function (res) {\n            _this12.operationLoading = false;\n\n            if (res.success === true) {\n              _this12.$Message.success(\"操作成功\");\n\n              _this12.clearSelectAll();\n\n              _this12.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route: function $route(to, from) {\n      if (to.name == \"process-manage\") {\n        this.getDataList();\n      }\n    }\n  }\n};",{"version":3,"sources":["processManage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n@import \"./processManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Card>\r\n        <Row>\r\n          <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\">\r\n            <Form-item label=\"流程名称\" prop=\"name\">\r\n              <Input\r\n                type=\"text\"\r\n                v-model=\"searchForm.name\"\r\n                placeholder=\"请输入名称\"\r\n                clearable\r\n                style=\"width: 200px\"\r\n              />\r\n            </Form-item>\r\n            <Form-item label=\"标识Key\" prop=\"processKey\">\r\n              <Input\r\n                type=\"text\"\r\n                v-model=\"searchForm.processKey\"\r\n                placeholder=\"请输入标识\"\r\n                clearable\r\n                style=\"width: 200px\"\r\n              />\r\n            </Form-item>\r\n            <Form-item label=\"部署时间\">\r\n              <DatePicker\r\n                v-model=\"selectDate\"\r\n                type=\"daterange\"\r\n                format=\"yyyy-MM-dd\"\r\n                clearable\r\n                @on-change=\"selectDateRange\"\r\n                placeholder=\"选择起始时间\"\r\n                style=\"width: 200px\"\r\n              ></DatePicker>\r\n            </Form-item>\r\n            <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n              <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n              <Button @click=\"handleReset\">重置</Button>\r\n            </Form-item>\r\n          </Form>\r\n        </Row>\r\n        <Row class=\"operation\">\r\n          <Button @click=\"deploy\" type=\"primary\" icon=\"md-cloud-upload\">部署流程文件</Button>\r\n          <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n          <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\r\n          <i-switch\r\n            size=\"large\"\r\n            v-model=\"searchForm.showLatest\"\r\n            @on-change=\"getDataList\"\r\n            style=\"margin:0 5px\"\r\n          >\r\n            <span slot=\"open\">最新</span>\r\n            <span slot=\"close\">全部</span>\r\n          </i-switch>\r\n          <circleLoading v-if=\"operationLoading\"/>\r\n        </Row>\r\n        <Row>\r\n          <Alert show-icon>\r\n            已选择\r\n            <span class=\"select-count\">{{selectCount}}</span> 项\r\n            <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            <span style=\"margin-left:20px\">说明：当有多个相同标识的流程时，默认仅显示其最新版本</span>\r\n          </Alert>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            :loading=\"loading\"\r\n            border\r\n            :columns=\"columns\"\r\n            :data=\"data\"\r\n            sortable=\"custom\"\r\n            @on-sort-change=\"changeSort\"\r\n            @on-selection-change=\"showSelect\"\r\n            ref=\"table\"\r\n          ></Table>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n          <Page\r\n            :current=\"searchForm.pageNumber\"\r\n            :total=\"total\"\r\n            :page-size=\"searchForm.pageSize\"\r\n            @on-change=\"changePage\"\r\n            @on-page-size-change=\"changePageSize\"\r\n            :page-size-opts=\"[10,20,50]\"\r\n            size=\"small\"\r\n            show-total\r\n            show-elevator\r\n            show-sizer\r\n          ></Page>\r\n        </Row>\r\n      </Card>\r\n    </Row>\r\n    <!-- 部署流程文件 -->\r\n    <Modal\r\n      title=\"部署流程文件\"\r\n      footer-hide\r\n      v-model=\"modalVisible\"\r\n      :mask-closable=\"false\"\r\n      :width=\"500\"\r\n      :styles=\"{top: '30px'}\"\r\n    >\r\n      <Upload\r\n        :action=\"deployByFileUrl\"\r\n        :headers=\"accessToken\"\r\n        :on-success=\"handleSuccess\"\r\n        :on-error=\"handleError\"\r\n        :format=\"['zip','bar','bpmn','xml']\"\r\n        :max-size=\"5120\"\r\n        :on-format-error=\"handleFormatError\"\r\n        :on-exceeded-size=\"handleMaxSize\"\r\n        type=\"drag\"\r\n        ref=\"up\"\r\n      >\r\n        <div style=\"padding: 20px 0\">\r\n          <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"></Icon>\r\n          <p>点击这里或将文件拖拽到这里上传</p>请选择BPMN文件，仅支持zip、bpmn20.xml、bar、bpmn格式文件\r\n        </div>\r\n      </Upload>\r\n    </Modal>\r\n    <!-- 编辑分类或备注 -->\r\n    <Modal\r\n      title=\"编辑流程信息\"\r\n      v-model=\"editModalVisible\"\r\n      :mask-closable=\"false\"\r\n      :width=\"500\"\r\n      :styles=\"{top: '30px'}\"\r\n    >\r\n      <Form ref=\"form\" :model=\"form\" :label-width=\"95\" :rules=\"formValidate\">\r\n        <FormItem label=\"流程分类\">\r\n          <Poptip trigger=\"click\" placement=\"right\" title=\"选择类别\" width=\"250\">\r\n            <div style=\"display:flex;\">\r\n              <Input v-model=\"categoryTitle\" readonly style=\"margin-right:10px;\"/>\r\n              <Button icon=\"md-trash\" @click=\"clearSelectCat\">清空已选</Button>\r\n            </div>\r\n            <div slot=\"content\" class=\"tree-bar\">\r\n              <Input\r\n                v-model=\"searchKey\"\r\n                suffix=\"ios-search\"\r\n                @on-change=\"searchCat\"\r\n                placeholder=\"输入分类名搜索\"\r\n                clearable\r\n              />\r\n              <Tree\r\n                :data=\"dataCat\"\r\n                :load-data=\"loadDataTree\"\r\n                :render=\"renderContent\"\r\n                @on-select-change=\"selectTree\"\r\n              ></Tree>\r\n              <Spin size=\"large\" fix v-if=\"catLoading\"></Spin>\r\n            </div>\r\n          </Poptip>\r\n        </FormItem>\r\n        <FormItem label=\"前端表单路由\" prop=\"routeName\">\r\n          <Input v-model=\"form.routeName\" placeholder=\"输入关联前端表单路由名\"/>\r\n        </FormItem>\r\n        <FormItem label=\"关联业务表\" prop=\"businessTable\">\r\n          <Select v-model=\"form.businessTable\" placeholder=\"请选择关联数据库业务表\" clearable>\r\n            <Option v-for=\"(item, i) in dictTable\" :key=\"i\" :value=\"item.value\" :label=\"item.title\">\r\n              <span style=\"margin-right:10px;\">{{ item.title }}</span>\r\n              <span style=\"color:#ccc;\">{{ item.value }}</span>\r\n            </Option>\r\n            </Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"备注描述\" prop=\"description\">\r\n          <Input v-model=\"form.description\"/>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"editModalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmitEdit\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n    <!-- 图片预览 -->\r\n    <Modal :title=\"viewTitle\" v-model=\"viewImage\" :styles=\"{top: '30px'}\" draggable>\r\n      <img :src=\"diagramUrl\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n      <div slot=\"footer\">\r\n        <Button @click=\"viewImage=false\" style=\"margin-right:5px\">关闭</Button>\r\n        <Button :to=\"diagramUrl\" target=\"_blank\" type=\"primary\">下载</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getProcessDataList,\r\n  updateInfo,\r\n  updateStatus,\r\n  deployByFile,\r\n  exportResource,\r\n  convertToModel,\r\n  deleteProcess,\r\n  initActCategory,\r\n  loadActCategory,\r\n  searchActCategory\r\n} from \"@/api/activiti\";\r\nimport { getDictDataByType } from \"@/api/index\";\r\nimport circleLoading from \"../../my-components/circle-loading.vue\";\r\nexport default {\r\n  name: \"process-manage\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      accessToken: {},\r\n      deployByFileUrl: \"\",\r\n      loading: true, // 表单加载状态\r\n      operationLoading: false, // 操作加载状态\r\n      selectCount: 0, // 多选计数\r\n      selectList: [], // 多选数据\r\n      viewImage: false,\r\n      viewTitle: \"流程图片预览\",\r\n      diagramUrl: \"\",\r\n      searchForm: {\r\n        // 搜索框对应data对象\r\n        showLatest: true,\r\n        name: \"\",\r\n        processKey: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\", // 默认排序方式\r\n        startDate: \"\", // 起始时间\r\n        endDate: \"\" // 终止时间\r\n      },\r\n      selectDate: null, // 选择日期绑定modal\r\n      modalVisible: false,\r\n      editModalVisible: false,\r\n      dataCat: [],\r\n      catLoading: false,\r\n      searchKey: \"\",\r\n      form: {\r\n        description: \"\"\r\n      },\r\n      formValidate: {\r\n        routeName: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\r\n        businessTable: [\r\n          { required: true, message: \"不能为空\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      categoryTitle: \"\",\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      columns: [\r\n        // 表头\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"name\",\r\n          width: 150,\r\n          sortable: true,\r\n        },\r\n        {\r\n          title: \"标识Key\",\r\n          key: \"processKey\",\r\n          width: 130,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"所属分类\",\r\n          key: \"categoryTitle\",\r\n          width: 130,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"版本\",\r\n          key: \"version\",\r\n          width: 90,\r\n          align: \"center\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.version) {\r\n              re = \"v.\" + params.row.version;\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 130,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status == 1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"success\"\r\n                    }\r\n                  },\r\n                  \"已激活\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status == 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"error\"\r\n                    }\r\n                  },\r\n                  \"已挂起\"\r\n                )\r\n              ]);\r\n            }\r\n          },\r\n          filters: [\r\n            {\r\n              label: \"已激活\",\r\n              value: 1\r\n            },\r\n            {\r\n              label: \"已挂起\",\r\n              value: 0\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.status === 0;\r\n            } else if (value === 1) {\r\n              return row.status === 1;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"流程图片\",\r\n          key: \"diagramName\",\r\n          width: 160,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"a\",\r\n                {\r\n                  on: {\r\n                    click: () => {\r\n                      this.showResource(1, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                params.row.diagramName\r\n              )\r\n            ]);\r\n          }\r\n        },\r\n        {\r\n          title: \"流程XML\",\r\n          key: \"xmlName\",\r\n          width: 160,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"a\",\r\n                {\r\n                  on: {\r\n                    click: () => {\r\n                      this.showResource(0, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                params.row.xmlName\r\n              )\r\n            ]);\r\n          }\r\n        },\r\n        {\r\n          title: \"表单路由名\",\r\n          key: \"routeName\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"数据库业务表\",\r\n          key: \"businessTable\",\r\n          width: 150,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictTable.forEach(e => {\r\n              if (e.value == params.row.businessTable) {\r\n                re = `${e.title} (${e.value})`;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"备注描述\",\r\n          key: \"description\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"部署时间\",\r\n          key: \"createTime\",\r\n          width: 150,\r\n          sortable: true,\r\n          sortType: \"desc\"\r\n        },\r\n        {\r\n          title: \"更新时间\",\r\n          key: \"updateTime\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 335,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            let suspendOrActive = \"\";\r\n            if (params.row.status == 0) {\r\n              // 挂起可激活\r\n              suspendOrActive = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"success\",\r\n                    size: \"small\",\r\n                    icon: \"md-play\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.editStatus(1, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"激活\"\r\n              );\r\n            } else {\r\n              // 激活可挂起\r\n              suspendOrActive = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"warning\",\r\n                    size: \"small\",\r\n                    icon: \"md-pause\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.editStatus(0, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"挂起\"\r\n              );\r\n            }\r\n            return h(\"div\", [\r\n              suspendOrActive,\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\",\r\n                    icon: \"logo-buffer\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.editNode(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"节点设置\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.convert(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"转模型\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      data: [], // 表单数据\r\n      total: 0, // 表单数据总数\r\n      dictTable: []\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n      this.deployByFileUrl = deployByFile;\r\n      this.getDataList();\r\n      this.initCategoryTreeData();\r\n      this.getDictDataType();\r\n    },\r\n    getDictDataType() {\r\n      getDictDataByType(\"business_table\").then(res => {\r\n        if (res.success) {\r\n          this.dictTable = res.result;\r\n        }\r\n      });\r\n    },\r\n    renderContent(h, { root, node, data }) {\r\n      let icon = \"\";\r\n      if (data.type == \"0\") {\r\n        icon = \"md-folder-open\";\r\n      } else if (data.type == \"1\") {\r\n        icon = \"ios-bookmark-outline\";\r\n      }\r\n      return h(\r\n        \"span\",\r\n        {\r\n          style: {\r\n            display: \"inline-block\",\r\n            cursor: \"pointer\"\r\n          },\r\n          on: {\r\n            click: () => {\r\n              this.selectTree(data);\r\n            }\r\n          }\r\n        },\r\n        [\r\n          h(\"span\", [\r\n            h(\"Icon\", {\r\n              props: {\r\n                type: icon,\r\n                size: \"16\"\r\n              },\r\n              style: {\r\n                \"margin-right\": \"8px\",\r\n                \"margin-bottom\": \"3px\"\r\n              }\r\n            }),\r\n            h(\"span\", data.title)\r\n          ])\r\n        ]\r\n      );\r\n    },\r\n    initCategoryTreeData() {\r\n      initActCategory().then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          this.dataCat = res.result;\r\n        }\r\n      });\r\n    },\r\n    loadDataTree(item, callback) {\r\n      loadActCategory(item.id).then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          callback(res.result);\r\n        }\r\n      });\r\n    },\r\n    searchCat() {\r\n      // 搜索部门\r\n      if (this.searchKey) {\r\n        this.catLoading = true;\r\n        searchActCategory({ title: this.searchKey }).then(res => {\r\n          this.catLoading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.status === -1) {\r\n                e.title = \"[已禁用] \" + e.title;\r\n                e.disabled = true;\r\n              }\r\n            });\r\n            this.dataCat = res.result;\r\n          }\r\n        });\r\n      } else {\r\n        this.initCategoryTreeData();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v) {\r\n        // 转换null为\"\"\r\n        for (let attr in v) {\r\n          if (v[attr] === null) {\r\n            v[attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v);\r\n        let data = JSON.parse(str);\r\n        if (data.type == 0) {\r\n          this.$Message.warning(\"请选择一个类别\");\r\n          return;\r\n        }\r\n        this.form.categoryId = data.id;\r\n        this.categoryTitle = data.title;\r\n      }\r\n    },\r\n    clearSelectCat() {\r\n      this.form.categoryId = \"\";\r\n      this.categoryTitle = \"\";\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getDataList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getDataList();\r\n    },\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    getDataList() {\r\n      this.loading = true;\r\n      getProcessDataList(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getDataList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      // 重新加载数据\r\n      this.getDataList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getDataList();\r\n    },\r\n    deploy(v) {\r\n      this.modalVisible = true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 .zip .bar .bpmn .bpmn20.xml格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\r\n      });\r\n    },\r\n    handleSuccess(res, file) {\r\n      if (res.success === true) {\r\n        this.$Message.success(\"部署成功，请继续编辑完善流程信息\");\r\n        this.modalVisible = false;\r\n        this.getDataList();\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    edit(v) {\r\n      this.$refs.form.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.categoryTitle = data.categoryTitle;\r\n      this.editModalVisible = true;\r\n    },\r\n    editNode(v) {\r\n      let query = { id: v.id, name: v.name, backRoute: this.$route.name };\r\n      this.$router.push({\r\n        name: \"process_node_edit\",\r\n        query: query\r\n      });\r\n    },\r\n    handelSubmitEdit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          updateInfo(this.form).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n              this.editModalVisible = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    editStatus(status, v) {\r\n      let operation = \"\";\r\n      if (status == 0) {\r\n        operation = \"暂停挂起\";\r\n      } else {\r\n        operation = \"激活运行\";\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认\" + operation,\r\n        content: `您确认要${operation}流程${v.name}?`,\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          let params = {\r\n            status: status,\r\n            id: v.id\r\n          };\r\n          updateStatus(params).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    convert(v) {\r\n      let that = this;\r\n      this.$Modal.confirm({\r\n        title: \"确认转化\",\r\n        content: \"您确认要转化流程 \" + v.name + \" 为模型?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          convertToModel(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              setTimeout(function() {\r\n                that.showJump();\r\n              }, 300);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    showJump() {\r\n      this.$Modal.confirm({\r\n        title: \"转化成功\",\r\n        content: \"是否立即跳转查看该模型?\",\r\n        onOk: () => {\r\n          this.$router.push({\r\n            name: \"model-manage\"\r\n          });\r\n        }\r\n      });\r\n    },\r\n    showResource(type, v) {\r\n      if (type == 0) {\r\n        window.open(`${exportResource}?id=${v.id}&type=${type}&accessToken=${this.getStore(\"accessToken\")}`);\r\n      } else if (type == 1) {\r\n        this.viewTitle = \"流程图片预览(\" + v.diagramName + \")\";\r\n        this.diagramUrl = `${exportResource}?id=${v.id}&type=${type}&accessToken=${this.getStore(\"accessToken\")}`;\r\n        this.viewImage = true;\r\n      }\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除流程 \" + v.name + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          deleteProcess(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    showSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          this.operationLoading = true;\r\n          deleteProcess(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.clearSelectAll();\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  watch: {\r\n    // 监听路由变化\r\n    $route(to, from) {\r\n      if (to.name == \"process-manage\") {\r\n        this.getDataList();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\views\\activiti\\process-manage"}]}