{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\tree&table\\tree&table.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\tree&table\\tree&table.vue","mtime":1545792990791},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nexport default {\n  name: \"treeAndTable\",\n  components: {\n    circleLoading: circleLoading\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      treeLoading: false,\n      // 树加载状态\n      loading: false,\n      // 表加载状态\n      editTitle: \"\",\n      // 编辑节点名称\n      searchKey: \"\",\n      // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"ios-arrow-back\",\n      selectNode: {},\n      treeData: [],\n      // 树数据\n      operationLoading: false,\n      // 操作加载状态\n      selectCount: 0,\n      // 多选计数\n      selectList: [],\n      // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 10,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n\n      },\n      modalType: 0,\n      // 添加或编辑标识\n      modalVisible: false,\n      // 添加或编辑显示\n      modalTitle: \"\",\n      // 添加或编辑标题\n      form: {\n        // 添加或编辑表单对象初始化数据\n        sex: 1,\n        type: 0\n      },\n      formValidate: {\n        // 表单验证规则\n        name: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      columns: [// 表头\n      {\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"名称\",\n        key: \"name\",\n        width: 150,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"描述\",\n        key: \"description\",\n        width: 200,\n        sortable: true\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 150,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"green\"\n              }\n            }, \"正常启用\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"red\"\n              }\n            }, \"禁用\")]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        width: 200,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 200,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      submitLoading: false,\n      // 添加或编辑提交状态\n      data: [],\n      //表单数据\n      total: 0 // 表单数据总数\n\n    };\n  },\n  methods: {\n    init: function init() {\n      // 初始化一级节点\n      this.getParentList(); // 获取表单数据\n\n      this.getDataList();\n    },\n    getParentList: function getParentList() {\n      // this.treeLoading = true;\n      // this.getRequest(\"一级数据请求路径，如/tree/getByParentId/0\").then(res => {\n      //   this.treeLoading = false;\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     this.treeData = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.treeData = [{\n        title: \"一级1\",\n        id: \"1\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: 0,\n        loading: false,\n        children: [{\n          title: \"二级1\",\n          id: \"2\",\n          parentId: \"1\",\n          status: 0,\n          parentTitle: \"一级1\"\n        }]\n      }, {\n        title: \"一级2\",\n        id: \"3\",\n        parentId: \"0\",\n        parentTitle: \"一级节点\",\n        status: 0\n      }];\n    },\n    loadData: function loadData(item, callback) {// 异步加载树子节点数据\n      // this.getRequest(\"请求路径，如/tree/getByParentId/\" + item.id).then(res => {\n      //   if (res.success === true) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     callback(res.result);\n      //   }\n      // });\n    },\n    search: function search() {\n      // 搜索树\n      if (this.searchKey) {\n        // 模拟请求\n        // this.treeLoading = true;\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\n        //   this.treeLoading = false;\n        //   if (res.success === true) {\n        //     this.treeData = res.result;\n        //   }\n        // });\n        // 模拟请求成功\n        this.treeData = [{\n          title: \"这里需要请求后台接口\",\n          id: \"1\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        }, {\n          title: \"所以这里是假数据\",\n          id: \"4\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        }, {\n          title: \"我是被禁用的节点\",\n          id: \"5\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: -1\n        }];\n      } else {\n        // 为空重新加载\n        this.getParentList();\n      }\n    },\n    selectTree: function selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (var attr in v[0]) {\n          if (v[0][attr] === null) {\n            v[0][attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v[0]);\n        var data = JSON.parse(str);\n        this.selectNode = data;\n        this.editTitle = data.title; // 重新加载表\n\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit: function cancelEdit() {\n      var data = this.$refs.tree.getSelectedNodes()[0];\n\n      if (data) {\n        data.selected = false;\n      } // 取消选择后获取全部数据\n\n\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect: function changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand: function changeExpand() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this.expandIcon = \"ios-arrow-back\";\n        this.span = 18;\n      } else {\n        this.expandIcon = \"ios-arrow-forward\";\n        this.span = 23;\n      }\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList: function getDataList() {\n      this.loading = true; // 根据用户选择树加载表数据\n\n      this.searchForm.selectId = this.selectNode.id; // 带多条件搜索参数获取表单数据 请自行修改接口\n      // this.getRequest(\"请求路径\", this.searchForm).then(res => {\n      //   this.loading = false;\n      //   if (res.success === true) {\n      //     this.data = res.result.content;\n      //     this.total = res.result.totalElements;\n      //   }\n      // });\n      // 模拟表格变化 模拟数据\n\n      if (!this.selectNode.id) {\n        // id为null获取全部数据\n        this.data = [{\n          id: \"1\",\n          name: \"X-BOOT\",\n          description: \"我是一级1的数据\",\n          status: 0,\n          createTime: \"2018-08-08 00:08:00\"\n        }, {\n          id: \"2\",\n          name: \"Exrick\",\n          description: \"我是二级1的数据\",\n          status: 0,\n          createTime: \"2018-08-08 00:08:00\"\n        }, {\n          id: \"3\",\n          name: \"XBoot\",\n          description: \"我是一级2的数据\",\n          status: -1,\n          createTime: \"2018-08-08 00:08:00\"\n        }];\n      } else if (this.selectNode.id == \"1\") {\n        this.data = [{\n          id: \"1\",\n          name: \"X-BOOT\",\n          description: \"我是一级1的数据\",\n          status: 0,\n          createTime: \"2018-08-08 00:08:00\"\n        }];\n      } else if (this.selectNode.id == \"2\") {\n        this.data = [{\n          id: \"2\",\n          name: \"Exrick\",\n          description: \"我是二级1的数据\",\n          status: 0,\n          createTime: \"2018-08-08 00:08:00\"\n        }];\n      } else if (this.selectNode.id == \"3\") {\n        this.data = [{\n          id: \"3\",\n          name: \"Present By Exrick\",\n          description: \"我是一级2的数据\",\n          status: -1,\n          createTime: \"2018-08-08 00:08:00\"\n        }];\n      }\n\n      this.total = this.data.length;\n      this.loading = false;\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10; // 重新加载数据\n\n      this.getDataList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getDataList();\n    },\n    showSelect: function showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    add: function add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑\";\n      this.$refs.form.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] === null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmit: function handelSubmit() {\n      var _this2 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this2.submitLoading = true;\n\n          if (_this2.modalType === 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete _this2.form.id;\n            delete _this2.form.status; // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success === true) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n\n            _this2.submitLoading = false;\n\n            _this2.$Message.success(\"操作成功\");\n\n            _this2.modalVisible = false;\n          } else if (_this2.modalType === 1) {\n            // 编辑\n            // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success === true) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n            _this2.submitLoading = false;\n\n            _this2.$Message.success(\"操作成功\");\n\n            _this2.modalVisible = false;\n          }\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this3 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        onOk: function onOk() {\n          // 删除\n          // this.operationLoading = true;\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + v.id).then(res => {\n          // this.operationLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n          _this3.$Message.success(\"操作成功\");\n\n          _this3.getDataList();\n        }\n      });\n    },\n    delAll: function delAll() {\n      var _this4 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this4.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1); // 批量删除\n          // this.operationLoading = true;\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + ids).then(res => {\n          // this.operationLoading = false;\n          //   if (res.success === true) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.clearSelectAll();\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n\n          _this4.$Message.success(\"操作成功\");\n\n          _this4.clearSelectAll();\n\n          _this4.getDataList();\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["tree&table.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n@import \"./tree&table.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Card>\r\n      <Row type=\"flex\" justify=\"space-between\" class=\"code-row-bg\">\r\n        <Col v-if=\"expand\" span=\"5\">\r\n          <Alert show-icon>\r\n            当前选择： <span class=\"select-title\">{{editTitle}}</span>\r\n            <a class=\"select-clear\" v-if=\"editTitle\" @click=\"cancelEdit\">取消选择</a>\r\n          </Alert>\r\n          <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"search\" placeholder=\"输入节点名搜索\" clearable/>\r\n          <div class=\"tree-bar\">\r\n            <Tree ref=\"tree\" :data=\"treeData\" :load-data=\"loadData\" @on-select-change=\"selectTree\"></Tree>\r\n          </div>\r\n          <Spin size=\"large\" fix v-if=\"treeLoading\"></Spin>\r\n        </Col>\r\n        <div class=\"expand\">\r\n          <Icon :type=\"expandIcon\" size=\"16\" class=\"icon\" @click=\"changeExpand\"/>\r\n        </div>\r\n        <Col :span=\"span\">\r\n          <Row>\r\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"50\" class=\"search-form\">\r\n              <Form-item label=\"名称\" prop=\"name\">\r\n              <Input type=\"text\" v-model=\"searchForm.name\" placeholder=\"请输入\" clearable style=\"width: 200px\"/>\r\n              </Form-item>\r\n              <Form-item label=\"状态\" prop=\"status\">\r\n                <Select v-model=\"searchForm.status\" placeholder=\"请选择\" clearable style=\"width: 200px\">\r\n                  <Option value=\"0\">正常</Option>\r\n                  <Option value=\"-1\">禁用</Option>\r\n                </Select>\r\n              </Form-item>\r\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n                <Button @click=\"handleReset\" >重置</Button>\r\n              </Form-item>\r\n            </Form>\r\n          </Row>\r\n          <Row class=\"operation\">\r\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加</Button>\r\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n            <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\r\n            <circleLoading v-if=\"operationLoading\"/>\r\n          </Row>\r\n          <Row>\r\n            <Alert show-icon>\r\n              已选择 <span class=\"select-count\">{{selectCount}}</span> 项\r\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            </Alert>\r\n          </Row>\r\n          <Row>\r\n            <Table :loading=\"loading\" border :columns=\"columns\" :data=\"data\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"showSelect\" ref=\"table\"></Table>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[10,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n\r\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable='false' :width=\"500\" :styles=\"{top: '30px'}\">\r\n      <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\r\n        <FormItem label=\"名称\" prop=\"name\">\r\n          <Input v-model=\"form.name\"/>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport circleLoading from \"../../my-components/circle-loading.vue\";\r\nexport default {\r\n  name: \"treeAndTable\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      treeLoading: false, // 树加载状态\r\n      loading: false, // 表加载状态\r\n      editTitle: \"\", // 编辑节点名称\r\n      searchKey: \"\", // 搜索树\r\n      expand: true,\r\n      span: 18,\r\n      expandIcon: \"ios-arrow-back\",\r\n      selectNode: {\r\n      },\r\n      treeData: [], // 树数据\r\n      operationLoading: false, // 操作加载状态\r\n      selectCount: 0, // 多选计数\r\n      selectList: [], // 多选数据\r\n      searchForm: {\r\n        // 搜索框对应data对象\r\n        name: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\" // 默认排序方式\r\n      },\r\n      modalType: 0, // 添加或编辑标识\r\n      modalVisible: false, // 添加或编辑显示\r\n      modalTitle: \"\", // 添加或编辑标题\r\n      form: {\r\n        // 添加或编辑表单对象初始化数据\r\n        sex: 1,\r\n        type: 0\r\n      },\r\n      formValidate: {\r\n        // 表单验证规则\r\n        name: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\r\n      },\r\n      columns: [\r\n        // 表头\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"name\",\r\n          width: 150,\r\n          sortable: true,\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"描述\",\r\n          key: \"description\",\r\n          width: 200,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 150,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          width: 200,\r\n          sortable: true,\r\n          sortType: \"desc\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 200,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      data: [], //表单数据\r\n      total: 0 // 表单数据总数\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 初始化一级节点\r\n      this.getParentList();\r\n      // 获取表单数据\r\n      this.getDataList();\r\n    },\r\n    getParentList() {\r\n      // this.treeLoading = true;\r\n      // this.getRequest(\"一级数据请求路径，如/tree/getByParentId/0\").then(res => {\r\n      //   this.treeLoading = false;\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     this.treeData = res.result;\r\n      //   }\r\n      // });\r\n      // 模拟请求成功\r\n      this.treeData = [\r\n        {\r\n          title: \"一级1\",\r\n          id: \"1\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: 0,\r\n          loading: false,\r\n          children: [\r\n            {\r\n              title: \"二级1\",\r\n              id: \"2\",\r\n              parentId: \"1\",\r\n              status: 0,\r\n              parentTitle: \"一级1\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: \"一级2\",\r\n          id: \"3\",\r\n          parentId: \"0\",\r\n          parentTitle: \"一级节点\",\r\n          status: 0\r\n        }\r\n      ];\r\n    },\r\n    loadData(item, callback) {\r\n      // 异步加载树子节点数据\r\n      // this.getRequest(\"请求路径，如/tree/getByParentId/\" + item.id).then(res => {\r\n      //   if (res.success === true) {\r\n      //     res.result.forEach(function(e) {\r\n      //       if (e.isParent) {\r\n      //         e.loading = false;\r\n      //         e.children = [];\r\n      //       }\r\n      //     });\r\n      //     callback(res.result);\r\n      //   }\r\n      // });\r\n    },\r\n    search() {\r\n      // 搜索树\r\n      if (this.searchKey) {\r\n        // 模拟请求\r\n        // this.treeLoading = true;\r\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\r\n        //   this.treeLoading = false;\r\n        //   if (res.success === true) {\r\n        //     this.treeData = res.result;\r\n        //   }\r\n        // });\r\n        // 模拟请求成功\r\n        this.treeData = [\r\n          {\r\n            title: \"这里需要请求后台接口\",\r\n            id: \"1\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级节点\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"所以这里是假数据\",\r\n            id: \"4\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级节点\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"我是被禁用的节点\",\r\n            id: \"5\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级节点\",\r\n            status: -1\r\n          }\r\n        ];\r\n      } else {\r\n        // 为空重新加载\r\n        this.getParentList();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.selectNode = data;\r\n        this.editTitle = data.title;\r\n        // 重新加载表\r\n        this.getDataList();\r\n      } else {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      let data = this.$refs.tree.getSelectedNodes()[0];\r\n      if (data) {\r\n        data.selected = false;\r\n      }\r\n      // 取消选择后获取全部数据\r\n      this.selectNode = {};\r\n      this.editTitle = \"\";\r\n      this.getDataList();\r\n    },\r\n    changeSelect(v) {\r\n      this.selectCount = v.length;\r\n      this.selectList = v;\r\n    },\r\n    changeExpand() {\r\n      this.expand = !this.expand;\r\n      if (this.expand) {\r\n        this.expandIcon = \"ios-arrow-back\";\r\n        this.span = 18;\r\n      } else {\r\n        this.expandIcon = \"ios-arrow-forward\";\r\n        this.span = 23;\r\n      }\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getDataList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getDataList();\r\n    },\r\n    getDataList() {\r\n      this.loading = true;\r\n      // 根据用户选择树加载表数据\r\n      this.searchForm.selectId = this.selectNode.id;\r\n      // 带多条件搜索参数获取表单数据 请自行修改接口\r\n      // this.getRequest(\"请求路径\", this.searchForm).then(res => {\r\n      //   this.loading = false;\r\n      //   if (res.success === true) {\r\n      //     this.data = res.result.content;\r\n      //     this.total = res.result.totalElements;\r\n      //   }\r\n      // });\r\n      // 模拟表格变化 模拟数据\r\n      if (!this.selectNode.id) {\r\n        // id为null获取全部数据\r\n        this.data = [\r\n          {\r\n            id: \"1\",\r\n            name: \"X-BOOT\",\r\n            description: \"我是一级1的数据\",\r\n            status: 0,\r\n            createTime: \"2018-08-08 00:08:00\"\r\n          },\r\n          {\r\n            id: \"2\",\r\n            name: \"Exrick\",\r\n            description: \"我是二级1的数据\",\r\n            status: 0,\r\n            createTime: \"2018-08-08 00:08:00\"\r\n          },\r\n          {\r\n            id: \"3\",\r\n            name: \"XBoot\",\r\n            description: \"我是一级2的数据\",\r\n            status: -1,\r\n            createTime: \"2018-08-08 00:08:00\"\r\n          }\r\n        ];\r\n      } else if (this.selectNode.id == \"1\") {\r\n        this.data = [\r\n          {\r\n            id: \"1\",\r\n            name: \"X-BOOT\",\r\n            description: \"我是一级1的数据\",\r\n            status: 0,\r\n            createTime: \"2018-08-08 00:08:00\"\r\n          }\r\n        ];\r\n      } else if (this.selectNode.id == \"2\") {\r\n        this.data = [\r\n          {\r\n            id: \"2\",\r\n            name: \"Exrick\",\r\n            description: \"我是二级1的数据\",\r\n            status: 0,\r\n            createTime: \"2018-08-08 00:08:00\"\r\n          }\r\n        ];\r\n      } else if (this.selectNode.id == \"3\") {\r\n        this.data = [\r\n          {\r\n            id: \"3\",\r\n            name: \"Present By Exrick\",\r\n            description: \"我是一级2的数据\",\r\n            status: -1,\r\n            createTime: \"2018-08-08 00:08:00\"\r\n          }\r\n        ];\r\n      }\r\n      this.total = this.data.length;\r\n      this.loading = false;\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getDataList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      // 重新加载数据\r\n      this.getDataList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getDataList();\r\n    },\r\n    showSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    add() {\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加\";\r\n      this.$refs.form.resetFields();\r\n      this.modalVisible = true;\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑\";\r\n      this.$refs.form.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.modalVisible = true;\r\n    },\r\n    handelSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.modalType === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.form.id;\r\n            delete this.form.status;\r\n            // this.postRequest(\"请求路径\", this.form).then(res => {\r\n            //   this.submitLoading = false;\r\n            //   if (res.success === true) {\r\n            //     this.$Message.success(\"操作成功\");\r\n            //     this.getDataList();\r\n            //     this.modalVisible = false;\r\n            //   }\r\n            // });\r\n            // 模拟成功\r\n            this.submitLoading = false;\r\n            this.$Message.success(\"操作成功\");\r\n            this.modalVisible = false;\r\n          } else if (this.modalType === 1) {\r\n            // 编辑\r\n            // this.postRequest(\"请求路径\", this.form).then(res => {\r\n            //   this.submitLoading = false;\r\n            //   if (res.success === true) {\r\n            //     this.$Message.success(\"操作成功\");\r\n            //     this.getDataList();\r\n            //     this.modalVisible = false;\r\n            //   }\r\n            // });\r\n            // 模拟成功\r\n            this.submitLoading = false;\r\n            this.$Message.success(\"操作成功\");\r\n            this.modalVisible = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        // 记得确认修改此处\r\n        content: \"您确认要删除 \" + v.name + \" ?\",\r\n        onOk: () => {\r\n          // 删除\r\n          // this.operationLoading = true;\r\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + v.id).then(res => {\r\n          // this.operationLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"操作成功\");\r\n          //     this.getDataList();\r\n          //   }\r\n          // });\r\n          // 模拟请求成功\r\n          this.$Message.success(\"操作成功\");\r\n          this.getDataList();\r\n        }\r\n      });\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          // 批量删除\r\n          // this.operationLoading = true;\r\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + ids).then(res => {\r\n          // this.operationLoading = false;\r\n          //   if (res.success === true) {\r\n          //     this.$Message.success(\"操作成功\");\r\n          //     this.clearSelectAll();\r\n          //     this.getDataList();\r\n          //   }\r\n          // });\r\n          // 模拟请求成功\r\n          this.$Message.success(\"操作成功\");\r\n          this.clearSelectAll();\r\n          this.getDataList();\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\views\\xboot-vue-template\\tree&table"}]}