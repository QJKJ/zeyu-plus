{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\html-edit\\htmlEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\xboot-vue-template\\html-edit\\htmlEdit.vue","mtime":1545792990787},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { uploadFile } from \"@/api/index\";\nimport E from \"wangeditor\"; // 表情包配置 自定义表情可在该js文件中统一修改\n\nimport { sina } from \"@/libs/emoji\";\nvar editor = null;\n\nvar xss = require(\"xss\");\n\nexport default {\n  name: \"html-edit\",\n  data: function data() {\n    return {\n      data: \"\",\n      // 富文本数据\n      dataEdit: \"\",\n      // 编辑数据\n      showHTMLModal: false,\n      // 显示html\n      full: false,\n      // html全屏开关\n      fullscreenModal: false // 显示全屏预览\n\n    };\n  },\n  methods: {\n    init: function init() {\n      this.initEditor();\n    },\n    initEditor: function initEditor() {\n      var _this = this;\n\n      var that = this; // 详见wangeditor3官网文档 https://www.kancloud.cn/wangfupeng/wangeditor3/332599\n\n      editor = new E(this.$refs.editor); // 编辑内容绑定数据\n\n      editor.customConfig.onchange = function (html) {\n        _this.data = xss(html);\n      }; // 配置上传图片服务器端地址\n\n\n      editor.customConfig.uploadImgServer = uploadFile; // xboot如要header中传入token鉴权\n\n      editor.customConfig.uploadImgHeaders = {\n        accessToken: that.getStore(\"accessToken\")\n      };\n      editor.customConfig.uploadFileName = \"file\";\n      editor.customConfig.uploadImgHooks = {\n        before: function before(xhr, editor, files) {// 图片上传之前触发\n        },\n        success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n          // 图片上传并返回结果，但图片插入错误时触发\n          that.$Message.error(\"上传图片失败\");\n        },\n        error: function error(xhr, editor) {\n          // 图片上传出错时触发\n          that.$Message.error(\"上传图片出错\");\n        },\n        timeout: function timeout(xhr, editor) {\n          // 图片上传超时时触发\n          that.$Message.error(\"上传图片超时\");\n        },\n        // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\n        customInsert: function customInsert(insertImg, result, editor) {\n          if (result.success === true) {\n            var url = result.result;\n            insertImg(url);\n            that.$Message.success(\"上传图片成功\");\n          } else {\n            that.$Message.error(result.message);\n          }\n        }\n      };\n\n      editor.customConfig.customAlert = function (info) {// info 是需要提示的内容\n        // that.$Message.info(info);\n      }; // 字体\n\n\n      editor.customConfig.fontNames = [\"微软雅黑\", \"宋体\", \"黑体\", \"Arial\"]; // 表情面板可以有多个 tab ，因此要配置成一个数组。数组每个元素代表一个 tab 的配置\n\n      editor.customConfig.emotions = [{\n        // tab 的标题\n        title: \"新浪\",\n        // type -> 'emoji' / 'image'\n        type: \"image\",\n        // content -> 数组\n        content: sina\n      }];\n      editor.create();\n    },\n    editHTML: function editHTML() {\n      this.dataEdit = this.data;\n      this.showHTMLModal = true;\n    },\n    editHTMLOk: function editHTMLOk() {\n      editor.txt.html(this.dataEdit);\n      this.data = xss(this.dataEdit);\n      this.showHTMLModal = false;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["htmlEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n</style>\r\n<template>\r\n    <div class=\"search\">\r\n      <Row>\r\n        <Card>     \r\n          <p slot=\"title\">\r\n            富文本编辑 - <a href=\"http://www.wangeditor.com/\" target=\"_blank\">wangEditor</a>&nbsp;&nbsp;&nbsp;\r\n            其他编辑器推荐：<a href=\"https://github.com/notadd/neditor\" target=\"_blank\">neditor</a>\r\n          </p>\r\n          <Form ref=\"form\" :label-width=\"90\">\r\n            <Form-item label=\"内容详情\">\r\n              <div ref=\"editor\"></div>\r\n            </Form-item>\r\n            <Form-item label=\"\" class=\"br\">\r\n              <Button @click=\"editHTML\" type=\"primary\" icon=\"ios-create-outline\">编辑HTML代码</Button>\r\n              <Button @click=\"fullscreenModal=true\" icon=\"md-eye\">全屏预览</Button>\r\n            </Form-item>\r\n            <Form-item label=\"说明：\">\r\n              使用开源wangEditor编辑器，已配置好图片上传、表情包、编辑HTML代码、全屏预览、XSS攻击过滤。<br>\r\n              当然你可以根据官方文档自行配置使用，由于wangEditor轻量简洁美观等特点这里没有选用neditor。\r\n            </Form-item>\r\n          </Form> \r\n        </Card>\r\n      </Row>\r\n      <Modal title=\"编辑html代码\" v-model=\"showHTMLModal\" :mask-closable='false' :width=\"900\" :fullscreen=\"full\">\r\n        <Input v-if=\"!full\" v-model=\"dataEdit\" :autosize=\"true\" type=\"textarea\" style=\"max-height:60vh;overflow:auto\"/>\r\n        <Input v-if=\"full\" v-model=\"dataEdit\" :autosize=\"true\" type=\"textarea\"/>\r\n        <div slot=\"footer\">\r\n          <Button @click=\"full=!full\" icon=\"md-expand\">全屏开/关</Button>\r\n          <Button @click=\"editHTMLOk\" type=\"primary\" icon=\"md-checkmark-circle-outline\">确定保存</Button>\r\n        </div>\r\n      </Modal>\r\n      <Modal title=\"预览\" v-model=\"fullscreenModal\" fullscreen>\r\n        <div v-html=\"data\">{{data}}</div>\r\n        <div slot=\"footer\">\r\n          <Button @click=\"fullscreenModal=false\">关闭</Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { uploadFile } from \"@/api/index\";\r\nimport E from \"wangeditor\";\r\n// 表情包配置 自定义表情可在该js文件中统一修改\r\nimport { sina } from \"@/libs/emoji\";\r\nlet editor = null;\r\nvar xss = require(\"xss\");\r\nexport default {\r\n  name: \"html-edit\",\r\n  data() {\r\n    return {\r\n      data: \"\", // 富文本数据\r\n      dataEdit: \"\", // 编辑数据\r\n      showHTMLModal: false, // 显示html\r\n      full: false, // html全屏开关\r\n      fullscreenModal: false // 显示全屏预览\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.initEditor();\r\n    },\r\n    initEditor() {\r\n      let that = this;\r\n      // 详见wangeditor3官网文档 https://www.kancloud.cn/wangfupeng/wangeditor3/332599\r\n      editor = new E(this.$refs.editor);\r\n      // 编辑内容绑定数据\r\n      editor.customConfig.onchange = html => {\r\n        this.data = xss(html);\r\n      };\r\n      // 配置上传图片服务器端地址\r\n      editor.customConfig.uploadImgServer = uploadFile;\r\n      // xboot如要header中传入token鉴权\r\n      editor.customConfig.uploadImgHeaders = {\r\n        accessToken: that.getStore(\"accessToken\")\r\n      };\r\n      editor.customConfig.uploadFileName = \"file\";\r\n      editor.customConfig.uploadImgHooks = {\r\n        before: function(xhr, editor, files) {\r\n          // 图片上传之前触发\r\n        },\r\n        success: function(xhr, editor, result) {\r\n          // 图片上传并返回结果，图片插入成功之后触发\r\n        },\r\n        fail: function(xhr, editor, result) {\r\n          // 图片上传并返回结果，但图片插入错误时触发\r\n          that.$Message.error(\"上传图片失败\");\r\n        },\r\n        error: function(xhr, editor) {\r\n          // 图片上传出错时触发\r\n          that.$Message.error(\"上传图片出错\");\r\n        },\r\n        timeout: function(xhr, editor) {\r\n          // 图片上传超时时触发\r\n          that.$Message.error(\"上传图片超时\");\r\n        },\r\n        // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\r\n        customInsert: function(insertImg, result, editor) {\r\n          if (result.success === true) {\r\n            let url = result.result;\r\n            insertImg(url);\r\n            that.$Message.success(\"上传图片成功\");\r\n          } else {\r\n            that.$Message.error(result.message);\r\n          }\r\n        }\r\n      };\r\n      editor.customConfig.customAlert = function(info) {\r\n        // info 是需要提示的内容\r\n        // that.$Message.info(info);\r\n      };\r\n      // 字体\r\n      editor.customConfig.fontNames = [\"微软雅黑\", \"宋体\", \"黑体\", \"Arial\"];\r\n      // 表情面板可以有多个 tab ，因此要配置成一个数组。数组每个元素代表一个 tab 的配置\r\n      editor.customConfig.emotions = [\r\n        {\r\n          // tab 的标题\r\n          title: \"新浪\",\r\n          // type -> 'emoji' / 'image'\r\n          type: \"image\",\r\n          // content -> 数组\r\n          content: sina\r\n        }\r\n      ];\r\n      editor.create();\r\n    },\r\n    editHTML() {\r\n      this.dataEdit = this.data;\r\n      this.showHTMLModal = true;\r\n    },\r\n    editHTMLOk() {\r\n      editor.txt.html(this.dataEdit);\r\n      this.data = xss(this.dataEdit);\r\n      this.showHTMLModal = false;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\views\\xboot-vue-template\\html-edit"}]}