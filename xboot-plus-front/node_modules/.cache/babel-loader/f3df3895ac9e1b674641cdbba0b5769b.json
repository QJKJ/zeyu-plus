{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\sys\\shadesManage\\shadesManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\sys\\shadesManage\\shadesManage.vue","mtime":1547018772676},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { initDepartment, loadDepartment, getUserListData, getAllRoleList, addUser, editUser, enableUser, disableUser, deleteUser, getAllUserData, importUserData, searchDepartment, uploadFile, getDictDataByType } from \"@/api/index\";\nimport expandRow from \"./expand.vue\";\nimport circleLoading from \"../../my-components/circle-loading.vue\"; // 模版导入文件表数据\n\nimport { userColumns, userData } from \"@/libs/importTemplate\"; // 指定导出列数据\n\nimport { exportColumn } from \"./exportColumn\";\nimport excel from \"@/libs/excel\";\nexport default {\n  name: \"shadesManage\",\n  components: {\n    circleLoading: circleLoading,\n    expandRow: expandRow\n  },\n  data: function data() {\n    var _this = this;\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error(\"密码长度不得小于6位\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateMobile = function validateMobile(rule, value, callback) {\n      var reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n\n      if (!reg.test(value)) {\n        callback(new Error(\"手机号格式错误\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      accessToken: {},\n      uploadFileUrl: uploadFile,\n      loading: true,\n      dpLoading: false,\n      // 部门树加载\n      operationLoading: false,\n      importLoading: false,\n      loadingExport: true,\n      exportModalVisible: false,\n      importModalVisible: false,\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      selectCount: 0,\n      selectList: [],\n      viewImage: false,\n      department: [],\n      selectDep: [],\n      dataDep: [],\n      searchKey: \"\",\n      searchForm: {\n        username: \"\",\n        departmentId: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      selectDate: null,\n      modalType: 0,\n      userModalVisible: false,\n      modalTitle: \"\",\n      userForm: {\n        sex: 1,\n        type: 0,\n        roles: [],\n        departmentId: \"\",\n        departmentTitle: \"\"\n      },\n      userRoles: [],\n      roleList: [],\n      errorPass: \"\",\n      userFormValidate: {\n        username: [{\n          required: true,\n          message: \"账号不能为空\",\n          trigger: \"blur\"\n        }],\n        mobile: [{\n          required: true,\n          message: \"手机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validateMobile,\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"请输入邮箱地址\"\n        }, {\n          type: \"email\",\n          message: \"邮箱格式不正确\"\n        }]\n      },\n      submitLoading: false,\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"expand\",\n        width: 50,\n        fixed: \"left\",\n        render: function render(h, params) {\n          return h(expandRow, {\n            props: {\n              row: params.row\n            }\n          });\n        }\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"用户名\",\n        key: \"username\",\n        width: 145,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"所属部门\",\n        key: \"departmentTitle\",\n        width: 120\n      }, {\n        title: \"手机\",\n        key: \"mobile\",\n        width: 115,\n        sortable: true,\n        render: function render(h, params) {\n          if (_this.getStore(\"roles\").includes(\"ROLE_ADMIN\")) {\n            return h(\"span\", params.row.mobile);\n          } else {\n            return h(\"span\", \"您无权查看该数据\");\n          }\n        }\n      }, {\n        title: \"邮箱\",\n        key: \"email\",\n        width: 180,\n        sortable: true\n      }, {\n        title: \"性别\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\",\n        render: function render(h, params) {\n          var re = \"\";\n\n          _this.dictSex.forEach(function (e) {\n            if (e.value == params.row.sex) {\n              re = e.title;\n            }\n          });\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"用户类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 100,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.type === 1) {\n            re = \"管理员\";\n          } else if (params.row.type === 0) {\n            re = \"普通用户\";\n          }\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 140,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"success\"\n              }\n            }, \"正常启用\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"error\"\n              }\n            }, \"禁用\")]);\n          }\n        },\n        filters: [{\n          label: \"正常启用\",\n          value: 0\n        }, {\n          label: \"禁用\",\n          value: -1\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 0) {\n            return row.status === 0;\n          } else if (value === -1) {\n            return row.status === -1;\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 150\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 200,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          var enableOrDisable = \"\";\n\n          if (params.row.status == 0) {\n            enableOrDisable = h(\"Button\", {\n              props: {\n                size: \"small\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.disable(params.row);\n                }\n              }\n            }, \"禁用\");\n          } else {\n            enableOrDisable = h(\"Button\", {\n              props: {\n                type: \"success\",\n                size: \"small\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.enable(params.row);\n                }\n              }\n            }, \"启用\");\n          }\n\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), enableOrDisable, h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      exportColumns: exportColumn,\n      chooseColumns: [],\n      filename: \"用户数据\",\n      exportTitle: \"确认导出\",\n      exportType: \"\",\n      importTableData: [],\n      importColumns: [],\n      uploadfile: {\n        name: \"\"\n      },\n      tempColumns: userColumns,\n      tempData: userData,\n      data: [],\n      exportData: [],\n      total: 0,\n      dictSex: []\n    };\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n      this.initDepartmentData();\n      this.getUserList();\n      this.initDepartmentTreeData();\n      this.getDictSexData(); // 初始化导出列数据\n\n      var array = [];\n      this.exportColumns.forEach(function (e) {\n        // 指定列限制权限\n        if (!_this2.getStore(\"roles\").includes(\"ROLE_ADMIN\") && e.key === \"mobile\") {\n          e.title = \"[无权导出] \" + e.title;\n          e.disabled = true;\n        } else {\n          e.disabled = false;\n        }\n\n        array.push(e.title);\n      });\n      this.chooseColumns = array;\n    },\n    getDictSexData: function getDictSexData() {\n      var _this3 = this;\n\n      // 获取性别字典数据\n      getDictDataByType(\"sex\").then(function (res) {\n        if (res.success) {\n          _this3.dictSex = res.result;\n        }\n      });\n    },\n    initDepartmentData: function initDepartmentData() {\n      var _this4 = this;\n\n      initDepartment().then(function (res) {\n        if (res.success === true) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.value = e.id;\n              e.label = e.title;\n              e.loading = false;\n              e.children = [];\n            } else {\n              e.value = e.id;\n              e.label = e.title;\n            }\n\n            if (e.status === -1) {\n              e.label = \"[已禁用] \" + e.label;\n              e.disabled = true;\n            }\n          });\n          _this4.department = res.result;\n        }\n      });\n    },\n    initDepartmentTreeData: function initDepartmentTreeData() {\n      var _this5 = this;\n\n      initDepartment().then(function (res) {\n        if (res.success === true) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n\n            if (e.status === -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          _this5.dataDep = res.result;\n        }\n      });\n    },\n    loadData: function loadData(item, callback) {\n      item.loading = true;\n      loadDepartment(item.value).then(function (res) {\n        item.loading = false;\n\n        if (res.success === true) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.value = e.id;\n              e.label = e.title;\n              e.loading = false;\n              e.children = [];\n            } else {\n              e.value = e.id;\n              e.label = e.title;\n            }\n\n            if (e.status === -1) {\n              e.label = \"[已禁用] \" + e.label;\n              e.disabled = true;\n            }\n          });\n          item.children = res.result;\n          callback();\n        }\n      });\n    },\n    loadDataTree: function loadDataTree(item, callback) {\n      loadDepartment(item.id).then(function (res) {\n        if (res.success === true) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n\n            if (e.status === -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          callback(res.result);\n        }\n      });\n    },\n    searchDp: function searchDp() {\n      var _this6 = this;\n\n      // 搜索部门\n      if (this.searchKey) {\n        this.dpLoading = true;\n        searchDepartment({\n          title: this.searchKey\n        }).then(function (res) {\n          _this6.dpLoading = false;\n\n          if (res.success) {\n            res.result.forEach(function (e) {\n              if (e.status === -1) {\n                e.title = \"[已禁用] \" + e.title;\n                e.disabled = true;\n              }\n            });\n            _this6.dataDep = res.result;\n          }\n        });\n      } else {\n        this.initDepartmentTreeData();\n      }\n    },\n    selectTree: function selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (var attr in v[0]) {\n          if (v[0][attr] === null) {\n            v[0][attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v[0]);\n        var data = JSON.parse(str);\n        this.userForm.departmentId = data.id;\n        this.userForm.departmentTitle = data.title;\n      }\n    },\n    clearSelectDep: function clearSelectDep() {\n      this.userForm.departmentId = \"\";\n      this.userForm.departmentTitle = \"\";\n    },\n    handleChangeDep: function handleChangeDep(value, selectedData) {\n      // 获取最后一个值\n      if (value && value.length > 0) {\n        this.searchForm.departmentId = value[value.length - 1];\n      } else {\n        this.searchForm.departmentId = \"\";\n      }\n    },\n    handleChangeUserFormDep: function handleChangeUserFormDep(value, selectedData) {\n      // 获取最后一个值\n      if (value && value.length > 0) {\n        this.userForm.departmentId = value[value.length - 1];\n      } else {\n        this.userForm.departmentId = \"\";\n      }\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getUserList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getUserList();\n    },\n    selectDateRange: function selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getUserList: function getUserList() {\n      var _this7 = this;\n\n      // 多条件搜索用户列表\n      this.loading = true; // 避免后台默认值\n\n      if (!this.searchForm.type) {\n        this.searchForm.type = \"\";\n      }\n\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n\n      getUserListData(this.searchForm).then(function (res) {\n        _this7.loading = false;\n\n        if (res.success === true) {\n          _this7.data = res.result.content;\n          _this7.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getUserList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectDep = [];\n      this.searchForm.departmentId = \"\"; // 重新加载数据\n\n      this.getUserList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getUserList();\n    },\n    getRoleList: function getRoleList() {\n      var _this8 = this;\n\n      getAllRoleList().then(function (res) {\n        if (res.success === true) {\n          _this8.roleList = res.result;\n        }\n      });\n    },\n    handleDropdown: function handleDropdown(name) {\n      var _this9 = this;\n\n      if (name === \"refresh\") {\n        this.getUserList();\n      } else if (name === \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n\n        this.exportType = \"part\";\n        this.exportModalVisible = true;\n        this.exportTitle = \"确认导出 \" + this.selectCount + \" 条数据(付费)\";\n      } else if (name === \"exportAll\") {\n        this.exportType = \"all\";\n        this.exportModalVisible = true;\n        this.exportTitle = \"确认导出全部 \" + this.total + \" 条数据(付费)\";\n        getAllUserData().then(function (res) {\n          if (res.success) {\n            _this9.exportData = res.result;\n          }\n        });\n      } else if (name === \"importData\") {\n        this.importModalVisible = true;\n      }\n    },\n    exportCustomData: function exportCustomData() {\n      var _this10 = this;\n\n      if (this.filename == \"\") {\n        this.filename = \"用户数据\";\n      } // 判断勾选导出列\n\n\n      var array = [];\n      this.exportColumns.forEach(function (e) {\n        _this10.chooseColumns.forEach(function (c) {\n          if (e.title === c && !e.disabled) {\n            array.push(e);\n          }\n        });\n      });\n      this.exportColumns = array;\n      this.exportModalVisible = false;\n      var title = [];\n      var key = [];\n      this.exportColumns.forEach(function (e) {\n        title.push(e.title);\n        key.push(e.key);\n      });\n      var params = {\n        title: title,\n        key: key,\n        data: this.exportData,\n        autoWidth: true,\n        filename: this.filename\n      };\n      excel.export_array_to_excel(params);\n    },\n    beforeUploadImport: function beforeUploadImport(file) {\n      this.uploadfile = file;\n      var fileExt = file.name.split(\".\").pop().toLocaleLowerCase();\n\n      if (fileExt === \"xlsx\" || fileExt === \"xls\") {\n        this.readFile(file);\n        this.file = file;\n      } else {\n        this.$Notice.warning({\n          title: \"文件类型错误\",\n          desc: \"所选文件‘ \" + file.name + \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\n        });\n      }\n\n      return false;\n    },\n    // 读取文件\n    readFile: function readFile(file) {\n      var _this11 = this;\n\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onerror = function (e) {\n        _this11.$Message.error(\"文件读取出错\");\n      };\n\n      reader.onload = function (e) {\n        _this11.$Message.success(\"读取数据成功\");\n\n        var data = e.target.result;\n\n        var _excel$read = excel.read(data, \"array\"),\n            header = _excel$read.header,\n            results = _excel$read.results;\n\n        var tableTitle = header.map(function (item) {\n          return {\n            title: item,\n            key: item\n          };\n        });\n        _this11.importTableData = results;\n        _this11.importColumns = tableTitle;\n      };\n    },\n    downloadTemple: function downloadTemple() {\n      var title = [];\n      var key = [];\n      userColumns.forEach(function (e) {\n        title.push(e.title);\n        key.push(e.key);\n      });\n      var params = {\n        title: title,\n        key: key,\n        data: userData,\n        autoWidth: true,\n        filename: \"导入用户数据模版\"\n      };\n      excel.export_array_to_excel(params);\n    },\n    importData: function importData() {\n      var _this12 = this;\n\n      this.importLoading = true;\n      importUserData(this.importTableData).then(function (res) {\n        _this12.importLoading = false;\n\n        if (res.success) {\n          _this12.importModalVisible = false;\n\n          _this12.getUserList();\n\n          _this12.$Modal.info({\n            title: \"导入结果\",\n            content: res.message\n          });\n        }\n      });\n    },\n    cancelUser: function cancelUser() {\n      this.userModalVisible = false;\n    },\n    submitUser: function submitUser() {\n      var _this13 = this;\n\n      this.$refs.userForm.validate(function (valid) {\n        if (valid) {\n          if (_this13.modalType === 0) {\n            // 添加用户 避免编辑后传入id\n            delete _this13.userForm.id;\n            delete _this13.userForm.status;\n\n            if (_this13.userForm.password == \"\" || _this13.userForm.password == undefined) {\n              _this13.errorPass = \"密码不能为空\";\n              return;\n            }\n\n            if (_this13.userForm.password.length < 6) {\n              _this13.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n\n            _this13.submitLoading = true;\n            addUser(_this13.userForm).then(function (res) {\n              _this13.submitLoading = false;\n\n              if (res.success === true) {\n                _this13.$Message.success(\"操作成功\");\n\n                _this13.getUserList();\n\n                _this13.userModalVisible = false;\n              }\n            });\n          } else {\n            // 编辑\n            _this13.submitLoading = true;\n            editUser(_this13.userForm).then(function (res) {\n              _this13.submitLoading = false;\n\n              if (res.success === true) {\n                _this13.$Message.success(\"操作成功\");\n\n                _this13.getUserList();\n\n                _this13.userModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    viewPic: function viewPic() {\n      this.viewImage = true;\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc: \"所选文件‘ \" + file.name + \" ’格式不正确, 请选择 .jpg .jpeg .png .gif格式文件\"\n      });\n    },\n    handleMaxSize: function handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    beforeUpload: function beforeUpload() {\n      if (!this.$route.meta.permTypes.includes(\"upload\")) {\n        this.$Message.error(\"此处您没有上传权限(为演示功能，该按钮未配置隐藏)\");\n        return false;\n      }\n\n      return true;\n    },\n    handleSuccess: function handleSuccess(res, file) {\n      if (res.success === true) {\n        file.url = res.result;\n        this.userForm.avatar = res.result;\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError: function handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    add: function add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加用户\";\n      this.$refs.userForm.resetFields();\n      this.userModalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑用户\";\n      this.$refs.userForm.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] === null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var userInfo = JSON.parse(str);\n      this.userForm = userInfo;\n      var selectRolesId = [];\n      this.userForm.roles.forEach(function (e) {\n        selectRolesId.push(e.id);\n      });\n      this.userForm.roles = selectRolesId;\n      this.userModalVisible = true;\n    },\n    enable: function enable(v) {\n      var _this14 = this;\n\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\n        onOk: function onOk() {\n          _this14.operationLoading = true;\n          enableUser(v.id).then(function (res) {\n            _this14.operationLoading = false;\n\n            if (res.success === true) {\n              _this14.$Message.success(\"操作成功\");\n\n              _this14.getUserList();\n            }\n          });\n        }\n      });\n    },\n    disable: function disable(v) {\n      var _this15 = this;\n\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\n        onOk: function onOk() {\n          _this15.operationLoading = true;\n          disableUser(v.id).then(function (res) {\n            _this15.operationLoading = false;\n\n            if (res.success === true) {\n              _this15.$Message.success(\"操作成功\");\n\n              _this15.getUserList();\n            }\n          });\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this16 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\n        onOk: function onOk() {\n          _this16.operationLoading = true;\n          deleteUser(v.id).then(function (res) {\n            _this16.operationLoading = false;\n\n            if (res.success === true) {\n              _this16.$Message.success(\"删除成功\");\n\n              _this16.getUserList();\n            }\n          });\n        }\n      });\n    },\n    dropDown: function dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n\n      this.drop = !this.drop;\n    },\n    showSelect: function showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll: function delAll() {\n      var _this17 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this17.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          _this17.operationLoading = true;\n          deleteUser(ids).then(function (res) {\n            _this17.operationLoading = false;\n\n            if (res.success === true) {\n              _this17.$Message.success(\"删除成功\");\n\n              _this17.clearSelectAll();\n\n              _this17.getUserList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.getRoleList();\n  }\n};",{"version":3,"sources":["shadesManage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n@import \"./shadesManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n      <Card>\r\n        <Row>\r\n          <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\">\r\n            <Form-item label=\"用户名称\" prop=\"username\">\r\n              <Input type=\"text\" v-model=\"searchForm.username\" clearable placeholder=\"请输入用户名\" style=\"width: 200px\"/>\r\n            </Form-item>\r\n            <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n              <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n              <Button @click=\"handleReset\" >重置</Button>\r\n            </Form-item>\r\n          </Form>\r\n        </Row>\r\n        <Row class=\"operation\">\r\n          <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加用户</Button>\r\n          <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n          <circleLoading v-if=\"operationLoading\"/>\r\n        </Row>\r\n        <Row>\r\n          <Alert show-icon>\r\n            已选择 <span class=\"select-count\">{{selectCount}}</span> 项\r\n            <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n          </Alert>\r\n        </Row>\r\n        <Row>\r\n          <Table :loading=\"loading\" border :columns=\"columns\" :data=\"data\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"showSelect\" ref=\"table\"></Table>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n          <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[10,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n        </Row>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n    <Modal :title=\"modalTitle\" v-model=\"userModalVisible\" :mask-closable='false' :width=\"500\" :styles=\"{top: '30px'}\">\r\n      <Form ref=\"userForm\" :model=\"userForm\" :label-width=\"70\" :rules=\"userFormValidate\">\r\n        <FormItem label=\"用户名\" prop=\"username\">\r\n          <Input v-model=\"userForm.username\" autocomplete=\"off\"/>\r\n        </FormItem>\r\n        <FormItem label=\"密码\" prop=\"password\" v-if=\"modalType===0\" :error=\"errorPass\">\r\n          <Input type=\"password\" v-model=\"userForm.password\" autocomplete=\"off\"/>\r\n        </FormItem>\r\n        <FormItem label=\"邮箱\" prop=\"email\">\r\n          <Input v-model=\"userForm.email\"/>\r\n        </FormItem>\r\n        <FormItem label=\"手机号\" prop=\"mobile\">\r\n          <Input v-model=\"userForm.mobile\"/>\r\n        </FormItem>\r\n        <FormItem label=\"性别\" prop=\"sex\">\r\n          <RadioGroup v-model=\"userForm.sex\">\r\n            <Radio v-for=\"(item, i) in dictSex\" :key=\"i\" :label=\"Number(item.value)\">{{item.title}}</Radio>\r\n          </RadioGroup>\r\n        </FormItem>\r\n        <Form-item label=\"头像\" prop=\"avatar\">\r\n          <Poptip trigger=\"hover\" title=\"图片预览\" placement=\"right\" width=\"350\">\r\n            <Input v-model=\"userForm.avatar\" placeholder=\"可直接填入网络图片链接\" clearable/>\r\n            <div slot=\"content\">\r\n              <img :src=\"userForm.avatar\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n              <a @click=\"viewPic()\" style=\"margin-top:5px;text-align:right;display:block\">查看原图</a>\r\n            </div>\r\n          </Poptip>\r\n          <Upload :action=\"uploadFileUrl\"\r\n                  :headers=\"accessToken\"\r\n                  :on-success=\"handleSuccess\"\r\n                  :on-error=\"handleError\"\r\n                  :format=\"['jpg','jpeg','png','gif']\"\r\n                  :max-size=\"5120\"\r\n                  :on-format-error=\"handleFormatError\"\r\n                  :on-exceeded-size=\"handleMaxSize\"\r\n                  :before-upload=\"beforeUpload\"\r\n                  ref=\"up\"\r\n                  class=\"upload\">\r\n            <Button icon=\"ios-cloud-upload-outline\">上传图片</Button>\r\n          </Upload>\r\n        </Form-item>\r\n        <Form-item label=\"所属部门\" prop=\"departmentTitle\">\r\n          <Poptip trigger=\"click\" placement=\"right\" title=\"选择部门\" width=\"250\">\r\n            <div style=\"display:flex;\">\r\n              <Input v-model=\"userForm.departmentTitle\" readonly style=\"margin-right:10px;\"/>\r\n              <Button icon=\"md-trash\" @click=\"clearSelectDep\">清空已选</Button>\r\n            </div>\r\n            <div slot=\"content\" class=\"tree-bar\">\r\n              <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"searchDp\" placeholder=\"输入部门名搜索\" clearable/>\r\n              <Tree :data=\"dataDep\" :load-data=\"loadDataTree\" @on-select-change=\"selectTree\"></Tree>\r\n              <Spin size=\"large\" fix v-if=\"dpLoading\"></Spin>\r\n            </div>\r\n          </Poptip>\r\n        </Form-item>\r\n        <FormItem label=\"用户类型\" prop=\"type\">\r\n          <Select v-model=\"userForm.type\" placeholder=\"请选择\">\r\n            <Option :value=\"0\">普通用户</Option>\r\n            <Option :value=\"1\">管理员</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"角色分配\" prop=\"roles\">\r\n          <Select v-model=\"userForm.roles\" multiple>\r\n            <Option v-for=\"item in roleList\" :value=\"item.id\" :key=\"item.id\" :label=\"item.name\">\r\n              <!-- <div style=\"display:flex;flex-direction:column\"> -->\r\n              <span style=\"margin-right:10px;\">{{ item.name }}</span>\r\n              <span style=\"color:#ccc;\">{{ item.description }}</span>\r\n              <!-- </div> -->\r\n            </Option>\r\n          </Select>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"cancelUser\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitUser\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n    <Modal title=\"图片预览\" v-model=\"viewImage\" :styles=\"{top: '30px'}\" draggable>\r\n      <img :src=\"userForm.avatar\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n      <div slot=\"footer\">\r\n        <Button @click=\"viewImage=false\">关闭</Button>\r\n      </div>\r\n    </Modal>\r\n    <!-- 自定义导出数据 -->\r\n    <Modal\r\n            v-model=\"exportModalVisible\"\r\n            :title=\"exportTitle\"\r\n            :loading=\"loadingExport\"\r\n            @on-ok=\"exportCustomData\">\r\n      <Form ref=\"exportForm\" :label-width=\"85\">\r\n        <FormItem label=\"导出文件名\">\r\n          <Input v-model=\"filename\"/>\r\n        </FormItem>\r\n        <FormItem label=\"自定义导出列\">\r\n          <CheckboxGroup v-model=\"chooseColumns\">\r\n            <Checkbox v-for=\"(item, i) in exportColumns\" :label=\"item.title\" :key=\"i\" :value=\"item.checked\" :disabled=\"item.disabled\"></Checkbox>\r\n          </CheckboxGroup>\r\n        </FormItem>\r\n      </Form>\r\n    </Modal>\r\n    <Drawer title=\"导入数据\" closable v-model=\"importModalVisible\" width=\"1000\">\r\n      <Upload action=\"\" :before-upload=\"beforeUploadImport\" accept=\".xls, .xlsx\">\r\n        <Button icon=\"ios-cloud-upload-outline\" style=\"margin-right:10px\">上传Excel文件</Button>\r\n        <span v-if=\"uploadfile.name!=''\">当前选择文件：{{ uploadfile.name }}</span>\r\n      </Upload>\r\n      <Alert type=\"warning\" show-icon>\r\n        导入前请下载查看导入模版数据文件，确保数据格式正确，不得修改列英文名称。必需数据字段：用户名(唯一)、密码(明文)\r\n      </Alert>\r\n      <Table :columns=\"importColumns\" border height=\"510\" :data=\"importTableData\" ref=\"importTable\"></Table>\r\n      <div class=\"drawer-footer\">\r\n        <Button @click=\"downloadTemple\" type=\"info\" style=\"position:absolute;left:15px;\">下载导入模板</Button>\r\n        <Button @click=\"importModalVisible=false\">关闭</Button>\r\n        <Button :loading=\"importLoading\" :disabled=\"importTableData.length<=0\" @click=\"importData\" style=\"margin-left:5px\" type=\"primary\">\r\n          确认导入<span v-if=\"importTableData.length>0\"> {{importTableData.length}} 条数据</span>\r\n        </Button>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  initDepartment,\r\n  loadDepartment,\r\n  getUserListData,\r\n  getAllRoleList,\r\n  addUser,\r\n  editUser,\r\n  enableUser,\r\n  disableUser,\r\n  deleteUser,\r\n  getAllUserData,\r\n  importUserData,\r\n  searchDepartment,\r\n  uploadFile,\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\nimport expandRow from \"./expand.vue\";\r\nimport circleLoading from \"../../my-components/circle-loading.vue\";\r\n// 模版导入文件表数据\r\nimport { userColumns, userData } from \"@/libs/importTemplate\";\r\n// 指定导出列数据\r\nimport { exportColumn } from \"./exportColumn\";\r\nimport excel from \"@/libs/excel\";\r\nexport default {\r\n  name: \"shadesManage\",\r\n  components: {\r\n    circleLoading,\r\n    expandRow\r\n  },\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error(\"密码长度不得小于6位\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const validateMobile = (rule, value, callback) => {\r\n      var reg = /^[1][3,4,5,7,8][0-9]{9}$/;\r\n      if (!reg.test(value)) {\r\n        callback(new Error(\"手机号格式错误\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      accessToken: {},\r\n      uploadFileUrl: uploadFile,\r\n      loading: true,\r\n      dpLoading: false, // 部门树加载\r\n      operationLoading: false,\r\n      importLoading: false,\r\n      loadingExport: true,\r\n      exportModalVisible: false,\r\n      importModalVisible: false,\r\n      drop: false,\r\n      dropDownContent: \"展开\",\r\n      dropDownIcon: \"ios-arrow-down\",\r\n      selectCount: 0,\r\n      selectList: [],\r\n      viewImage: false,\r\n      department: [],\r\n      selectDep: [],\r\n      dataDep: [],\r\n      searchKey: \"\",\r\n      searchForm: {\r\n        username: \"\",\r\n        departmentId: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        sex: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n        sort: \"createTime\",\r\n        order: \"desc\",\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n      },\r\n      selectDate: null,\r\n      modalType: 0,\r\n      userModalVisible: false,\r\n      modalTitle: \"\",\r\n      userForm: {\r\n        sex: 1,\r\n        type: 0,\r\n        roles: [],\r\n        departmentId: \"\",\r\n        departmentTitle: \"\"\r\n      },\r\n      userRoles: [],\r\n      roleList: [],\r\n      errorPass: \"\",\r\n      userFormValidate: {\r\n        username: [\r\n          { required: true, message: \"账号不能为空\", trigger: \"blur\" }\r\n        ],\r\n        mobile: [\r\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\r\n          { validator: validateMobile, trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱地址\" },\r\n          { type: \"email\", message: \"邮箱格式不正确\" }\r\n        ]\r\n      },\r\n      submitLoading: false,\r\n      columns: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          type: \"expand\",\r\n          width: 50,\r\n          fixed: \"left\",\r\n          render: (h, params) => {\r\n            return h(expandRow, {\r\n              props: {\r\n                row: params.row\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"username\",\r\n          width: 145,\r\n          sortable: true,\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属部门\",\r\n          key: \"departmentTitle\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"手机\",\r\n          key: \"mobile\",\r\n          width: 115,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            if (this.getStore(\"roles\").includes(\"ROLE_ADMIN\")) {\r\n              return h(\"span\", params.row.mobile);\r\n            } else {\r\n              return h(\"span\", \"您无权查看该数据\");\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\",\r\n          width: 180,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"性别\",\r\n          key: \"sex\",\r\n          width: 70,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictSex.forEach(e => {\r\n              if (e.value == params.row.sex) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 1) {\r\n              re = \"管理员\";\r\n            } else if (params.row.type === 0) {\r\n              re = \"普通用户\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 140,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"success\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"error\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          },\r\n          filters: [\r\n            {\r\n              label: \"正常启用\",\r\n              value: 0\r\n            },\r\n            {\r\n              label: \"禁用\",\r\n              value: -1\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.status === 0;\r\n            } else if (value === -1) {\r\n              return row.status === -1;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 200,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            let enableOrDisable = \"\";\r\n            if (params.row.status == 0) {\r\n              enableOrDisable = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.disable(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"禁用\"\r\n              );\r\n            } else {\r\n              enableOrDisable = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"success\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.enable(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"启用\"\r\n              );\r\n            }\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              enableOrDisable,\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      exportColumns: exportColumn,\r\n      chooseColumns: [],\r\n      filename: \"用户数据\",\r\n      exportTitle: \"确认导出\",\r\n      exportType: \"\",\r\n      importTableData: [],\r\n      importColumns: [],\r\n      uploadfile: {\r\n        name: \"\"\r\n      },\r\n      tempColumns: userColumns,\r\n      tempData: userData,\r\n      data: [],\r\n      exportData: [],\r\n      total: 0,\r\n      dictSex: []\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n      this.initDepartmentData();\r\n      this.getUserList();\r\n      this.initDepartmentTreeData();\r\n      this.getDictSexData();\r\n      // 初始化导出列数据\r\n      let array = [];\r\n      this.exportColumns.forEach(e => {\r\n        // 指定列限制权限\r\n        if (\r\n          !this.getStore(\"roles\").includes(\"ROLE_ADMIN\") &&\r\n          e.key === \"mobile\"\r\n        ) {\r\n          e.title = \"[无权导出] \" + e.title;\r\n          e.disabled = true;\r\n        } else {\r\n          e.disabled = false;\r\n        }\r\n        array.push(e.title);\r\n      });\r\n      this.chooseColumns = array;\r\n    },\r\n    getDictSexData() {\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"sex\").then(res => {\r\n        if (res.success) {\r\n          this.dictSex = res.result;\r\n        }\r\n      });\r\n    },\r\n    initDepartmentData() {\r\n      initDepartment().then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n              e.loading = false;\r\n              e.children = [];\r\n            } else {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n            }\r\n            if (e.status === -1) {\r\n              e.label = \"[已禁用] \" + e.label;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          this.department = res.result;\r\n        }\r\n      });\r\n    },\r\n    initDepartmentTreeData() {\r\n      initDepartment().then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          this.dataDep = res.result;\r\n        }\r\n      });\r\n    },\r\n    loadData(item, callback) {\r\n      item.loading = true;\r\n      loadDepartment(item.value).then(res => {\r\n        item.loading = false;\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n              e.loading = false;\r\n              e.children = [];\r\n            } else {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n            }\r\n            if (e.status === -1) {\r\n              e.label = \"[已禁用] \" + e.label;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          item.children = res.result;\r\n          callback();\r\n        }\r\n      });\r\n    },\r\n    loadDataTree(item, callback) {\r\n      loadDepartment(item.id).then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          callback(res.result);\r\n        }\r\n      });\r\n    },\r\n    searchDp() {\r\n      // 搜索部门\r\n      if (this.searchKey) {\r\n        this.dpLoading = true;\r\n        searchDepartment({ title: this.searchKey }).then(res => {\r\n          this.dpLoading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.status === -1) {\r\n                e.title = \"[已禁用] \" + e.title;\r\n                e.disabled = true;\r\n              }\r\n            });\r\n            this.dataDep = res.result;\r\n          }\r\n        });\r\n      } else {\r\n        this.initDepartmentTreeData();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.userForm.departmentId = data.id;\r\n        this.userForm.departmentTitle = data.title;\r\n      }\r\n    },\r\n    clearSelectDep() {\r\n      this.userForm.departmentId = \"\";\r\n      this.userForm.departmentTitle = \"\";\r\n    },\r\n    handleChangeDep(value, selectedData) {\r\n      // 获取最后一个值\r\n      if (value && value.length > 0) {\r\n        this.searchForm.departmentId = value[value.length - 1];\r\n      } else {\r\n        this.searchForm.departmentId = \"\";\r\n      }\r\n    },\r\n    handleChangeUserFormDep(value, selectedData) {\r\n      // 获取最后一个值\r\n      if (value && value.length > 0) {\r\n        this.userForm.departmentId = value[value.length - 1];\r\n      } else {\r\n        this.userForm.departmentId = \"\";\r\n      }\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getUserList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getUserList();\r\n    },\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    getUserList() {\r\n      // 多条件搜索用户列表\r\n      this.loading = true;\r\n      // 避免后台默认值\r\n      if (!this.searchForm.type) {\r\n        this.searchForm.type = \"\";\r\n      }\r\n      if (!this.searchForm.status) {\r\n        this.searchForm.status = \"\";\r\n      }\r\n      getUserListData(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getUserList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      this.selectDep = [];\r\n      this.searchForm.departmentId = \"\";\r\n      // 重新加载数据\r\n      this.getUserList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getUserList();\r\n    },\r\n    getRoleList() {\r\n      getAllRoleList().then(res => {\r\n        if (res.success === true) {\r\n          this.roleList = res.result;\r\n        }\r\n      });\r\n    },\r\n    handleDropdown(name) {\r\n      if (name === \"refresh\") {\r\n        this.getUserList();\r\n      } else if (name === \"exportData\") {\r\n        if (this.selectCount <= 0) {\r\n          this.$Message.warning(\"您还未选择要导出的数据\");\r\n          return;\r\n        }\r\n        this.exportType = \"part\";\r\n        this.exportModalVisible = true;\r\n        this.exportTitle = \"确认导出 \" + this.selectCount + \" 条数据(付费)\";\r\n      } else if (name === \"exportAll\") {\r\n        this.exportType = \"all\";\r\n        this.exportModalVisible = true;\r\n        this.exportTitle = \"确认导出全部 \" + this.total + \" 条数据(付费)\";\r\n        getAllUserData().then(res => {\r\n          if (res.success) {\r\n            this.exportData = res.result;\r\n          }\r\n        });\r\n      } else if (name === \"importData\") {\r\n        this.importModalVisible = true;\r\n      }\r\n    },\r\n    exportCustomData() {\r\n      if (this.filename == \"\") {\r\n        this.filename = \"用户数据\";\r\n      }\r\n      // 判断勾选导出列\r\n      let array = [];\r\n      this.exportColumns.forEach(e => {\r\n        this.chooseColumns.forEach(c => {\r\n          if (e.title === c && !e.disabled) {\r\n            array.push(e);\r\n          }\r\n        });\r\n      });\r\n      this.exportColumns = array;\r\n      this.exportModalVisible = false;\r\n      let title = [];\r\n      let key = [];\r\n      this.exportColumns.forEach(e => {\r\n        title.push(e.title);\r\n        key.push(e.key);\r\n      });\r\n      const params = {\r\n        title: title,\r\n        key: key,\r\n        data: this.exportData,\r\n        autoWidth: true,\r\n        filename: this.filename\r\n      };\r\n      excel.export_array_to_excel(params);\r\n    },\r\n    beforeUploadImport(file) {\r\n      this.uploadfile = file;\r\n      const fileExt = file.name\r\n        .split(\".\")\r\n        .pop()\r\n        .toLocaleLowerCase();\r\n      if (fileExt === \"xlsx\" || fileExt === \"xls\") {\r\n        this.readFile(file);\r\n        this.file = file;\r\n      } else {\r\n        this.$Notice.warning({\r\n          title: \"文件类型错误\",\r\n          desc:\r\n            \"所选文件‘ \" +\r\n            file.name +\r\n            \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\r\n        });\r\n      }\r\n      return false;\r\n    },\r\n    // 读取文件\r\n    readFile(file) {\r\n      const reader = new FileReader();\r\n      reader.readAsArrayBuffer(file);\r\n      reader.onerror = e => {\r\n        this.$Message.error(\"文件读取出错\");\r\n      };\r\n      reader.onload = e => {\r\n        this.$Message.success(\"读取数据成功\");\r\n        const data = e.target.result;\r\n        const { header, results } = excel.read(data, \"array\");\r\n        const tableTitle = header.map(item => {\r\n          return { title: item, key: item };\r\n        });\r\n        this.importTableData = results;\r\n        this.importColumns = tableTitle;\r\n      };\r\n    },\r\n    downloadTemple() {\r\n      let title = [];\r\n      let key = [];\r\n      userColumns.forEach(e => {\r\n        title.push(e.title);\r\n        key.push(e.key);\r\n      });\r\n      const params = {\r\n        title: title,\r\n        key: key,\r\n        data: userData,\r\n        autoWidth: true,\r\n        filename: \"导入用户数据模版\"\r\n      };\r\n      excel.export_array_to_excel(params);\r\n    },\r\n    importData() {\r\n      this.importLoading = true;\r\n      importUserData(this.importTableData).then(res => {\r\n        this.importLoading = false;\r\n        if (res.success) {\r\n          this.importModalVisible = false;\r\n          this.getUserList();\r\n          this.$Modal.info({\r\n            title: \"导入结果\",\r\n            content: res.message\r\n          });\r\n        }\r\n      });\r\n    },\r\n    cancelUser() {\r\n      this.userModalVisible = false;\r\n    },\r\n    submitUser() {\r\n      this.$refs.userForm.validate(valid => {\r\n        if (valid) {\r\n          if (this.modalType === 0) {\r\n            // 添加用户 避免编辑后传入id\r\n            delete this.userForm.id;\r\n            delete this.userForm.status;\r\n            if (\r\n              this.userForm.password == \"\" ||\r\n              this.userForm.password == undefined\r\n            ) {\r\n              this.errorPass = \"密码不能为空\";\r\n              return;\r\n            }\r\n            if (this.userForm.password.length < 6) {\r\n              this.errorPass = \"密码长度不得少于6位\";\r\n              return;\r\n            }\r\n            this.submitLoading = true;\r\n            addUser(this.userForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getUserList();\r\n                this.userModalVisible = false;\r\n              }\r\n            });\r\n          } else {\r\n            // 编辑\r\n            this.submitLoading = true;\r\n            editUser(this.userForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getUserList();\r\n                this.userModalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    viewPic() {\r\n      this.viewImage = true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 .jpg .jpeg .png .gif格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\r\n      });\r\n    },\r\n    beforeUpload() {\r\n      if (!this.$route.meta.permTypes.includes(\"upload\")) {\r\n        this.$Message.error(\"此处您没有上传权限(为演示功能，该按钮未配置隐藏)\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    handleSuccess(res, file) {\r\n      if (res.success === true) {\r\n        file.url = res.result;\r\n        this.userForm.avatar = res.result;\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    add() {\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加用户\";\r\n      this.$refs.userForm.resetFields();\r\n      this.userModalVisible = true;\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑用户\";\r\n      this.$refs.userForm.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let userInfo = JSON.parse(str);\r\n      this.userForm = userInfo;\r\n      let selectRolesId = [];\r\n      this.userForm.roles.forEach(function(e) {\r\n        selectRolesId.push(e.id);\r\n      });\r\n      this.userForm.roles = selectRolesId;\r\n      this.userModalVisible = true;\r\n    },\r\n    enable(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认启用\",\r\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          enableUser(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    disable(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认禁用\",\r\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          disableUser(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          deleteUser(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    dropDown() {\r\n      if (this.drop) {\r\n        this.dropDownContent = \"展开\";\r\n        this.dropDownIcon = \"ios-arrow-down\";\r\n      } else {\r\n        this.dropDownContent = \"收起\";\r\n        this.dropDownIcon = \"ios-arrow-up\";\r\n      }\r\n      this.drop = !this.drop;\r\n    },\r\n    showSelect(e) {\r\n      this.exportData = e;\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          this.operationLoading = true;\r\n          deleteUser(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.clearSelectAll();\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n    this.getRoleList();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\views\\sys\\shadesManage"}]}