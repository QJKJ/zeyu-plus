{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\sys\\shadesManage\\shadesManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\sys\\shadesManage\\shadesManage.vue","mtime":1547018772676},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1545803960479},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"./shadesManage.less\";\r\n",{"version":3,"sources":["shadesManage.vue"],"names":[],"mappings":";AACA","file":"shadesManage.vue","sourceRoot":"src\\views\\sys\\shadesManage","sourcesContent":["<style lang=\"less\">\r\n@import \"./shadesManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n      <Card>\r\n        <Row>\r\n          <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\">\r\n            <Form-item label=\"用户名称\" prop=\"username\">\r\n              <Input type=\"text\" v-model=\"searchForm.username\" clearable placeholder=\"请输入用户名\" style=\"width: 200px\"/>\r\n            </Form-item>\r\n            <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n              <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n              <Button @click=\"handleReset\" >重置</Button>\r\n            </Form-item>\r\n          </Form>\r\n        </Row>\r\n        <Row class=\"operation\">\r\n          <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加用户</Button>\r\n          <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n          <circleLoading v-if=\"operationLoading\"/>\r\n        </Row>\r\n        <Row>\r\n          <Alert show-icon>\r\n            已选择 <span class=\"select-count\">{{selectCount}}</span> 项\r\n            <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n          </Alert>\r\n        </Row>\r\n        <Row>\r\n          <Table :loading=\"loading\" border :columns=\"columns\" :data=\"data\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"showSelect\" ref=\"table\"></Table>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n          <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[10,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n        </Row>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n    <Modal :title=\"modalTitle\" v-model=\"userModalVisible\" :mask-closable='false' :width=\"500\" :styles=\"{top: '30px'}\">\r\n      <Form ref=\"userForm\" :model=\"userForm\" :label-width=\"70\" :rules=\"userFormValidate\">\r\n        <FormItem label=\"用户名\" prop=\"username\">\r\n          <Input v-model=\"userForm.username\" autocomplete=\"off\"/>\r\n        </FormItem>\r\n        <FormItem label=\"密码\" prop=\"password\" v-if=\"modalType===0\" :error=\"errorPass\">\r\n          <Input type=\"password\" v-model=\"userForm.password\" autocomplete=\"off\"/>\r\n        </FormItem>\r\n        <FormItem label=\"邮箱\" prop=\"email\">\r\n          <Input v-model=\"userForm.email\"/>\r\n        </FormItem>\r\n        <FormItem label=\"手机号\" prop=\"mobile\">\r\n          <Input v-model=\"userForm.mobile\"/>\r\n        </FormItem>\r\n        <FormItem label=\"性别\" prop=\"sex\">\r\n          <RadioGroup v-model=\"userForm.sex\">\r\n            <Radio v-for=\"(item, i) in dictSex\" :key=\"i\" :label=\"Number(item.value)\">{{item.title}}</Radio>\r\n          </RadioGroup>\r\n        </FormItem>\r\n        <Form-item label=\"头像\" prop=\"avatar\">\r\n          <Poptip trigger=\"hover\" title=\"图片预览\" placement=\"right\" width=\"350\">\r\n            <Input v-model=\"userForm.avatar\" placeholder=\"可直接填入网络图片链接\" clearable/>\r\n            <div slot=\"content\">\r\n              <img :src=\"userForm.avatar\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n              <a @click=\"viewPic()\" style=\"margin-top:5px;text-align:right;display:block\">查看原图</a>\r\n            </div>\r\n          </Poptip>\r\n          <Upload :action=\"uploadFileUrl\"\r\n                  :headers=\"accessToken\"\r\n                  :on-success=\"handleSuccess\"\r\n                  :on-error=\"handleError\"\r\n                  :format=\"['jpg','jpeg','png','gif']\"\r\n                  :max-size=\"5120\"\r\n                  :on-format-error=\"handleFormatError\"\r\n                  :on-exceeded-size=\"handleMaxSize\"\r\n                  :before-upload=\"beforeUpload\"\r\n                  ref=\"up\"\r\n                  class=\"upload\">\r\n            <Button icon=\"ios-cloud-upload-outline\">上传图片</Button>\r\n          </Upload>\r\n        </Form-item>\r\n        <Form-item label=\"所属部门\" prop=\"departmentTitle\">\r\n          <Poptip trigger=\"click\" placement=\"right\" title=\"选择部门\" width=\"250\">\r\n            <div style=\"display:flex;\">\r\n              <Input v-model=\"userForm.departmentTitle\" readonly style=\"margin-right:10px;\"/>\r\n              <Button icon=\"md-trash\" @click=\"clearSelectDep\">清空已选</Button>\r\n            </div>\r\n            <div slot=\"content\" class=\"tree-bar\">\r\n              <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"searchDp\" placeholder=\"输入部门名搜索\" clearable/>\r\n              <Tree :data=\"dataDep\" :load-data=\"loadDataTree\" @on-select-change=\"selectTree\"></Tree>\r\n              <Spin size=\"large\" fix v-if=\"dpLoading\"></Spin>\r\n            </div>\r\n          </Poptip>\r\n        </Form-item>\r\n        <FormItem label=\"用户类型\" prop=\"type\">\r\n          <Select v-model=\"userForm.type\" placeholder=\"请选择\">\r\n            <Option :value=\"0\">普通用户</Option>\r\n            <Option :value=\"1\">管理员</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"角色分配\" prop=\"roles\">\r\n          <Select v-model=\"userForm.roles\" multiple>\r\n            <Option v-for=\"item in roleList\" :value=\"item.id\" :key=\"item.id\" :label=\"item.name\">\r\n              <!-- <div style=\"display:flex;flex-direction:column\"> -->\r\n              <span style=\"margin-right:10px;\">{{ item.name }}</span>\r\n              <span style=\"color:#ccc;\">{{ item.description }}</span>\r\n              <!-- </div> -->\r\n            </Option>\r\n          </Select>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"cancelUser\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitUser\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n    <Modal title=\"图片预览\" v-model=\"viewImage\" :styles=\"{top: '30px'}\" draggable>\r\n      <img :src=\"userForm.avatar\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n      <div slot=\"footer\">\r\n        <Button @click=\"viewImage=false\">关闭</Button>\r\n      </div>\r\n    </Modal>\r\n    <!-- 自定义导出数据 -->\r\n    <Modal\r\n            v-model=\"exportModalVisible\"\r\n            :title=\"exportTitle\"\r\n            :loading=\"loadingExport\"\r\n            @on-ok=\"exportCustomData\">\r\n      <Form ref=\"exportForm\" :label-width=\"85\">\r\n        <FormItem label=\"导出文件名\">\r\n          <Input v-model=\"filename\"/>\r\n        </FormItem>\r\n        <FormItem label=\"自定义导出列\">\r\n          <CheckboxGroup v-model=\"chooseColumns\">\r\n            <Checkbox v-for=\"(item, i) in exportColumns\" :label=\"item.title\" :key=\"i\" :value=\"item.checked\" :disabled=\"item.disabled\"></Checkbox>\r\n          </CheckboxGroup>\r\n        </FormItem>\r\n      </Form>\r\n    </Modal>\r\n    <Drawer title=\"导入数据\" closable v-model=\"importModalVisible\" width=\"1000\">\r\n      <Upload action=\"\" :before-upload=\"beforeUploadImport\" accept=\".xls, .xlsx\">\r\n        <Button icon=\"ios-cloud-upload-outline\" style=\"margin-right:10px\">上传Excel文件</Button>\r\n        <span v-if=\"uploadfile.name!=''\">当前选择文件：{{ uploadfile.name }}</span>\r\n      </Upload>\r\n      <Alert type=\"warning\" show-icon>\r\n        导入前请下载查看导入模版数据文件，确保数据格式正确，不得修改列英文名称。必需数据字段：用户名(唯一)、密码(明文)\r\n      </Alert>\r\n      <Table :columns=\"importColumns\" border height=\"510\" :data=\"importTableData\" ref=\"importTable\"></Table>\r\n      <div class=\"drawer-footer\">\r\n        <Button @click=\"downloadTemple\" type=\"info\" style=\"position:absolute;left:15px;\">下载导入模板</Button>\r\n        <Button @click=\"importModalVisible=false\">关闭</Button>\r\n        <Button :loading=\"importLoading\" :disabled=\"importTableData.length<=0\" @click=\"importData\" style=\"margin-left:5px\" type=\"primary\">\r\n          确认导入<span v-if=\"importTableData.length>0\"> {{importTableData.length}} 条数据</span>\r\n        </Button>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  initDepartment,\r\n  loadDepartment,\r\n  getUserListData,\r\n  getAllRoleList,\r\n  addUser,\r\n  editUser,\r\n  enableUser,\r\n  disableUser,\r\n  deleteUser,\r\n  getAllUserData,\r\n  importUserData,\r\n  searchDepartment,\r\n  uploadFile,\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\nimport expandRow from \"./expand.vue\";\r\nimport circleLoading from \"../../my-components/circle-loading.vue\";\r\n// 模版导入文件表数据\r\nimport { userColumns, userData } from \"@/libs/importTemplate\";\r\n// 指定导出列数据\r\nimport { exportColumn } from \"./exportColumn\";\r\nimport excel from \"@/libs/excel\";\r\nexport default {\r\n  name: \"shadesManage\",\r\n  components: {\r\n    circleLoading,\r\n    expandRow\r\n  },\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error(\"密码长度不得小于6位\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const validateMobile = (rule, value, callback) => {\r\n      var reg = /^[1][3,4,5,7,8][0-9]{9}$/;\r\n      if (!reg.test(value)) {\r\n        callback(new Error(\"手机号格式错误\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      accessToken: {},\r\n      uploadFileUrl: uploadFile,\r\n      loading: true,\r\n      dpLoading: false, // 部门树加载\r\n      operationLoading: false,\r\n      importLoading: false,\r\n      loadingExport: true,\r\n      exportModalVisible: false,\r\n      importModalVisible: false,\r\n      drop: false,\r\n      dropDownContent: \"展开\",\r\n      dropDownIcon: \"ios-arrow-down\",\r\n      selectCount: 0,\r\n      selectList: [],\r\n      viewImage: false,\r\n      department: [],\r\n      selectDep: [],\r\n      dataDep: [],\r\n      searchKey: \"\",\r\n      searchForm: {\r\n        username: \"\",\r\n        departmentId: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        sex: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n        sort: \"createTime\",\r\n        order: \"desc\",\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n      },\r\n      selectDate: null,\r\n      modalType: 0,\r\n      userModalVisible: false,\r\n      modalTitle: \"\",\r\n      userForm: {\r\n        sex: 1,\r\n        type: 0,\r\n        roles: [],\r\n        departmentId: \"\",\r\n        departmentTitle: \"\"\r\n      },\r\n      userRoles: [],\r\n      roleList: [],\r\n      errorPass: \"\",\r\n      userFormValidate: {\r\n        username: [\r\n          { required: true, message: \"账号不能为空\", trigger: \"blur\" }\r\n        ],\r\n        mobile: [\r\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\r\n          { validator: validateMobile, trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱地址\" },\r\n          { type: \"email\", message: \"邮箱格式不正确\" }\r\n        ]\r\n      },\r\n      submitLoading: false,\r\n      columns: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          type: \"expand\",\r\n          width: 50,\r\n          fixed: \"left\",\r\n          render: (h, params) => {\r\n            return h(expandRow, {\r\n              props: {\r\n                row: params.row\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"username\",\r\n          width: 145,\r\n          sortable: true,\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属部门\",\r\n          key: \"departmentTitle\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"手机\",\r\n          key: \"mobile\",\r\n          width: 115,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            if (this.getStore(\"roles\").includes(\"ROLE_ADMIN\")) {\r\n              return h(\"span\", params.row.mobile);\r\n            } else {\r\n              return h(\"span\", \"您无权查看该数据\");\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\",\r\n          width: 180,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"性别\",\r\n          key: \"sex\",\r\n          width: 70,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictSex.forEach(e => {\r\n              if (e.value == params.row.sex) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 1) {\r\n              re = \"管理员\";\r\n            } else if (params.row.type === 0) {\r\n              re = \"普通用户\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 140,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"success\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"error\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          },\r\n          filters: [\r\n            {\r\n              label: \"正常启用\",\r\n              value: 0\r\n            },\r\n            {\r\n              label: \"禁用\",\r\n              value: -1\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.status === 0;\r\n            } else if (value === -1) {\r\n              return row.status === -1;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 200,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            let enableOrDisable = \"\";\r\n            if (params.row.status == 0) {\r\n              enableOrDisable = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.disable(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"禁用\"\r\n              );\r\n            } else {\r\n              enableOrDisable = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"success\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.enable(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"启用\"\r\n              );\r\n            }\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              enableOrDisable,\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      exportColumns: exportColumn,\r\n      chooseColumns: [],\r\n      filename: \"用户数据\",\r\n      exportTitle: \"确认导出\",\r\n      exportType: \"\",\r\n      importTableData: [],\r\n      importColumns: [],\r\n      uploadfile: {\r\n        name: \"\"\r\n      },\r\n      tempColumns: userColumns,\r\n      tempData: userData,\r\n      data: [],\r\n      exportData: [],\r\n      total: 0,\r\n      dictSex: []\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n      this.initDepartmentData();\r\n      this.getUserList();\r\n      this.initDepartmentTreeData();\r\n      this.getDictSexData();\r\n      // 初始化导出列数据\r\n      let array = [];\r\n      this.exportColumns.forEach(e => {\r\n        // 指定列限制权限\r\n        if (\r\n          !this.getStore(\"roles\").includes(\"ROLE_ADMIN\") &&\r\n          e.key === \"mobile\"\r\n        ) {\r\n          e.title = \"[无权导出] \" + e.title;\r\n          e.disabled = true;\r\n        } else {\r\n          e.disabled = false;\r\n        }\r\n        array.push(e.title);\r\n      });\r\n      this.chooseColumns = array;\r\n    },\r\n    getDictSexData() {\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"sex\").then(res => {\r\n        if (res.success) {\r\n          this.dictSex = res.result;\r\n        }\r\n      });\r\n    },\r\n    initDepartmentData() {\r\n      initDepartment().then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n              e.loading = false;\r\n              e.children = [];\r\n            } else {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n            }\r\n            if (e.status === -1) {\r\n              e.label = \"[已禁用] \" + e.label;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          this.department = res.result;\r\n        }\r\n      });\r\n    },\r\n    initDepartmentTreeData() {\r\n      initDepartment().then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          this.dataDep = res.result;\r\n        }\r\n      });\r\n    },\r\n    loadData(item, callback) {\r\n      item.loading = true;\r\n      loadDepartment(item.value).then(res => {\r\n        item.loading = false;\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n              e.loading = false;\r\n              e.children = [];\r\n            } else {\r\n              e.value = e.id;\r\n              e.label = e.title;\r\n            }\r\n            if (e.status === -1) {\r\n              e.label = \"[已禁用] \" + e.label;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          item.children = res.result;\r\n          callback();\r\n        }\r\n      });\r\n    },\r\n    loadDataTree(item, callback) {\r\n      loadDepartment(item.id).then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          callback(res.result);\r\n        }\r\n      });\r\n    },\r\n    searchDp() {\r\n      // 搜索部门\r\n      if (this.searchKey) {\r\n        this.dpLoading = true;\r\n        searchDepartment({ title: this.searchKey }).then(res => {\r\n          this.dpLoading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.status === -1) {\r\n                e.title = \"[已禁用] \" + e.title;\r\n                e.disabled = true;\r\n              }\r\n            });\r\n            this.dataDep = res.result;\r\n          }\r\n        });\r\n      } else {\r\n        this.initDepartmentTreeData();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.userForm.departmentId = data.id;\r\n        this.userForm.departmentTitle = data.title;\r\n      }\r\n    },\r\n    clearSelectDep() {\r\n      this.userForm.departmentId = \"\";\r\n      this.userForm.departmentTitle = \"\";\r\n    },\r\n    handleChangeDep(value, selectedData) {\r\n      // 获取最后一个值\r\n      if (value && value.length > 0) {\r\n        this.searchForm.departmentId = value[value.length - 1];\r\n      } else {\r\n        this.searchForm.departmentId = \"\";\r\n      }\r\n    },\r\n    handleChangeUserFormDep(value, selectedData) {\r\n      // 获取最后一个值\r\n      if (value && value.length > 0) {\r\n        this.userForm.departmentId = value[value.length - 1];\r\n      } else {\r\n        this.userForm.departmentId = \"\";\r\n      }\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getUserList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getUserList();\r\n    },\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    getUserList() {\r\n      // 多条件搜索用户列表\r\n      this.loading = true;\r\n      // 避免后台默认值\r\n      if (!this.searchForm.type) {\r\n        this.searchForm.type = \"\";\r\n      }\r\n      if (!this.searchForm.status) {\r\n        this.searchForm.status = \"\";\r\n      }\r\n      getUserListData(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getUserList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      this.selectDep = [];\r\n      this.searchForm.departmentId = \"\";\r\n      // 重新加载数据\r\n      this.getUserList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getUserList();\r\n    },\r\n    getRoleList() {\r\n      getAllRoleList().then(res => {\r\n        if (res.success === true) {\r\n          this.roleList = res.result;\r\n        }\r\n      });\r\n    },\r\n    handleDropdown(name) {\r\n      if (name === \"refresh\") {\r\n        this.getUserList();\r\n      } else if (name === \"exportData\") {\r\n        if (this.selectCount <= 0) {\r\n          this.$Message.warning(\"您还未选择要导出的数据\");\r\n          return;\r\n        }\r\n        this.exportType = \"part\";\r\n        this.exportModalVisible = true;\r\n        this.exportTitle = \"确认导出 \" + this.selectCount + \" 条数据(付费)\";\r\n      } else if (name === \"exportAll\") {\r\n        this.exportType = \"all\";\r\n        this.exportModalVisible = true;\r\n        this.exportTitle = \"确认导出全部 \" + this.total + \" 条数据(付费)\";\r\n        getAllUserData().then(res => {\r\n          if (res.success) {\r\n            this.exportData = res.result;\r\n          }\r\n        });\r\n      } else if (name === \"importData\") {\r\n        this.importModalVisible = true;\r\n      }\r\n    },\r\n    exportCustomData() {\r\n      if (this.filename == \"\") {\r\n        this.filename = \"用户数据\";\r\n      }\r\n      // 判断勾选导出列\r\n      let array = [];\r\n      this.exportColumns.forEach(e => {\r\n        this.chooseColumns.forEach(c => {\r\n          if (e.title === c && !e.disabled) {\r\n            array.push(e);\r\n          }\r\n        });\r\n      });\r\n      this.exportColumns = array;\r\n      this.exportModalVisible = false;\r\n      let title = [];\r\n      let key = [];\r\n      this.exportColumns.forEach(e => {\r\n        title.push(e.title);\r\n        key.push(e.key);\r\n      });\r\n      const params = {\r\n        title: title,\r\n        key: key,\r\n        data: this.exportData,\r\n        autoWidth: true,\r\n        filename: this.filename\r\n      };\r\n      excel.export_array_to_excel(params);\r\n    },\r\n    beforeUploadImport(file) {\r\n      this.uploadfile = file;\r\n      const fileExt = file.name\r\n        .split(\".\")\r\n        .pop()\r\n        .toLocaleLowerCase();\r\n      if (fileExt === \"xlsx\" || fileExt === \"xls\") {\r\n        this.readFile(file);\r\n        this.file = file;\r\n      } else {\r\n        this.$Notice.warning({\r\n          title: \"文件类型错误\",\r\n          desc:\r\n            \"所选文件‘ \" +\r\n            file.name +\r\n            \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\r\n        });\r\n      }\r\n      return false;\r\n    },\r\n    // 读取文件\r\n    readFile(file) {\r\n      const reader = new FileReader();\r\n      reader.readAsArrayBuffer(file);\r\n      reader.onerror = e => {\r\n        this.$Message.error(\"文件读取出错\");\r\n      };\r\n      reader.onload = e => {\r\n        this.$Message.success(\"读取数据成功\");\r\n        const data = e.target.result;\r\n        const { header, results } = excel.read(data, \"array\");\r\n        const tableTitle = header.map(item => {\r\n          return { title: item, key: item };\r\n        });\r\n        this.importTableData = results;\r\n        this.importColumns = tableTitle;\r\n      };\r\n    },\r\n    downloadTemple() {\r\n      let title = [];\r\n      let key = [];\r\n      userColumns.forEach(e => {\r\n        title.push(e.title);\r\n        key.push(e.key);\r\n      });\r\n      const params = {\r\n        title: title,\r\n        key: key,\r\n        data: userData,\r\n        autoWidth: true,\r\n        filename: \"导入用户数据模版\"\r\n      };\r\n      excel.export_array_to_excel(params);\r\n    },\r\n    importData() {\r\n      this.importLoading = true;\r\n      importUserData(this.importTableData).then(res => {\r\n        this.importLoading = false;\r\n        if (res.success) {\r\n          this.importModalVisible = false;\r\n          this.getUserList();\r\n          this.$Modal.info({\r\n            title: \"导入结果\",\r\n            content: res.message\r\n          });\r\n        }\r\n      });\r\n    },\r\n    cancelUser() {\r\n      this.userModalVisible = false;\r\n    },\r\n    submitUser() {\r\n      this.$refs.userForm.validate(valid => {\r\n        if (valid) {\r\n          if (this.modalType === 0) {\r\n            // 添加用户 避免编辑后传入id\r\n            delete this.userForm.id;\r\n            delete this.userForm.status;\r\n            if (\r\n              this.userForm.password == \"\" ||\r\n              this.userForm.password == undefined\r\n            ) {\r\n              this.errorPass = \"密码不能为空\";\r\n              return;\r\n            }\r\n            if (this.userForm.password.length < 6) {\r\n              this.errorPass = \"密码长度不得少于6位\";\r\n              return;\r\n            }\r\n            this.submitLoading = true;\r\n            addUser(this.userForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getUserList();\r\n                this.userModalVisible = false;\r\n              }\r\n            });\r\n          } else {\r\n            // 编辑\r\n            this.submitLoading = true;\r\n            editUser(this.userForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getUserList();\r\n                this.userModalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    viewPic() {\r\n      this.viewImage = true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 .jpg .jpeg .png .gif格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\r\n      });\r\n    },\r\n    beforeUpload() {\r\n      if (!this.$route.meta.permTypes.includes(\"upload\")) {\r\n        this.$Message.error(\"此处您没有上传权限(为演示功能，该按钮未配置隐藏)\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    handleSuccess(res, file) {\r\n      if (res.success === true) {\r\n        file.url = res.result;\r\n        this.userForm.avatar = res.result;\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    add() {\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加用户\";\r\n      this.$refs.userForm.resetFields();\r\n      this.userModalVisible = true;\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑用户\";\r\n      this.$refs.userForm.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let userInfo = JSON.parse(str);\r\n      this.userForm = userInfo;\r\n      let selectRolesId = [];\r\n      this.userForm.roles.forEach(function(e) {\r\n        selectRolesId.push(e.id);\r\n      });\r\n      this.userForm.roles = selectRolesId;\r\n      this.userModalVisible = true;\r\n    },\r\n    enable(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认启用\",\r\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          enableUser(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    disable(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认禁用\",\r\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          disableUser(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          deleteUser(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    dropDown() {\r\n      if (this.drop) {\r\n        this.dropDownContent = \"展开\";\r\n        this.dropDownIcon = \"ios-arrow-down\";\r\n      } else {\r\n        this.dropDownContent = \"收起\";\r\n        this.dropDownIcon = \"ios-arrow-up\";\r\n      }\r\n      this.drop = !this.drop;\r\n    },\r\n    showSelect(e) {\r\n      this.exportData = e;\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          this.operationLoading = true;\r\n          deleteUser(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.clearSelectAll();\r\n              this.getUserList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n    this.getRoleList();\r\n  }\r\n};\r\n</script>"]}]}