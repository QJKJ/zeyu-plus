{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\my-components\\scroll-bar\\vue-scroller-bars\\scroll-bar.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\my-components\\scroll-bar\\vue-scroller-bars\\scroll-bar.vue","mtime":1545792990764},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1545803960479},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import './scroll-bar.less';\r\n",{"version":3,"sources":["scroll-bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwPA","file":"scroll-bar.vue","sourceRoot":"src\\views\\my-components\\scroll-bar\\vue-scroller-bars","sourcesContent":["<template>\r\n\t<div ref=\"wraper\" :class=\"wraperClasses\" @DOMMouseScroll=\"handleDOMMouseWheel\" @mousewheel=\"handleMouseWheel\">\r\n\t\t<div \r\n\t\t\tref=\"content\"\r\n\t\t\t:class=\"`${prefix}-content`\"\r\n\t\t\t:style=\"contentStyles\"\r\n\t\t\t>\r\n\t\t\t<slot></slot>\r\n\t\t</div>\r\n\t\t<div v-show=\"percentY < 1 && !disScrollY\" :class=\"scrollYClasses\" :style=\"scrollYStyles\">\r\n\t\t\t<div :class=\"[`${prefix}-scroll-bar`, `${prefix}-scroll-bar-y`]\" :style=\"scrollBarYStyles\" @mousedown=\"handleMousedownScrollBarY\"></div>\r\n\t\t</div>\r\n\t\t<div v-show=\"percentX < 1 && !disScrollX\" :class=\"scrollXClasses\" :style=\"scrollXStyles\">\r\n\t\t\t<div :class=\"[`${prefix}-scroll-bar`, `${prefix}-scroll-bar-x`]\" :style=\"scrollBarXStyles\" @mousedown=\"handleMousedownScrollBarX\"></div>\r\n\t\t</div>\r\n\t\t<div v-show=\"percentX < 1 && percentY < 1\" :class=\"`${prefix}-place-holder`\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * @author Lison<zhigang.li@tendcloud.com>\r\n */\r\nexport default {\r\n    name: 'scrollBar',\r\n    props: {\r\n        speed: {\r\n            type: Number,\r\n            default: 20\r\n        },\r\n        scrollXStyle: {\r\n            type: Object,\r\n            default () {\r\n                return {};\r\n            }\r\n        },\r\n        disScrollX: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disScrollY: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        scrollYStyle: {\r\n            type: Object,\r\n            default () {\r\n                return {};\r\n            }\r\n        },\r\n        scrollXType: {\r\n            type: String,\r\n            default: 'cover'\r\n        },\r\n        scrollYType: {\r\n            type: String,\r\n            default: 'cover'\r\n        },\r\n        showAll: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            prefix: 'vue-scroller-bars',\r\n            scrollOffsetX: 0,\r\n            scrollOffsetY: 0,\r\n            contentSize: {\r\n                width: 0,\r\n                height: 0\r\n            },\r\n            wraperSize: {\r\n                width: 0,\r\n                height: 0\r\n            },\r\n            initY: 0,\r\n            initOffsetY: 0,\r\n            initX: 0,\r\n            initOffsetX: 0\r\n        };\r\n    },\r\n    computed: {\r\n        wraperClasses () {\r\n            return [\r\n                `${this.prefix}-wraper`,\r\n                this.showAll ? '' : 'show-when-hover'\r\n            ];\r\n        },\r\n        contentStyles () {\r\n            return {\r\n                transform: `translate3d(-${this.scrollOffsetX}px, -${this.scrollOffsetY}px, 0px)`,\r\n                width: this.disScrollX ? '100%' : 'auto',\r\n                height: this.disScrollY ? '100%' : 'auto'\r\n            };\r\n        },\r\n        percentY () {\r\n            return this.wraperSize.height / this.contentSize.height;\r\n        },\r\n        scrollYStyles () {\r\n            return Object.assign(this.scrollYStyle, {\r\n                height: this.percentX < 1 ? 'calc(100% - 14px)' : '100%'\r\n            });\r\n        },\r\n        scrollBarYHeight () {\r\n            return this.percentY * (this.wraperSize.height - 2);\r\n        },\r\n        scrollBarYStyles () {\r\n            let height = this.scrollBarYHeight;\r\n            return {\r\n                transform: `translate3d(0px, ${this.scrollOffsetY * (height / this.wraperSize.height)}px, 0px)`,\r\n                height: `${height}px`\r\n            };\r\n        },\r\n        scrollYClasses () {\r\n            return [\r\n                `${this.prefix}-scroll`,\r\n                `${this.prefix}-scroll-y`,\r\n                this.scrollYType === 'cover' ? 'scroll-y-cover' : ''\r\n            ];\r\n        },\r\n        gapY () {\r\n            return this.contentSize.height - this.wraperSize.height;\r\n        },\r\n        percentX () {\r\n            return this.wraperSize.width / this.contentSize.width;\r\n        },\r\n        scrollXStyles () {\r\n            return Object.assign(this.scrollXStyle, {\r\n                width: this.percentY < 1 ? 'calc(100% - 14px)' : '100%'\r\n            });\r\n        },\r\n        scrollBarXWidth () {\r\n            return this.percentX * (this.wraperSize.width - 2);\r\n        },\r\n        scrollBarXStyles () {\r\n            let width = this.scrollBarXWidth;\r\n            return {\r\n                transform: `translate3d(${this.scrollOffsetX * (width / this.wraperSize.width)}px, 0px, 0px)`,\r\n                width: `${width}px`\r\n            };\r\n        },\r\n        scrollXClasses () {\r\n            return [\r\n                `${this.prefix}-scroll`,\r\n                `${this.prefix}-scroll-x`,\r\n                this.scrollXType === 'cover' ? 'scroll-x-cover' : ''\r\n            ];\r\n        },\r\n        gapX () {\r\n            return this.contentSize.width - this.wraperSize.width;\r\n        }\r\n    },\r\n    methods: {\r\n        resize () {\r\n            this.$nextTick(() => {\r\n                let wraperRect = this.$refs.wraper.getBoundingClientRect();\r\n                let contentRect = this.$refs.content.getBoundingClientRect();\r\n                this.contentSize = {\r\n                    width: contentRect.width,\r\n                    height: contentRect.height\r\n                };\r\n                let percentXLowerThanOne = (wraperRect.width / contentRect.width) < 1;\r\n                let percentYLowerThanOne = (wraperRect.height / contentRect.height) < 1;\r\n                let gap = percentXLowerThanOne && percentYLowerThanOne ? 14 : 0;\r\n                this.wraperSize = {\r\n                    width: wraperRect.width - gap,\r\n                    height: wraperRect.height - gap\r\n                };\r\n                if (this.contentSize.height <= this.wraperSize.height) { // if content's height shorter than wraper's height\r\n                    this.scrollOffsetY = 0;\r\n                };\r\n                if ((wraperRect.bottom > contentRect.bottom) && (this.scrollOffsetY > 0)) { // if content's bottom upper wraper's bottom\r\n                    this.scrollOffsetY += contentRect.bottom - wraperRect.bottom;\r\n                };\r\n            });\r\n        },\r\n        handleMouseWheel (e) {\r\n            this.scrollOffsetY += this.percentY < 1 ? e.deltaY : 0;\r\n            this.scrollOffsetX += this.percentX < 1 ? e.deltaX : 0;\r\n            if (this.percentY < 1) {\r\n                if (this.scrollOffsetY >= this.gapY) {\r\n                    this.scrollOffsetY = Math.min(this.gapY, this.scrollOffsetY);\r\n                } else if (this.scrollOffsetY <= 0) {\r\n                    this.scrollOffsetY = Math.max(this.scrollOffsetY, 0);\r\n                }\r\n            }\r\n            if (this.percentX < 1) {\r\n                if (this.scrollOffsetX >= this.gapX) {\r\n                    this.scrollOffsetX = Math.min(this.gapX, this.scrollOffsetX);\r\n                } else if (this.scrollOffsetX <= 0) {\r\n                    this.scrollOffsetX = Math.max(this.scrollOffsetX, 0);\r\n                }\r\n            }\r\n        },\r\n        handleDOMMouseWheel (e) {\r\n            this.scrollOffsetY += e.detail * 16;\r\n            if (this.scrollOffsetY >= this.gapY) {\r\n                this.scrollOffsetY = Math.min(this.gapY, this.scrollOffsetY);\r\n            } else if (this.scrollOffsetY <= 0) {\r\n                this.scrollOffsetY = Math.max(this.scrollOffsetY, 0);\r\n            }\r\n        },\r\n        handleMousemoveY (e) {\r\n            let offset = e.pageY - this.initY;\r\n            this.scrollOffsetY = this.initOffsetY + offset / ((this.wraperSize.height - 2 - this.scrollBarYHeight) / (this.contentSize.height - this.wraperSize.height));\r\n            if (this.scrollOffsetY >= this.gapY) {\r\n                this.scrollOffsetY = Math.min(this.gapY, this.scrollOffsetY);\r\n            } else if (this.scrollOffsetY <= 0) {\r\n                this.scrollOffsetY = Math.max(this.scrollOffsetY, 0);\r\n            }\r\n            e.preventDefault();\r\n        },\r\n        handleMousedownScrollBarY (e) {\r\n            this.initY = e.pageY;\r\n            this.initOffsetY = this.scrollOffsetY;\r\n            document.addEventListener('mousemove', this.handleMousemoveY);\r\n            document.addEventListener('mouseup', this.handleMouseup);\r\n        },\r\n        handleMousemoveX (e) {\r\n            let offset = e.pageX - this.initX;\r\n            this.scrollOffsetX = this.initOffsetX + offset / ((this.wraperSize.width - 2 - this.scrollBarXWidth) / (this.contentSize.width - this.wraperSize.width));\r\n            if (this.scrollOffsetX >= this.gapX) {\r\n                this.scrollOffsetX = Math.min(this.gapX, this.scrollOffsetX);\r\n            } else if (this.scrollOffsetX <= 0) {\r\n                this.scrollOffsetX = Math.max(this.scrollOffsetX, 0);\r\n            }\r\n            e.preventDefault();\r\n        },\r\n        handleMousedownScrollBarX (e) {\r\n            this.initX = e.pageX;\r\n            this.initOffsetX = this.scrollOffsetX;\r\n            document.addEventListener('mousemove', this.handleMousemoveX);\r\n            document.addEventListener('mouseup', this.handleMouseup);\r\n        },\r\n        handleMouseup (e) {\r\n            document.removeEventListener('mousemove', this.handleMousemoveY);\r\n            document.removeEventListener('mousemove', this.handleMousemoveX);\r\n            document.removeEventListener('mousemove', this.handleMouseup);\r\n        }\r\n    },\r\n    mounted () {\r\n        this.resize();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import './scroll-bar.less';\r\n</style>\r\n"]}]}