{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\activiti\\process-manage\\processNodeEdit.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\activiti\\process-manage\\processNodeEdit.vue","mtime":1545792990747},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1545803960479},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"./processManage.less\";\r\n",{"version":3,"sources":["processNodeEdit.vue"],"names":[],"mappings":";AACA","file":"processNodeEdit.vue","sourceRoot":"src\\views\\activiti\\process-manage","sourcesContent":["<style lang=\"less\">\r\n@import \"./processManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <p slot=\"title\">{{processName}} 流程节点设置</p>\r\n          <Row type=\"flex\" justify=\"start\" class=\"code-row-bg\">\r\n            <Col span=\"6\">\r\n              <Alert show-icon>\r\n                当前选择编辑：\r\n                <span class=\"select-title\">{{editTitle}}</span>\r\n                <a class=\"select-clear\" v-if=\"form.id\" @click=\"cancelEdit\">取消选择</a>\r\n              </Alert>\r\n              <div class=\"tree-bar\">\r\n                <Tree\r\n                  ref=\"tree\"\r\n                  :data=\"data\"\r\n                  :render=\"renderContent\"\r\n                  @on-select-change=\"selectTree\"\r\n                ></Tree>\r\n              </div>\r\n              <Spin size=\"large\" fix v-if=\"loading\"></Spin>\r\n            </Col>\r\n            <Col span=\"9\">\r\n              <Form\r\n                ref=\"form\"\r\n                :model=\"form\"\r\n                :label-width=\"90\"\r\n                :rules=\"formValidate\"\r\n                style=\"position:relative\"\r\n              >\r\n                <FormItem label=\"节点名称\" prop=\"title\">{{form.title}}</FormItem>\r\n                <Form-item label=\"节点类型\" prop=\"type\">\r\n                  <Select v-model=\"form.type\" disabled placeholder>\r\n                    <Option\r\n                      v-for=\"(item, i) in dictNodeType\"\r\n                      :key=\"i\"\r\n                      :value=\"item.value\"\r\n                    >{{item.title}}</Option>\r\n                  </Select>\r\n                </Form-item>\r\n                <div v-if=\"form.type==1\">\r\n                  <FormItem label=\"可审批人员\">\r\n                    <Checkbox v-model=\"chooseRole\" label=\"0\" @on-change=\"clickRole\">\r\n                      <Icon type=\"md-people\" size=\"14\" style=\"margin:0 2px 2px 0\"></Icon>\r\n                      <span>根据角色选择</span>\r\n                    </Checkbox>\r\n                    <Checkbox v-model=\"chooseUser\" label=\"1\" @on-change=\"clickUser\">\r\n                      <Icon type=\"md-person\" style=\"margin:0 2px 2px 0\"></Icon>\r\n                      <span>直接选择人员</span>\r\n                    </Checkbox>\r\n                  </FormItem>\r\n                  <FormItem label=\"选择角色\" v-if=\"chooseRole\">\r\n                    <Select v-model=\"form.roles\" multiple>\r\n                      <Option\r\n                        v-for=\"item in roleList\"\r\n                        :value=\"item.id\"\r\n                        :key=\"item.id\"\r\n                        :label=\"item.name\"\r\n                      >\r\n                        <span style=\"margin-right:10px;\">{{ item.name }}</span>\r\n                        <span style=\"color:#ccc;\">{{ item.description }}</span>\r\n                      </Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                  <div v-if=\"chooseUser\">\r\n                    <FormItem label=\"选择用户\">\r\n                      <Button @click=\"userModalVisible=true\" icon=\"md-person-add\">选择用户</Button>\r\n                    </FormItem>\r\n                    <FormItem label>\r\n                      <Collapse simple>\r\n                        <Panel name=\"1\">\r\n                          已选择\r\n                          <span class=\"select-count\">{{selectUserCount}}</span> 人\r\n                          <p slot=\"content\">\r\n                            <Tag\r\n                              v-for=\"(item, i) in selectUsers\"\r\n                              :key=\"i\"\r\n                              :name=\"item.id\"\r\n                              color=\"default\"\r\n                              closable\r\n                              @on-close=\"handleCancelUser\"\r\n                            >{{item.username}}</Tag>\r\n                          </p>\r\n                        </Panel>\r\n                      </Collapse>\r\n                    </FormItem>\r\n                  </div>\r\n                </div>\r\n                <Form-item class=\"br\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    :loading=\"submitLoading\"\r\n                    @click=\"handelSubmit\"\r\n                    icon=\"ios-create-outline\"\r\n                  >保存并提交</Button>\r\n                  <Button @click=\"closeCurrentPage\">关闭</Button>\r\n                </Form-item>\r\n                <Spin size=\"large\" fix v-if=\"nodeLoading\"></Spin>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <!-- Drawer抽屉式选择用户 -->\r\n    <Drawer title=\"选择用户\" closable v-model=\"userModalVisible\" width=\"800\">\r\n      <Form\r\n        ref=\"searchUserForm\"\r\n        :model=\"searchUserForm\"\r\n        inline\r\n        :label-width=\"55\"\r\n        class=\"search-form\"\r\n      >\r\n        <Form-item label=\"用户名\" prop=\"username\">\r\n          <Input\r\n            type=\"text\"\r\n            v-model=\"searchUserForm.username\"\r\n            clearable\r\n            placeholder=\"请输入用户名\"\r\n            style=\"width: 200px\"\r\n          />\r\n        </Form-item>\r\n        <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n          <Button @click=\"handleSearchUser\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n          <Button @click=\"handleResetUser\">重置</Button>\r\n        </Form-item>\r\n      </Form>\r\n      <Table :loading=\"userLoading\" border :columns=\"userColumns\" :data=\"userData\" ref=\"userTable\"></Table>\r\n      <Row type=\"flex\" justify=\"end\" class=\"code-row-bg page\" style=\"margin: 10px 0;\">\r\n        <Page\r\n          :current=\"searchUserForm.pageNumber\"\r\n          :total=\"totalUser\"\r\n          :page-size=\"searchUserForm.pageSize\"\r\n          @on-change=\"changeUserPage\"\r\n          @on-page-size-change=\"changeUserPageSize\"\r\n          :page-size-opts=\"[9,18,36]\"\r\n          size=\"small\"\r\n          show-total\r\n          show-elevator\r\n          show-sizer\r\n        ></Page>\r\n      </Row>\r\n      <div class=\"drawer-footer\">\r\n        已选择\r\n        <span class=\"select-count\">{{selectUserCount}}</span> 人\r\n        <Button @click=\"clearSelectAllUser\" style=\"margin-left:10px\">清空已选</Button>\r\n        <Button @click=\"userModalVisible=false\" style=\"margin-left:5px\" type=\"primary\">关闭</Button>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getProcessNode, editNodeUser } from \"@/api/activiti\";\r\nimport {\r\n  getUserListData,\r\n  getAllRoleList,\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\nexport default {\r\n  name: \"process_node_edit\",\r\n  data() {\r\n    return {\r\n      loading: false, // 表单加载状态\r\n      nodeLoading: false,\r\n      userLoading: true,\r\n      data: [],\r\n      editTitle: \"\",\r\n      selectUserCount: 0,\r\n      selectUsers: [],\r\n      userModalVisible: false,\r\n      modalTitle: \"\", // 添加或编辑标题\r\n      form: {\r\n        // 添加或编辑表单对象初始化数据\r\n        title: \"\",\r\n        content: \"\",\r\n        type: null,\r\n        roles: []\r\n      },\r\n      roleList: [],\r\n      searchUserForm: {\r\n        username: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 9, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\" // 默认排序方式\r\n      },\r\n      formValidate: {\r\n        // 表单验证规则\r\n      },\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      chooseRole: false,\r\n      chooseUser: false,\r\n      userColumns: [\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"username\",\r\n          width: 145,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属部门\",\r\n          key: \"departmentTitle\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"手机\",\r\n          key: \"mobile\",\r\n          width: 115,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\",\r\n          width: 180,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"性别\",\r\n          key: \"sex\",\r\n          width: 70,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictSex.forEach(e => {\r\n              if (e.value == params.row.sex) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 1) {\r\n              re = \"管理员\";\r\n            } else if (params.row.type === 0) {\r\n              re = \"普通用户\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 120,\r\n          render: (h, params) => {\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 130,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.selectUser(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"添加该用户\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      userData: [],\r\n      totalUser: 0,\r\n      dictNodeType: [],\r\n      dictSex: [],\r\n      backRoute: \"\",\r\n      processName: \"\",\r\n      processId: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getUserDataList();\r\n      this.getDictDataType();\r\n      this.getRoleList();\r\n      this.backRoute = this.$route.query.backRoute;\r\n      this.processId = this.$route.query.id;\r\n      this.processName = this.$route.query.name;\r\n    },\r\n    getDictDataType() {\r\n      getDictDataByType(\"process_node_type\").then(res => {\r\n        if (res.success) {\r\n          this.dictNodeType = res.result;\r\n          this.getData();\r\n        }\r\n      });\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"sex\").then(res => {\r\n        if (res.success) {\r\n          this.dictSex = res.result;\r\n        }\r\n      });\r\n    },\r\n    getRoleList() {\r\n      getAllRoleList().then(res => {\r\n        if (res.success === true) {\r\n          this.roleList = res.result;\r\n        }\r\n      });\r\n    },\r\n    getData() {\r\n      this.loading = true;\r\n      getProcessNode(this.processId).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          // 转换null为\"\"\r\n          let v = res.result;\r\n          for (let attr in v) {\r\n            if (v[attr] === null) {\r\n              v[attr] = \"\";\r\n            }\r\n          }\r\n          let str = JSON.stringify(v);\r\n          let data = JSON.parse(str);\r\n          data.forEach(e => {\r\n            this.dictNodeType.forEach(t => {\r\n              t.value = Number(t.value);\r\n              if (!e.title && e.type == t.value) {\r\n                e.title = t.title;\r\n              }\r\n            });\r\n          });\r\n          this.data = data;\r\n        }\r\n      });\r\n    },\r\n    renderContent(h, { root, node, data }) {\r\n      let color = \"\",\r\n        word = \"\";\r\n      if (data.type == 0) {\r\n        color = \"#47cb89\";\r\n        word = \"开\";\r\n      } else if (data.type == 1) {\r\n        color = \"#2db7f5\";\r\n        word = \"审\";\r\n      } else if (data.type == 2) {\r\n        word = \"结\";\r\n      } else {\r\n        color = \"#f90\";\r\n        word = \"其他\";\r\n      }\r\n      return h(\r\n        \"span\",\r\n        {\r\n          style: {\r\n            display: \"inline-block\",\r\n            cursor: \"pointer\"\r\n          },\r\n          on: {\r\n            click: () => {\r\n              this.selectTree(data);\r\n            }\r\n          }\r\n        },\r\n        [\r\n          h(\"span\", [\r\n            h(\r\n              \"Avatar\",\r\n              {\r\n                props: {\r\n                  size: \"small\"\r\n                },\r\n                style: {\r\n                  background: color,\r\n                  \"margin-right\": \"5px\"\r\n                }\r\n              },\r\n              word\r\n            ),\r\n            h(\"span\", data.title)\r\n          ])\r\n        ]\r\n      );\r\n    },\r\n    selectTree(v) {\r\n      if (v) {\r\n        // 转换null为\"\"\r\n        for (let attr in v) {\r\n          if (v[attr] === null) {\r\n            v[attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v);\r\n        let data = JSON.parse(str);\r\n        this.selectUsers = data.users;\r\n        this.selectUserCount = data.users.length;\r\n        this.editTitle = data.title;\r\n        if (data.users && data.users.length > 0) {\r\n          this.chooseUser = true;\r\n        } else {\r\n          this.chooseUser = false;\r\n        }\r\n        if (data.roles && data.roles.length > 0) {\r\n          this.chooseRole = true;\r\n          let roleIds = [];\r\n          data.roles.forEach(e => {\r\n            roleIds.push(e.id);\r\n          });\r\n          data.roles = roleIds;\r\n        } else {\r\n          this.chooseRole = false;\r\n        }\r\n        this.form = data;\r\n      } else {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      let data = this.$refs.tree.getSelectedNodes()[0];\r\n      if (data) {\r\n        data.selected = false;\r\n      }\r\n      this.isMenu = false;\r\n      this.isButton = false;\r\n      this.$refs.form.resetFields();\r\n      delete this.form.id;\r\n      this.editTitle = \"\";\r\n    },\r\n    changeUserPage(v) {\r\n      this.searchUserForm.pageNumber = v;\r\n      this.getUserDataList();\r\n    },\r\n    changeUserPageSize(v) {\r\n      this.searchUserForm.pageSize = v;\r\n      this.getUserDataList();\r\n    },\r\n    getUserDataList() {\r\n      this.userLoading = true;\r\n      getUserListData(this.searchUserForm).then(res => {\r\n        this.userLoading = false;\r\n        if (res.success === true) {\r\n          this.userData = res.result.content;\r\n          this.totalUser = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearchUser() {\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      this.getUserDataList();\r\n    },\r\n    handleResetUser() {\r\n      this.$refs.searchUserForm.resetFields();\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      // 重新加载数据\r\n      this.getUserDataList();\r\n    },\r\n    handelSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          // 用户id数据\r\n          let ids = [];\r\n          this.selectUsers.forEach(e => {\r\n            ids += e.id + \",\";\r\n          });\r\n          if (ids.length > 0) {\r\n            ids = ids.substring(0, ids.length - 1);\r\n          }\r\n          this.form.nodeId = this.form.id;\r\n          if (this.chooseUser) {\r\n            this.form.userIds = ids;\r\n          } else {\r\n            this.form.userIds = [];\r\n          }\r\n          if (this.chooseRole) {\r\n            this.form.roleIds = this.form.roles;\r\n          } else {\r\n            this.form.roleIds = [];\r\n          }\r\n          editNodeUser(this.form).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getData();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    clickRole(v) {\r\n      this.chooseRole = v;\r\n    },\r\n    clickUser(v) {\r\n      this.chooseUser = v;\r\n    },\r\n    selectUser(v) {\r\n      // 去重\r\n      let that = this;\r\n      let flag = true;\r\n      this.selectUsers.forEach(e => {\r\n        if (v.id == e.id) {\r\n          that.$Message.warning(\"已经添加该用户，请勿重复选择\");\r\n          flag = false;\r\n        }\r\n      });\r\n      if (flag) {\r\n        let u = {\r\n          id: v.id,\r\n          username: v.username\r\n        };\r\n        this.selectUsers.push(u);\r\n        this.selectUserCount += 1;\r\n        this.$Message.success(\"选择成功\");\r\n      }\r\n    },\r\n    handleCancelUser(e, id) {\r\n      // 删除所选用户\r\n      let newArray = [];\r\n      this.selectUsers.forEach(e => {\r\n        if (id != e.id) {\r\n          newArray.push(e);\r\n        }\r\n      });\r\n      this.selectUsers = newArray;\r\n      this.selectUserCount = newArray.length;\r\n      this.$Message.success(\"删除所选用户成功\");\r\n    },\r\n    clearSelectAllUser() {\r\n      this.selectUserCount = 0;\r\n      this.selectUsers = [];\r\n    },\r\n    // 关闭当前页面\r\n    closeCurrentPage() {\r\n      this.$store.commit(\"removeTag\", \"process_node_edit\");\r\n      localStorage.pageOpenedList = JSON.stringify(\r\n        this.$store.state.app.pageOpenedList\r\n      );\r\n      this.$router.push({\r\n        name: this.backRoute\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  watch: {\r\n    // 监听路由变化\r\n    $route(to, from) {\r\n      if (to.name == \"process_node_edit\") {\r\n        this.init();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"]}]}