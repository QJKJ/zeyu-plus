{"remainingRequest":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\sys\\message-manage\\addOrEditMessage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\sys\\message-manage\\addOrEditMessage.vue","mtime":1546412367977},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1545803960479},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"Z:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"./messageManage.less\";\r\n",{"version":3,"sources":["addOrEditMessage.vue"],"names":[],"mappings":";AACA","file":"addOrEditMessage.vue","sourceRoot":"src\\views\\sys\\message-manage","sourcesContent":["<style lang=\"less\">\r\n@import \"./messageManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <p slot=\"title\">\r\n            <span v-if=\"type==0\">发送新消息</span>\r\n            <span v-else>编辑消息</span>\r\n          </p>\r\n          <Row>\r\n            <Form\r\n              ref=\"form\"\r\n              :model=\"form\"\r\n              :label-width=\"70\"\r\n              :rules=\"formValidate\"\r\n              style=\"position:relative\"\r\n            >\r\n              <FormItem label=\"消息类型\" prop=\"type\">\r\n                <Select v-model=\"form.type\" placeholder=\"请选择\" style=\"width:250px\">\r\n                  <Option\r\n                    v-for=\"(item, i) in dictMessageType\"\r\n                    :key=\"i\"\r\n                    :value=\"Number(item.value)\"\r\n                  >{{item.title}}</Option>\r\n                </Select>\r\n              </FormItem>\r\n              <FormItem label=\"标题\" prop=\"title\">\r\n                <Input v-model=\"form.title\" style=\"width:600px\"/>\r\n              </FormItem>\r\n              <FormItem label=\"内容\" prop=\"content\">\r\n                <div ref=\"editor\"></div>\r\n              </FormItem>\r\n              <Form-item label class=\"br\">\r\n                <Button @click=\"editHTML\" icon=\"ios-create-outline\">编辑HTML代码</Button>\r\n                <Button @click=\"fullscreenModal=true\" icon=\"md-eye\">全屏预览</Button>\r\n              </Form-item>\r\n              <FormItem label=\"新创建账号也推送\" prop=\"createSend\">\r\n                <i-switch size=\"large\" v-model=\"form.createSend\">\r\n                  <span slot=\"open\">开启</span>\r\n                  <span slot=\"close\">关闭</span>\r\n                </i-switch>\r\n              </FormItem>\r\n              <div v-if=\"type==0\">\r\n                <FormItem label=\"发送范围\">\r\n                  <RadioGroup v-model=\"form.range\" @on-change=\"changeRange\">\r\n                    <Radio :label=\"0\">全体用户</Radio>\r\n                    <Radio :label=\"1\">指定用户成员</Radio>\r\n                  </RadioGroup>\r\n                </FormItem>\r\n                <div>\r\n                  <FormItem label=\"选择用户\" v-if=\"showChooseUser\">\r\n                    <Button @click=\"userModalVisible=true\" icon=\"md-person-add\">选择发送用户</Button>\r\n                  </FormItem>\r\n                  <FormItem label>\r\n                    <Collapse simple>\r\n                      <Panel name=\"1\">已选择\r\n                        <span class=\"select-count\">{{selectUserCount}}</span> 人\r\n                        <p slot=\"content\" v-if=\"showChooseUser\">\r\n                          <Tag\r\n                            v-for=\"(item, i) in selectUsers\"\r\n                            :key=\"i\"\r\n                            :name=\"item.id\"\r\n                            color=\"default\"\r\n                            closable\r\n                            @on-close=\"handleCancelUser\"\r\n                          >{{item.username}}</Tag>\r\n                        </p>\r\n                        <p slot=\"content\" v-else>\r\n                          <span>所有用户</span>\r\n                        </p>\r\n                      </Panel>\r\n                    </Collapse>\r\n                  </FormItem>\r\n                </div>\r\n              </div>\r\n              <Form-item class=\"br\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  :loading=\"submitLoading\"\r\n                  @click=\"handelSubmit\"\r\n                  style=\"width:100px\"\r\n                >提交</Button>\r\n                <Button @click=\"handelCancel\">取消</Button>\r\n              </Form-item>\r\n              <Spin size=\"large\" fix v-if=\"loading\"></Spin>\r\n            </Form>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <!-- Drawer抽屉式选择用户 -->\r\n    <Drawer title=\"选择用户\" closable v-model=\"userModalVisible\" width=\"800\">\r\n      <Form\r\n        ref=\"searchUserForm\"\r\n        :model=\"searchUserForm\"\r\n        inline\r\n        :label-width=\"55\"\r\n        class=\"search-form\"\r\n      >\r\n        <Form-item label=\"用户名\" prop=\"username\">\r\n          <Input\r\n            type=\"text\"\r\n            v-model=\"searchUserForm.username\"\r\n            clearable\r\n            placeholder=\"请输入用户名\"\r\n            style=\"width: 200px\"\r\n          />\r\n        </Form-item>\r\n        <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n          <Button @click=\"handleSearchUser\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n          <Button @click=\"handleResetUser\">重置</Button>\r\n        </Form-item>\r\n      </Form>\r\n      <Table :loading=\"userLoading\" border :columns=\"userColumns\" :data=\"userData\" ref=\"userTable\"></Table>\r\n      <Row type=\"flex\" justify=\"end\" class=\"code-row-bg page\" style=\"margin: 10px 0;\">\r\n        <Page\r\n          :current=\"searchUserForm.pageNumber\"\r\n          :total=\"totalUser\"\r\n          :page-size=\"searchUserForm.pageSize\"\r\n          @on-change=\"changeUserPage\"\r\n          @on-page-size-change=\"changeUserPageSize\"\r\n          :page-size-opts=\"[9,18,36]\"\r\n          size=\"small\"\r\n          show-total\r\n          show-elevator\r\n          show-sizer\r\n        ></Page>\r\n      </Row>\r\n      <div class=\"drawer-footer\">已选择\r\n        <span class=\"select-count\">{{selectUserCount}}</span> 人\r\n        <Button @click=\"clearSelectAllUser\" style=\"margin-left:10px\">清空已选</Button>\r\n        <Button @click=\"userModalVisible=false\" style=\"margin-left:5px\" type=\"primary\">关闭</Button>\r\n      </div>\r\n    </Drawer>\r\n    <!-- html编辑 -->\r\n    <Modal\r\n      title=\"编辑html代码\"\r\n      v-model=\"showHTMLModal\"\r\n      :mask-closable=\"false\"\r\n      :width=\"900\"\r\n      :fullscreen=\"full\"\r\n    >\r\n      <Input\r\n        v-if=\"!full\"\r\n        v-model=\"dataEdit\"\r\n        :autosize=\"true\"\r\n        type=\"textarea\"\r\n        style=\"max-height:60vh;overflow:auto\"\r\n      />\r\n      <Input v-if=\"full\" v-model=\"dataEdit\" :autosize=\"true\" type=\"textarea\"/>\r\n      <div slot=\"footer\">\r\n        <Button @click=\"full=!full\" icon=\"md-expand\">全屏开/关</Button>\r\n        <Button @click=\"editHTMLOk\" type=\"primary\" icon=\"md-checkmark-circle-outline\">确定保存</Button>\r\n      </div>\r\n    </Modal>\r\n    <Modal title=\"预览\" v-model=\"fullscreenModal\" fullscreen>\r\n      <div v-html=\"form.content\">{{form.content}}</div>\r\n      <div slot=\"footer\">\r\n        <Button @click=\"fullscreenModal=false\">关闭</Button>\r\n      </div>\r\n    </Modal>\r\n    <!-- Modal弹出式选择用户 -->\r\n    <!-- <Modal title=\"选择用户\" v-model=\"userModalVisible\" :width=\"1200\" :styles=\"{top: '30px'}\">\r\n      <Form ref=\"searchUserForm\" :model=\"searchUserForm\" inline :label-width=\"70\" class=\"search-form\">\r\n        <Form-item label=\"搜索用户\" prop=\"username\">\r\n          <Input type=\"text\" v-model=\"searchUserForm.username\" clearable placeholder=\"请输入用户名\" style=\"width: 250px\"/>\r\n        </Form-item>\r\n        <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n          <Button @click=\"handleSearchUser\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n          <Button @click=\"handleResetUser\">重置</Button>\r\n        </Form-item>\r\n      </Form>\r\n      <Table :loading=\"userLoading\" border :columns=\"userColumns\" :data=\"userData\" ref=\"userTable\"></Table>\r\n      <Row type=\"flex\" justify=\"end\" class=\"code-row-bg page\" style=\"margin-top: 10px;\">\r\n        <Page :current=\"searchUserForm.pageNumber\" :total=\"total\" :page-size=\"searchUserForm.pageSize\" @on-change=\"changeUserPage\" @on-page-size-change=\"changeUserPageSize\" :page-size-opts=\"[9,18,36]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n      </Row>\r\n      <div slot=\"footer\">\r\n        已选择 <span class=\"select-count\">{{selectUserCount}}</span> 人\r\n        <Button @click=\"clearSelectAllUser\" style=\"margin-left:10px\">清空已选</Button>\r\n        <Button @click=\"userModalVisible=false\" style=\"margin-left:5px\" type=\"primary\">关闭</Button>\r\n      </div>\r\n    </Modal>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getUserListData,\r\n  getMessageDataById,\r\n  addMessage,\r\n  editMessage,\r\n  getDictDataByType,\r\n  uploadFile\r\n} from \"@/api/index\";\r\nimport E from \"wangeditor\";\r\n// 表情包配置 自定义表情可在该js文件中统一修改\r\nimport { sina } from \"@/libs/emoji\";\r\nlet editor = null;\r\nvar xss = require(\"xss\");\r\nexport default {\r\n  name: \"add_edit_message\",\r\n  data() {\r\n    return {\r\n      type: 0,\r\n      loading: false, // 表单加载状态\r\n      userLoading: true,\r\n      selectUserCount: 0,\r\n      selectUsers: [],\r\n      userModalVisible: false,\r\n      modalTitle: \"\", // 添加或编辑标题\r\n      showChooseUser: false,\r\n      form: {\r\n        // 添加或编辑表单对象初始化数据\r\n        title: \"\",\r\n        content: \"\",\r\n        type: 0,\r\n        range: 0\r\n      },\r\n      searchUserForm: {\r\n        username: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 9, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\" // 默认排序方式\r\n      },\r\n      formValidate: {\r\n        // 表单验证规则\r\n        title: [{ required: true, message: \"标题不能为空\", trigger: \"blur\" }],\r\n        content: [{ required: true, message: \"内容不能为空\", trigger: \"blur\" }]\r\n      },\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      userColumns: [\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"username\",\r\n          width: 145,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属部门\",\r\n          key: \"departmentTitle\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"手机\",\r\n          key: \"mobile\",\r\n          width: 115,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\",\r\n          width: 180,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"性别\",\r\n          key: \"sex\",\r\n          width: 70,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictSex.forEach(e => {\r\n              if (e.value == params.row.sex) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 1) {\r\n              re = \"管理员\";\r\n            } else if (params.row.type === 0) {\r\n              re = \"普通用户\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 120,\r\n          render: (h, params) => {\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 130,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.chooseUser(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"添加该用户\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      userData: [],\r\n      totalUser: 0,\r\n      dictMessageType: [],\r\n      dictSex: [],\r\n      dataEdit: \"\", // 编辑数据\r\n      showHTMLModal: false, // 显示html\r\n      full: false, // html全屏开关\r\n      fullscreenModal: false, // 显示全屏预览\r\n      backRoute: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getUserDataList();\r\n      this.getDictDataType();\r\n      this.initEditor();\r\n      this.type = this.$route.query.type;\r\n      this.backRoute = this.$route.query.backRoute;\r\n      if (this.type == 1) {\r\n        this.form.id = this.$route.query.id;\r\n        this.getData();\r\n      }\r\n    },\r\n    initEditor() {\r\n      let that = this;\r\n      editor = new E(this.$refs.editor);\r\n      editor.customConfig.onchange = html => {\r\n        this.form.content = xss(html);\r\n      };\r\n      editor.customConfig.uploadImgServer = uploadFile;\r\n      editor.customConfig.uploadImgHeaders = {\r\n        accessToken: that.getStore(\"accessToken\")\r\n      };\r\n      editor.customConfig.uploadFileName = \"file\";\r\n      editor.customConfig.uploadImgHooks = {\r\n        before: function(xhr, editor, files) {},\r\n        success: function(xhr, editor, result) {},\r\n        fail: function(xhr, editor, result) {\r\n          that.$Message.error(\"上传图片失败\");\r\n        },\r\n        error: function(xhr, editor) {\r\n          that.$Message.error(\"上传图片出错\");\r\n        },\r\n        timeout: function(xhr, editor) {\r\n          that.$Message.error(\"上传图片超时\");\r\n        },\r\n        customInsert: function(insertImg, result, editor) {\r\n          if (result.success === true) {\r\n            let url = result.result;\r\n            insertImg(url);\r\n            that.$Message.success(\"上传图片成功\");\r\n          } else {\r\n            that.$Message.error(result.message);\r\n          }\r\n        }\r\n      };\r\n      editor.customConfig.fontNames = [\"微软雅黑\", \"宋体\", \"黑体\", \"Arial\"];\r\n      editor.customConfig.emotions = [\r\n        {\r\n          title: \"新浪\",\r\n          type: \"image\",\r\n          content: sina\r\n        }\r\n      ];\r\n      editor.create();\r\n    },\r\n    editHTML() {\r\n      this.dataEdit = this.form.content;\r\n      this.showHTMLModal = true;\r\n    },\r\n    editHTMLOk() {\r\n      editor.txt.html(this.dataEdit);\r\n      this.form.content = xss(this.dataEdit);\r\n      this.showHTMLModal = false;\r\n    },\r\n    getDictDataType() {\r\n      getDictDataByType(\"message_type\").then(res => {\r\n        if (res.success) {\r\n          this.dictMessageType = res.result;\r\n        }\r\n      });\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"sex\").then(res => {\r\n        if (res.success) {\r\n          this.dictSex = res.result;\r\n        }\r\n      });\r\n    },\r\n    getData() {\r\n      this.loading = true;\r\n      getMessageDataById(this.form.id).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          // 转换null为\"\"\r\n          let v = res.result;\r\n          for (let attr in v) {\r\n            if (v[attr] === null) {\r\n              v[attr] = \"\";\r\n            }\r\n          }\r\n          let str = JSON.stringify(v);\r\n          let data = JSON.parse(str);\r\n          editor.txt.html(data.content);\r\n          this.form = data;\r\n        }\r\n      });\r\n    },\r\n    changeUserPage(v) {\r\n      this.searchUserForm.pageNumber = v;\r\n      this.getUserDataList();\r\n    },\r\n    changeUserPageSize(v) {\r\n      this.searchUserForm.pageSize = v;\r\n      this.getUserDataList();\r\n    },\r\n    getUserDataList() {\r\n      this.userLoading = true;\r\n      getUserListData(this.searchUserForm).then(res => {\r\n        this.userLoading = false;\r\n        if (res.success === true) {\r\n          this.userData = res.result.content;\r\n          this.totalUser = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearchUser() {\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      this.getUserDataList();\r\n    },\r\n    handleResetUser() {\r\n      this.$refs.searchUserForm.resetFields();\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      // 重新加载数据\r\n      this.getUserDataList();\r\n    },\r\n    handelSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.type === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.form.id;\r\n            // 用户id数据\r\n            let ids = [];\r\n            this.selectUsers.forEach(e => {\r\n              ids += e.id + \",\";\r\n            });\r\n            if (ids.length > 0) {\r\n              ids = ids.substring(0, ids.length - 1);\r\n            }\r\n            this.form.userIds = ids;\r\n            addMessage(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.closeCurrentPage();\r\n              }\r\n            });\r\n          } else if (this.type === 1) {\r\n            // 编辑\r\n            editMessage(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.closeCurrentPage();\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    changeRange(v) {\r\n      if (v == 0) {\r\n        this.showChooseUser = false;\r\n        this.selectUserCount = this.totalUser;\r\n      } else {\r\n        this.showChooseUser = true;\r\n        this.clearSelectAllUser();\r\n      }\r\n    },\r\n    chooseUser(v) {\r\n      // 去重\r\n      let that = this;\r\n      let flag = true;\r\n      this.selectUsers.forEach(e => {\r\n        if (v.id == e.id) {\r\n          that.$Message.warning(\"刚才已经选择过啦，请勿重复选择\");\r\n          flag = false;\r\n        }\r\n      });\r\n      if (flag) {\r\n        let u = {\r\n          id: v.id,\r\n          username: v.username\r\n        };\r\n        this.selectUsers.push(u);\r\n        this.selectUserCount += 1;\r\n        this.$Message.success(\"选择成功\");\r\n      }\r\n    },\r\n    handleCancelUser(e, id) {\r\n      // 删除所选用户\r\n      let newArray = [];\r\n      this.selectUsers.forEach(e => {\r\n        if (id != e.id) {\r\n          newArray.push(e);\r\n        }\r\n      });\r\n      this.selectUsers = newArray;\r\n      this.selectUserCount = newArray.length;\r\n      this.$Message.success(\"删除所选用户成功\");\r\n    },\r\n    clearSelectAllUser() {\r\n      this.selectUserCount = 0;\r\n      this.selectUsers = [];\r\n    },\r\n    handelCancel() {\r\n      this.closeCurrentPage();\r\n    },\r\n    // 关闭当前页面\r\n    closeCurrentPage() {\r\n      this.$store.commit(\"removeTag\", \"add_edit_message\");\r\n      localStorage.pageOpenedList = JSON.stringify(\r\n        this.$store.state.app.pageOpenedList\r\n      );\r\n      this.$router.push({\r\n        name: this.backRoute\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  watch: {\r\n    // 监听路由变化\r\n    $route(to, from) {\r\n      if (to.name == \"add_edit_message\") {\r\n        this.type = this.$route.query.type;\r\n        if (this.type == 1) {\r\n          this.form.id = this.$route.query.id;\r\n          this.getData();\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"]}]}