{"remainingRequest":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\activiti\\process-manage\\processManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\src\\views\\activiti\\process-manage\\processManage.vue","mtime":1545792990747},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1545803960479},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545803981415},{"path":"D:\\zeyu\\zeyu-plus\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"./processManage.less\";\r\n",{"version":3,"sources":["processManage.vue"],"names":[],"mappings":";AACA","file":"processManage.vue","sourceRoot":"src\\views\\activiti\\process-manage","sourcesContent":["<style lang=\"less\">\r\n@import \"./processManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Card>\r\n        <Row>\r\n          <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\">\r\n            <Form-item label=\"流程名称\" prop=\"name\">\r\n              <Input\r\n                type=\"text\"\r\n                v-model=\"searchForm.name\"\r\n                placeholder=\"请输入名称\"\r\n                clearable\r\n                style=\"width: 200px\"\r\n              />\r\n            </Form-item>\r\n            <Form-item label=\"标识Key\" prop=\"processKey\">\r\n              <Input\r\n                type=\"text\"\r\n                v-model=\"searchForm.processKey\"\r\n                placeholder=\"请输入标识\"\r\n                clearable\r\n                style=\"width: 200px\"\r\n              />\r\n            </Form-item>\r\n            <Form-item label=\"部署时间\">\r\n              <DatePicker\r\n                v-model=\"selectDate\"\r\n                type=\"daterange\"\r\n                format=\"yyyy-MM-dd\"\r\n                clearable\r\n                @on-change=\"selectDateRange\"\r\n                placeholder=\"选择起始时间\"\r\n                style=\"width: 200px\"\r\n              ></DatePicker>\r\n            </Form-item>\r\n            <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n              <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n              <Button @click=\"handleReset\">重置</Button>\r\n            </Form-item>\r\n          </Form>\r\n        </Row>\r\n        <Row class=\"operation\">\r\n          <Button @click=\"deploy\" type=\"primary\" icon=\"md-cloud-upload\">部署流程文件</Button>\r\n          <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n          <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\r\n          <i-switch\r\n            size=\"large\"\r\n            v-model=\"searchForm.showLatest\"\r\n            @on-change=\"getDataList\"\r\n            style=\"margin:0 5px\"\r\n          >\r\n            <span slot=\"open\">最新</span>\r\n            <span slot=\"close\">全部</span>\r\n          </i-switch>\r\n          <circleLoading v-if=\"operationLoading\"/>\r\n        </Row>\r\n        <Row>\r\n          <Alert show-icon>\r\n            已选择\r\n            <span class=\"select-count\">{{selectCount}}</span> 项\r\n            <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            <span style=\"margin-left:20px\">说明：当有多个相同标识的流程时，默认仅显示其最新版本</span>\r\n          </Alert>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            :loading=\"loading\"\r\n            border\r\n            :columns=\"columns\"\r\n            :data=\"data\"\r\n            sortable=\"custom\"\r\n            @on-sort-change=\"changeSort\"\r\n            @on-selection-change=\"showSelect\"\r\n            ref=\"table\"\r\n          ></Table>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n          <Page\r\n            :current=\"searchForm.pageNumber\"\r\n            :total=\"total\"\r\n            :page-size=\"searchForm.pageSize\"\r\n            @on-change=\"changePage\"\r\n            @on-page-size-change=\"changePageSize\"\r\n            :page-size-opts=\"[10,20,50]\"\r\n            size=\"small\"\r\n            show-total\r\n            show-elevator\r\n            show-sizer\r\n          ></Page>\r\n        </Row>\r\n      </Card>\r\n    </Row>\r\n    <!-- 部署流程文件 -->\r\n    <Modal\r\n      title=\"部署流程文件\"\r\n      footer-hide\r\n      v-model=\"modalVisible\"\r\n      :mask-closable=\"false\"\r\n      :width=\"500\"\r\n      :styles=\"{top: '30px'}\"\r\n    >\r\n      <Upload\r\n        :action=\"deployByFileUrl\"\r\n        :headers=\"accessToken\"\r\n        :on-success=\"handleSuccess\"\r\n        :on-error=\"handleError\"\r\n        :format=\"['zip','bar','bpmn','xml']\"\r\n        :max-size=\"5120\"\r\n        :on-format-error=\"handleFormatError\"\r\n        :on-exceeded-size=\"handleMaxSize\"\r\n        type=\"drag\"\r\n        ref=\"up\"\r\n      >\r\n        <div style=\"padding: 20px 0\">\r\n          <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"></Icon>\r\n          <p>点击这里或将文件拖拽到这里上传</p>请选择BPMN文件，仅支持zip、bpmn20.xml、bar、bpmn格式文件\r\n        </div>\r\n      </Upload>\r\n    </Modal>\r\n    <!-- 编辑分类或备注 -->\r\n    <Modal\r\n      title=\"编辑流程信息\"\r\n      v-model=\"editModalVisible\"\r\n      :mask-closable=\"false\"\r\n      :width=\"500\"\r\n      :styles=\"{top: '30px'}\"\r\n    >\r\n      <Form ref=\"form\" :model=\"form\" :label-width=\"95\" :rules=\"formValidate\">\r\n        <FormItem label=\"流程分类\">\r\n          <Poptip trigger=\"click\" placement=\"right\" title=\"选择类别\" width=\"250\">\r\n            <div style=\"display:flex;\">\r\n              <Input v-model=\"categoryTitle\" readonly style=\"margin-right:10px;\"/>\r\n              <Button icon=\"md-trash\" @click=\"clearSelectCat\">清空已选</Button>\r\n            </div>\r\n            <div slot=\"content\" class=\"tree-bar\">\r\n              <Input\r\n                v-model=\"searchKey\"\r\n                suffix=\"ios-search\"\r\n                @on-change=\"searchCat\"\r\n                placeholder=\"输入分类名搜索\"\r\n                clearable\r\n              />\r\n              <Tree\r\n                :data=\"dataCat\"\r\n                :load-data=\"loadDataTree\"\r\n                :render=\"renderContent\"\r\n                @on-select-change=\"selectTree\"\r\n              ></Tree>\r\n              <Spin size=\"large\" fix v-if=\"catLoading\"></Spin>\r\n            </div>\r\n          </Poptip>\r\n        </FormItem>\r\n        <FormItem label=\"前端表单路由\" prop=\"routeName\">\r\n          <Input v-model=\"form.routeName\" placeholder=\"输入关联前端表单路由名\"/>\r\n        </FormItem>\r\n        <FormItem label=\"关联业务表\" prop=\"businessTable\">\r\n          <Select v-model=\"form.businessTable\" placeholder=\"请选择关联数据库业务表\" clearable>\r\n            <Option v-for=\"(item, i) in dictTable\" :key=\"i\" :value=\"item.value\" :label=\"item.title\">\r\n              <span style=\"margin-right:10px;\">{{ item.title }}</span>\r\n              <span style=\"color:#ccc;\">{{ item.value }}</span>\r\n            </Option>\r\n            </Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"备注描述\" prop=\"description\">\r\n          <Input v-model=\"form.description\"/>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"editModalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmitEdit\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n    <!-- 图片预览 -->\r\n    <Modal :title=\"viewTitle\" v-model=\"viewImage\" :styles=\"{top: '30px'}\" draggable>\r\n      <img :src=\"diagramUrl\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\">\r\n      <div slot=\"footer\">\r\n        <Button @click=\"viewImage=false\" style=\"margin-right:5px\">关闭</Button>\r\n        <Button :to=\"diagramUrl\" target=\"_blank\" type=\"primary\">下载</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getProcessDataList,\r\n  updateInfo,\r\n  updateStatus,\r\n  deployByFile,\r\n  exportResource,\r\n  convertToModel,\r\n  deleteProcess,\r\n  initActCategory,\r\n  loadActCategory,\r\n  searchActCategory\r\n} from \"@/api/activiti\";\r\nimport { getDictDataByType } from \"@/api/index\";\r\nimport circleLoading from \"../../my-components/circle-loading.vue\";\r\nexport default {\r\n  name: \"process-manage\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      accessToken: {},\r\n      deployByFileUrl: \"\",\r\n      loading: true, // 表单加载状态\r\n      operationLoading: false, // 操作加载状态\r\n      selectCount: 0, // 多选计数\r\n      selectList: [], // 多选数据\r\n      viewImage: false,\r\n      viewTitle: \"流程图片预览\",\r\n      diagramUrl: \"\",\r\n      searchForm: {\r\n        // 搜索框对应data对象\r\n        showLatest: true,\r\n        name: \"\",\r\n        processKey: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\", // 默认排序方式\r\n        startDate: \"\", // 起始时间\r\n        endDate: \"\" // 终止时间\r\n      },\r\n      selectDate: null, // 选择日期绑定modal\r\n      modalVisible: false,\r\n      editModalVisible: false,\r\n      dataCat: [],\r\n      catLoading: false,\r\n      searchKey: \"\",\r\n      form: {\r\n        description: \"\"\r\n      },\r\n      formValidate: {\r\n        routeName: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\r\n        businessTable: [\r\n          { required: true, message: \"不能为空\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      categoryTitle: \"\",\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      columns: [\r\n        // 表头\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"name\",\r\n          width: 150,\r\n          sortable: true,\r\n        },\r\n        {\r\n          title: \"标识Key\",\r\n          key: \"processKey\",\r\n          width: 130,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"所属分类\",\r\n          key: \"categoryTitle\",\r\n          width: 130,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"版本\",\r\n          key: \"version\",\r\n          width: 90,\r\n          align: \"center\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.version) {\r\n              re = \"v.\" + params.row.version;\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 130,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status == 1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"success\"\r\n                    }\r\n                  },\r\n                  \"已激活\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status == 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"error\"\r\n                    }\r\n                  },\r\n                  \"已挂起\"\r\n                )\r\n              ]);\r\n            }\r\n          },\r\n          filters: [\r\n            {\r\n              label: \"已激活\",\r\n              value: 1\r\n            },\r\n            {\r\n              label: \"已挂起\",\r\n              value: 0\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.status === 0;\r\n            } else if (value === 1) {\r\n              return row.status === 1;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"流程图片\",\r\n          key: \"diagramName\",\r\n          width: 160,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"a\",\r\n                {\r\n                  on: {\r\n                    click: () => {\r\n                      this.showResource(1, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                params.row.diagramName\r\n              )\r\n            ]);\r\n          }\r\n        },\r\n        {\r\n          title: \"流程XML\",\r\n          key: \"xmlName\",\r\n          width: 160,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"a\",\r\n                {\r\n                  on: {\r\n                    click: () => {\r\n                      this.showResource(0, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                params.row.xmlName\r\n              )\r\n            ]);\r\n          }\r\n        },\r\n        {\r\n          title: \"表单路由名\",\r\n          key: \"routeName\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"数据库业务表\",\r\n          key: \"businessTable\",\r\n          width: 150,\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictTable.forEach(e => {\r\n              if (e.value == params.row.businessTable) {\r\n                re = `${e.title} (${e.value})`;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"备注描述\",\r\n          key: \"description\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"部署时间\",\r\n          key: \"createTime\",\r\n          width: 150,\r\n          sortable: true,\r\n          sortType: \"desc\"\r\n        },\r\n        {\r\n          title: \"更新时间\",\r\n          key: \"updateTime\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 335,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            let suspendOrActive = \"\";\r\n            if (params.row.status == 0) {\r\n              // 挂起可激活\r\n              suspendOrActive = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"success\",\r\n                    size: \"small\",\r\n                    icon: \"md-play\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.editStatus(1, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"激活\"\r\n              );\r\n            } else {\r\n              // 激活可挂起\r\n              suspendOrActive = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"warning\",\r\n                    size: \"small\",\r\n                    icon: \"md-pause\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.editStatus(0, params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"挂起\"\r\n              );\r\n            }\r\n            return h(\"div\", [\r\n              suspendOrActive,\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\",\r\n                    icon: \"logo-buffer\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.editNode(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"节点设置\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.convert(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"转模型\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      data: [], // 表单数据\r\n      total: 0, // 表单数据总数\r\n      dictTable: []\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n      this.deployByFileUrl = deployByFile;\r\n      this.getDataList();\r\n      this.initCategoryTreeData();\r\n      this.getDictDataType();\r\n    },\r\n    getDictDataType() {\r\n      getDictDataByType(\"business_table\").then(res => {\r\n        if (res.success) {\r\n          this.dictTable = res.result;\r\n        }\r\n      });\r\n    },\r\n    renderContent(h, { root, node, data }) {\r\n      let icon = \"\";\r\n      if (data.type == \"0\") {\r\n        icon = \"md-folder-open\";\r\n      } else if (data.type == \"1\") {\r\n        icon = \"ios-bookmark-outline\";\r\n      }\r\n      return h(\r\n        \"span\",\r\n        {\r\n          style: {\r\n            display: \"inline-block\",\r\n            cursor: \"pointer\"\r\n          },\r\n          on: {\r\n            click: () => {\r\n              this.selectTree(data);\r\n            }\r\n          }\r\n        },\r\n        [\r\n          h(\"span\", [\r\n            h(\"Icon\", {\r\n              props: {\r\n                type: icon,\r\n                size: \"16\"\r\n              },\r\n              style: {\r\n                \"margin-right\": \"8px\",\r\n                \"margin-bottom\": \"3px\"\r\n              }\r\n            }),\r\n            h(\"span\", data.title)\r\n          ])\r\n        ]\r\n      );\r\n    },\r\n    initCategoryTreeData() {\r\n      initActCategory().then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          this.dataCat = res.result;\r\n        }\r\n      });\r\n    },\r\n    loadDataTree(item, callback) {\r\n      loadActCategory(item.id).then(res => {\r\n        if (res.success === true) {\r\n          res.result.forEach(function(e) {\r\n            if (e.isParent) {\r\n              e.loading = false;\r\n              e.children = [];\r\n            }\r\n            if (e.status === -1) {\r\n              e.title = \"[已禁用] \" + e.title;\r\n              e.disabled = true;\r\n            }\r\n          });\r\n          callback(res.result);\r\n        }\r\n      });\r\n    },\r\n    searchCat() {\r\n      // 搜索部门\r\n      if (this.searchKey) {\r\n        this.catLoading = true;\r\n        searchActCategory({ title: this.searchKey }).then(res => {\r\n          this.catLoading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.status === -1) {\r\n                e.title = \"[已禁用] \" + e.title;\r\n                e.disabled = true;\r\n              }\r\n            });\r\n            this.dataCat = res.result;\r\n          }\r\n        });\r\n      } else {\r\n        this.initCategoryTreeData();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v) {\r\n        // 转换null为\"\"\r\n        for (let attr in v) {\r\n          if (v[attr] === null) {\r\n            v[attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v);\r\n        let data = JSON.parse(str);\r\n        if (data.type == 0) {\r\n          this.$Message.warning(\"请选择一个类别\");\r\n          return;\r\n        }\r\n        this.form.categoryId = data.id;\r\n        this.categoryTitle = data.title;\r\n      }\r\n    },\r\n    clearSelectCat() {\r\n      this.form.categoryId = \"\";\r\n      this.categoryTitle = \"\";\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getDataList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getDataList();\r\n    },\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    getDataList() {\r\n      this.loading = true;\r\n      getProcessDataList(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getDataList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      // 重新加载数据\r\n      this.getDataList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getDataList();\r\n    },\r\n    deploy(v) {\r\n      this.modalVisible = true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 .zip .bar .bpmn .bpmn20.xml格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\r\n      });\r\n    },\r\n    handleSuccess(res, file) {\r\n      if (res.success === true) {\r\n        this.$Message.success(\"部署成功，请继续编辑完善流程信息\");\r\n        this.modalVisible = false;\r\n        this.getDataList();\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    edit(v) {\r\n      this.$refs.form.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.categoryTitle = data.categoryTitle;\r\n      this.editModalVisible = true;\r\n    },\r\n    editNode(v) {\r\n      let query = { id: v.id, name: v.name, backRoute: this.$route.name };\r\n      this.$router.push({\r\n        name: \"process_node_edit\",\r\n        query: query\r\n      });\r\n    },\r\n    handelSubmitEdit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          updateInfo(this.form).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n              this.editModalVisible = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    editStatus(status, v) {\r\n      let operation = \"\";\r\n      if (status == 0) {\r\n        operation = \"暂停挂起\";\r\n      } else {\r\n        operation = \"激活运行\";\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认\" + operation,\r\n        content: `您确认要${operation}流程${v.name}?`,\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          let params = {\r\n            status: status,\r\n            id: v.id\r\n          };\r\n          updateStatus(params).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    convert(v) {\r\n      let that = this;\r\n      this.$Modal.confirm({\r\n        title: \"确认转化\",\r\n        content: \"您确认要转化流程 \" + v.name + \" 为模型?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          convertToModel(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              setTimeout(function() {\r\n                that.showJump();\r\n              }, 300);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    showJump() {\r\n      this.$Modal.confirm({\r\n        title: \"转化成功\",\r\n        content: \"是否立即跳转查看该模型?\",\r\n        onOk: () => {\r\n          this.$router.push({\r\n            name: \"model-manage\"\r\n          });\r\n        }\r\n      });\r\n    },\r\n    showResource(type, v) {\r\n      if (type == 0) {\r\n        window.open(`${exportResource}?id=${v.id}&type=${type}&accessToken=${this.getStore(\"accessToken\")}`);\r\n      } else if (type == 1) {\r\n        this.viewTitle = \"流程图片预览(\" + v.diagramName + \")\";\r\n        this.diagramUrl = `${exportResource}?id=${v.id}&type=${type}&accessToken=${this.getStore(\"accessToken\")}`;\r\n        this.viewImage = true;\r\n      }\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除流程 \" + v.name + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          deleteProcess(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    showSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          this.operationLoading = true;\r\n          deleteProcess(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.clearSelectAll();\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  watch: {\r\n    // 监听路由变化\r\n    $route(to, from) {\r\n      if (to.name == \"process-manage\") {\r\n        this.getDataList();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"]}]}